{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","Toggle/Overview.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../../../../src/form/Toggle/toggleHelper.js","../../../../../src/form/Toggle/DSToggleRender.js","../../../../../src/form/Toggle/DSToggleImpl.js","../../../../../src/form/Toggle/DSToggle.js","../node_modules/@elliemae/ds-utilities/cjs/onClickHandlerForNonInteractiveElements.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","ReferenceError","Overview","subClass","superClass","create","value","Derived","protoProps","staticProps","result","Super","NewTarget","this","arguments","apply","state","isChecked","checked","setState","containerProps","id","onChange","handleChange","Component","cleanDrag","startPoint","isDragging","dragStartingPoints","circleWidth","boxWidth","drag","DSToggleRender","className","style","hasError","readOnly","disabled","onBlur","onFocus","onMouseDown","onMouseEnter","onMouseLeave","onTouchCancel","onTouchEnd","onTouchMove","onTouchStart","labelOn","labelOff","dragStyle","containerRef","handRef","name","size","convertPropToCssClassName","cssClassName","classNameBlock","classNameElement","allowChange","aria-disabled","defaultChecked","defaultValue","onClickHandlerForNonInteractiveElements","ref","aria-checked","type","DSToggleImpl","clientX","move","calculateDrag","inside","isValidDrag","newCheck","event","window","React","prevProps","prevState","snapshot","currentCheckState","checkedProp","nodesInterval","setInterval","clearInterval","transform","DSToggle","otherProps","PropTypes","module","exports","onClickHandler","role","tabIndex","onClick","onKeyPress","stopPropagation","keycode"],"mappings":"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","file":"static/js/21.6a0776fc.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { Component } from 'react';\nimport DSToggle from '@elliemae/ds-basic/form/Toggle';\n\nexport default class Overview extends Component {\n  state = {\n    isChecked: true,\n  };\n  handleChange(e) {\n    const { checked } = e.target;\n    this.setState({ isChecked: checked });\n  }\n  render() {\n    const { isChecked } = this.state;\n    return (\n      <div>\n        <DSToggle\n          checked={isChecked}\n          containerProps={{ id: 'my-custom-id' }}\n          onChange={this.handleChange}\n          value=\"myVal\"\n        />\n        <h3>{isChecked ? 'TRUE' : 'FALSE'}</h3>\n      </div>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export const isValidDrag = ({\n  inside,\n  circleWidth,\n  drag,\n  checked,\n  boxWidth,\n}) => {\n  const difference = boxWidth - circleWidth\n  return checked ? !inside && -drag > difference / 2 : !inside && drag > boxWidth / 3\n}\n\nexport const cleanDrag = () => {\n  return {\n    startPoint: null,\n    isDragging: false,\n  }\n}\n\nexport const calculateDrag = (clientX, {\n  startPoint,\n  checked,\n  isDragging,\n  boxWidth,\n  circleWidth,\n}) => {\n  if (!isDragging) return null\n  const move = startPoint - clientX\n  const drag = !checked ? clientX - startPoint : boxWidth - circleWidth - move\n  if (!checked && clientX > 0 && clientX > startPoint && drag < boxWidth * 0.7) return drag\n  if (checked && clientX > 0 && clientX < startPoint && move < boxWidth * 0.7) return drag\n  return null\n}\n\nexport const dragStartingPoints = checked => ({ circleWidth, boxWidth }) => {\n  if (checked) return { drag: boxWidth - circleWidth }\n  return {\n    drag: 0,\n  }\n}\n","import React from 'react'\nimport onClickHandlerForNonInteractiveElements from '@elliemae/ds-utilities/onClickHandlerForNonInteractiveElements'\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames'\n\nconst DSToggleRender = ({\n  containerProps,\n  id,\n  className = '',\n  style = {},\n  hasError = false,\n  readOnly = false,\n  disabled = false,\n  checked = false,\n  onBlur = () => null,\n  onFocus = () => null,\n  onChange = () => null,\n  onMouseDown = () => null,\n  onMouseEnter = () => null,\n  onMouseLeave = () => null,\n  onTouchCancel = () => null,\n  onTouchEnd = () => null,\n  onTouchMove = () => null,\n  onTouchStart = () => null,\n  labelOn = 'ON',\n  labelOff = 'OFF',\n  dragStyle = {},\n  containerRef = null,\n  handRef = null,\n  name = '',\n  value = '',\n  size = 's',\n}) => {\n  const { cssClassName, classNameBlock, classNameElement } = convertPropToCssClassName('form-element-toggle', className, {\n    hasError,\n    readOnly,\n    disabled,\n    checked,\n    id,\n    size,\n  })\n  const allowChange = disabled || readOnly\n  return (\n    <div\n      {...containerProps}\n      aria-disabled={disabled}\n      defaultChecked={checked}\n      defaultValue={value}\n      {...onClickHandlerForNonInteractiveElements(allowChange ? null : onChange)}\n      ref={containerRef}\n      className={cssClassName}\n      onBlur={onBlur}\n      onFocus={onFocus}\n    >\n      <div className={classNameBlock('box')}>\n        { checked && (\n          <div className={classNameElement('icon-on')}>\n            {labelOn}\n          </div>\n        )}\n        { !checked && (\n          <div className={classNameElement('icon-off')}>\n            {labelOff}\n          </div>\n        )}\n      </div>\n      <div\n        ref={handRef}\n        aria-checked={checked}\n        aria-disabled={disabled}\n        className={classNameElement('input')}\n        onMouseDown={allowChange ? null : onMouseDown}\n        onMouseEnter={allowChange ? null : onMouseEnter}\n        onMouseLeave={allowChange ? null : onMouseLeave}\n        onTouchCancel={allowChange ? null : onTouchCancel}\n        onTouchEnd={allowChange ? null : onTouchEnd}\n        onTouchMove={allowChange ? null : onTouchMove}\n        onTouchStart={allowChange ? null : onTouchStart}\n        style={{\n          ...style,\n          ...dragStyle,\n        }}\n      />\n      <input\n        className={classNameElement('hidden-checkbox')}\n        defaultChecked={checked}\n        defaultValue={value}\n        name={name}\n        type='checkbox'\n      />\n    </div>\n  )\n}\n\nexport default DSToggleRender\n","/* eslint-disable max-lines */\nimport React, { Component } from 'react'\nimport {\n  isValidDrag,\n  cleanDrag,\n  calculateDrag,\n  dragStartingPoints,\n} from './toggleHelper'\nimport DSToggleRender from './DSToggleRender'\n\nclass DSToggleImpl extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      checked: props.checked || false,\n      inside: false,\n      isDragging: false,\n      drag: null,\n      startPoint: null,\n      circleWidth: null,\n      boxWidth: null,\n      ...dragStartingPoints(props.checked || false),\n    }\n    this.circle = React.createRef()\n    this.box = React.createRef()\n  }\n  componentDidMount() {\n    this.verifyElements()\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (snapshot) {\n      this.verifyElements()\n    }\n  }\n  /** ******************************************************\n      Drag\n  ******************************************************* **/\n  onDragStart = (clientX) => {\n    const {\n      startPoint,\n      checked,\n      isDragging,\n      boxWidth,\n      circleWidth,\n    } = this.state\n    // const { checked: checkedProp, } = this.props\n    const drag = calculateDrag(clientX, {\n      startPoint,\n      checked,\n      isDragging,\n      boxWidth,\n      circleWidth,\n    })\n    if (drag) this.setState({ drag })\n    // else this.setDragOnChange(checkedProp != null ? checkedProp : checked) // set initial position\n    else this.setDragOnChange(checked) // set initial position\n  }\n  onDragStop = (e) => {\n    const { checked } = this.state\n    // const { checked: checkedProp, } = this.props\n    if (isValidDrag(this.state)) {\n      this.onChange(e)\n      this.setState(cleanDrag)\n    // } else this.setDragOnChange(checkedProp != null ? checkedProp : checked) // set initial position\n    } else this.setDragOnChange(checked) // set initial position\n  }\n  /** ******************************************************\n      StandardEvents\n  ******************************************************* **/\n  onBlur = (e) => {\n    const { onBlur, id } = this.props\n    if (onBlur) onBlur(e, id)\n  }\n  onFocus = (e) => {\n    const { onFocus, id } = this.props\n    if (onFocus) onFocus(e, id)\n  }\n  onChange = (e) => {\n    const { checked } = this.state\n    const {\n      onChange,\n      id,\n      value,\n      // checked: checkedProp,\n    } = this.props\n    const newCheck = !checked\n    // this.setState({\n    //   checked: checkedProp != null ? checkedProp : newCheck,\n    // })\n    this.setState({\n      checked: newCheck,\n    })\n    e.target.value = value\n    e.target.checked = newCheck\n    e.checked = newCheck\n    onChange(e, id)\n    // this.setDragOnChange(checkedProp != null ? checkedProp : newCheck) // set new position\n    this.setDragOnChange(newCheck) // set new position\n  }\n  /** ******************************************************\n      MouseEvents\n  ******************************************************* **/\n  onMouseEnter = () => {\n    this.setState({ inside: true })\n  }\n  onMouseLeave = () => {\n    this.setState({ inside: false })\n  }\n  onMouseMove = (event) => {\n    event.preventDefault()\n    this.onDragStart(event.clientX)\n  }\n  onMouseDown = (event) => {\n    this.onDragStart(event.clientX)\n    this.setState({ startPoint: event.clientX, isDragging: true })\n    window.addEventListener('mousemove', this.onMouseMove)\n    window.addEventListener('mouseup', this.onMouseUp)\n  }\n  onMouseUp = (event) => {\n    this.onDragStop(event)\n    window.removeEventListener('mousemove', this.onMouseMove)\n    window.removeEventListener('mouseup', this.onMouseUp)\n  }\n  /** ******************************************************\n      Touch\n  ******************************************************* **/\n  onTouchCancel = () => {\n    this.setState({ inside: false })\n  }\n  onTouchEnd = (event) => {\n    event.preventDefault()\n    this.onDragStop(event)\n  }\n  onTouchMove = (event) => {\n    this.onDragStart(event.touches[0].clientX)\n  }\n  onTouchStart = (event) => {\n    this.onDragStart(event.touches[0].clientX)\n    this.setState({ startPoint: event.touches[0].clientX, isDragging: true })\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (props.checked != null) {\n      return {\n        checked: props.checked,\n        ...dragStartingPoints(props.checked)(state),\n      }\n    }\n    return null\n  }\n  getSnapshotBeforeUpdate(prevProps) {\n    const { size } = this.props\n    if (prevProps.size !== size) {\n      return true\n    }\n    return false\n  }\n  /** ******************************************************\n      other\n  ******************************************************* **/\n  setDragOnChange(currentCheckState) {\n    this.setState(dragStartingPoints(currentCheckState))\n  }\n  verifyElements() {\n    const { checked } = this.state\n    const {\n      checked: checkedProp,\n    } = this.props\n    const nodesInterval = setInterval(() => { // !important it checks when nodes are availables\n      if (!this.circle || !this.box || !this.circle.current || !this.box.current) return\n      const { current: { clientWidth: circleWidth } } = this.circle\n      const { current: { clientWidth: boxWidth } } = this.box\n      if (!circleWidth || !boxWidth || circleWidth === boxWidth) return\n      this.setState({\n        boxWidth,\n        circleWidth,\n      })\n      this.setDragOnChange(checkedProp != null ? checkedProp : checked)\n      // this.setDragOnChange(checked)\n      clearInterval(nodesInterval)\n    }, 100)\n  }\n  render() {\n    const { checked, drag, inside } = this.state\n    const dragStyle = drag !== null ? { transform: `translateX(${drag}px)` } : null\n    return (\n      <DSToggleRender\n        {...this.props}\n        checked={checked}\n        containerRef={this.box}\n        dragStyle={dragStyle}\n        handRef={this.circle}\n        inside={inside}\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        onFocus={this.onFocus}\n        onMouseDown={this.onMouseDown}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onTouchCancel={this.onTouchCancel}\n        onTouchEnd={this.onTouchEnd}\n        onTouchMove={this.onTouchMove}\n        onTouchStart={this.onTouchStart}\n      />\n    )\n  }\n}\n\nexport default DSToggleImpl\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ToggleImpl from './DSToggleImpl'\nimport { sizes } from '../../utils/prop-types'\n\nconst DSToggle = ({\n  containerProps = {},\n  hasError = false,\n  readOnly = false,\n  disabled = false,\n  checked = undefined,\n  labelOn = 'ON',\n  labelOff = 'OFF',\n  name = '',\n  value = '',\n  size = 's',\n  ...otherProps\n}) => (\n  <ToggleImpl\n    {...otherProps}\n    checked={checked}\n    containerProps={containerProps}\n    disabled={disabled}\n    hasError={hasError}\n    labelOff={labelOff}\n    labelOn={labelOn}\n    name={name}\n    readOnly={readOnly}\n    size={size}\n    value={value}\n  />\n)\n\nDSToggle.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /**\n   * Whether the toggle has error or not\n   */\n  hasError: PropTypes.bool,\n  /**\n   * Whether the toggle is read only or not\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Whether the toggle is disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Whether the toggle is checked or not\n   */\n  checked: PropTypes.bool,\n  /**\n   * Allows a function that is triggered once the toggle changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * Label to show when the toggle is ON\n   */\n  labelOn: PropTypes.string,\n  /**\n   * Label to show when the toggle is OFF\n   */\n  labelOff: PropTypes.string,\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string,\n  /**\n   * ['s', 'm', 'l']\n   */\n  size: PropTypes.oneOf(sizes),\n}\n\nexport default DSToggle\n","'use strict';\n\n/**\n * onClickHandler: callback\n */\nvar onClickHandlerForNonInteractiveElements = (function (onClickHandler) {\n  return {\n    role: 'button',\n    tabIndex: '0',\n    onClick: onClickHandler,\n    onKeyPress: function onKeyPress(event) {\n      event.stopPropagation();\n      var keycode = event.keycode,\n          key = event.key;\n      if (key === 'Enter') onClickHandler(event);else if (keycode === 13) onClickHandler(event);\n    }\n  };\n});\n\nmodule.exports = onClickHandlerForNonInteractiveElements;\n"],"sourceRoot":""}