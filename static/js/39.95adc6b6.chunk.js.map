{"version":3,"sources":["../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../../../src/lang/english.js","../../../src/utils.js","../../../src/DatePicker.js","../../../../../src/components/DatePickerPicker/DatePickerPicker.js","../../../../src/components/DatePickerDropdown.js","../../../../src/utils/constants.js","../../../../src/TimePicker/utils.js","../../../../../src/form/TimeInput/utils.js","../../../../../src/form/TimeInput/TimeInputs.js","../../../../../src/form/TimeInput/TimeInputImpl.js","../../../src/ChevronSmallUp.js","../../../../src/TimePicker/moveElementOnScroll.js","../../../../src/TimePicker/PickerPanel.js","../../../../src/TimePicker/TimePickerMenu.js","../../../../src/components/DateTimePickerImpl.js","../../../src/DSDateTimePicker.js"],"names":["Container","aggregatedClasses","InputAddon","AddonWrapper","this","leftAddon","rightAddon","inputComponent","className","containerProps","childType","Component","DSInputGroup","innerRef","style","InputComponents","ref","PropTypes","children","element","placeholder","id","updateDateAndTime","date","time","splittedDate","moment","createIcon","paths","height","width","Picker","disabled","icon","size","DSIconSizes","buttonActionType","onClick","onBlur","readOnly","rest","aria-label","buttonType","color","DSIconColors","onFocus","bool","classNameElement","convertPropToCssClassName","noop","DatePickerDropdown","isOpen","menu","zIndex","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","AM","HOUR_RANGE_12","min","max","HOUR_RANGE_24","GENERAL_TIME_RANGE","PLACEHOLDER_TIME","validateIndex","index","options","isAM","setNativeValue","value","Object","valueSetter","prototype","prototypeValueSetter","Event","bubbles","placeholderFormat","position","format","use12Hours","_placeholderHour","formatTimeNumber","shouldAddLeadingZeros","addLeadingZeros","String","formatMinutes","formatSeconds","formatHour","formatMeridiem","parseTimeNumberFromText","stringValue","parsedInt","parseInt","isNaN","focusNextInput","currentEl","nextElement","getValidTimeNumber","number","getTimeValuesFromTime","hours","minutes","seconds","meridiem","commonInputProps","onKeyDown","onInputFocus","pattern","type","InputTimesGroup","TimeInput","Divider","TimeDivider","content","step","showHours","showMinutes","showSeconds","onChange","ariaLabel","useState","setMeridiem","setHours","setMinutes","hasInputValue","setHasInputValue","setSeconds","currentKey","setCurrentKey","lastTypedNumber","setLastTypedNumber","timeSelected","setTimeSelected","prevTime","usePrevious","inputRefs","useEffect","timeValues","focusNextInputIfNeeded","key","safeString","cleanString","shouldFocusNextInput","getNextTimeValue","incrementing","parsedValue","e","event","incrementedValue","decrementedValue","previousElement","focusPreviousInput","selectedTime","neededValues","isTimeCompletelySet","nextHours","handleSecondsChange","secondsHandled","nextSeconds","handleMinutesChange","minutesHandled","nextMinutes","handleHoursChange","hour","hoursRange","nextHour","handleMeridiemKeyDown","handleMeridiemBlur","renderHoursInput","hourFormatRange","data-testid","input","acc","InputTimeContainer","getVisibleTimeInputs","memoizeOne","formatValue","getVisibleTimeByFormat","inputsContainer","useRef","visibleInputs","useMemo","node","MoveElementOnScroll","container","offsetHeight","speed","smooth","onUpdate","onEndScroll","moving","pos","lastPos","requestFrame","window","func","delta","Math","update","unsubscribe","updatePosition","newPos","scrolling","Wrapper","PickerItemListContainer","PickerItemList","PickerHeader","PickerItemContainer","selected","PickerSelectedOptionSelected","SelectedCircle","ArrowButtonContainer","getOptionIndex","selectedOption","valueProperty","option","arrowProps","fluidHeight","fluidWidth","PickerPanel","selectedOptionIndex","listYPosition","header","React","props","activeIndex","prevProps","pickerListContainerEl","pickerListContainerRef","pickerListEl","pickerListRef","validIndex","optionValue","getOptionValue","numberItemsOnScreen","optionHeight","pickerItemRef","listHeight","state","document","firstColumn","restColumns","lastColumn","prev","focusedElement","findIndex","supposedPos","nextPos","hasHeader","computeContainerTranslation","classProps","tabIndex","selectedOptionRef","transform","label","nextProps","labelProperty","arrowStep","TimePickerContainer","TimePickerHeader","TimePickerPanelContainer","generateOption","TimePickerMenu","onTimeChange","withLeadingZeros","rangeMinutes","range","rangeSeconds","selectedHour","hoursOptions","rangeHours","hasHeaderDisplay","DateTimePickerWrapper","TimePicker","TimePickerWrapper","DateInput","datePickerProps","numberOfMonths","enableOutsideDays","transitionDuration","firstDayOfWeek","keepOpenOnDateSelect","hideKeyboardShortcutsPanel","onPrevMonthClick","onNextMonthClick","onClose","onDateChange","phrases","SingleDatePickerPhrases","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","timePickerProps","onChangeTimePicker","selectedDate","setSelectedDate","setIsOpen","dateTimePickerWrapperRef","visiblePanels","currentYear","onClickEscape","dateSelected","onFocusChange","onOutsideClick","handleOutsideClick","pickerTime","customInputType","handleChange","restInputProps","yearMaxRange","yearMinRange","isShowElipsisActive","inputValue","placeholderDefault","english","classNameDefault","idDefault","DSDateTimePicker","cssClassName","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected"],"mappings":"4oBAGA,IAEMA,EAAYC,mBAFlB,qBAGMC,EAAaD,oBAHnB,oBAGA,SAEqBE,c,wNAGX,I,uDAEC,MAOHC,KAPG,MAELC,EAFK,YAGLC,EAHK,aAIKC,EAJL,WAKLC,EALK,YAMLC,EANK,iBAQDC,EACJH,GAAkBA,EAAlBA,MAAyCA,OAAzCA,KACIA,YADJA,cADF,UAIA,OACE,iCACEC,UAAS,wBAxBjB,oBAwBiB,iBADX,GAIGH,GAAa,yBAJhB,KAMGC,GAAc,yBAPnB,Q,EAjBiBH,CAAqBQ,a,YAArBR,iBACG,I,QCLlBS,EAAe,SAAC,GAAD,uBACnBH,OADmB,wBAEnBI,OAFmB,2BAGnBL,OAHmB,qBAInBM,OAJmB,yBAKnBT,OALmB,4BAMnBC,OANmB,aAOTS,EAPS,kBASnB,qBACEC,IADF,EAEER,UAFF,EAGEC,eAHF,EAIEJ,UAJF,EAKEC,WALF,EAMEQ,MAAOA,GAfU,IAqBrBF,YAAyB,CACvBH,eAAgBQ,UADO,IAEvBJ,SAAUI,IAFa,KAGvBT,UAAWS,IAHY,OAOvBH,MAAOG,aAAmBA,IAPH,QAWvBZ,UAAWY,IAXY,QAevBX,WAAYW,IAfW,QAmBvBC,SAAUD,IAAUE,S,gEC5CP,CACbC,YADa,uBAEbZ,UAFa,GAGba,GAAI,I,uECDOC,EAAoB,SAACC,EAAMC,GACtC,IAAMC,EAAeC,MAQrB,OAPAD,QAAmBF,MAAnBE,UACAA,OAAkBF,MAAlBE,SACAA,OAAkBF,MAAlBE,SACAA,OAAkBD,MAAlBC,SACAA,SAAoBD,MAApBC,WACAA,SAAoBD,MAApBC,WAEA,G,6CCRaE,YAAW,CACxBC,MAAO,CAAC,idADgB,0HAKxBC,OALwB,GAMxBC,MAAO,K,iBCFHC,EAAS,SAAC,GAAD,kBACbvB,OADa,wCAEbwB,OAFa,kBAGbC,OAHa,MAGN,oBAHM,iBAIbC,OAJa,MAINC,IAJM,yBAKbC,OALa,gCAMbC,OANa,MAMH,wBANG,aAObC,OAPa,MAOJ,wBAPI,eAQbC,OARa,SASVC,EATU,8GAWb,uBACEC,aAAYD,iBADd,qBAEEE,WAFF,EAGElC,UAHF,EAIEmC,MAAQX,EAAkCY,IAJ5C,QAIqBA,IAAZ,QACPZ,SALF,EAMEC,KANF,EAOEK,OAPF,EAQED,QARF,EASEE,SATF,EAUEL,KAAMA,KAIVH,YAAmB,CACjBvB,UAAWS,IADM,OAEjBe,SAAUf,IAFO,KAGjBgB,KAAMhB,IAHW,QAIjBiB,KAAMjB,UAJW,KAKjBmB,iBAAkBnB,UALD,KAMjBoB,QAASpB,IANQ,KAOjB4B,QAAS5B,IAPQ,KAQjBqB,OAAQrB,IARS,KASjBsB,SAAUtB,IAAU6B,M,iBCpCdC,EAAqBC,YAA0B,oBAA/CD,iBAEFE,EAAO,wBACb,SAASC,EAAmB,GAOzB,QANDlB,gBAMC,SALDO,EAKC,EALDA,SAKC,IAJDF,eAIC,MAJSY,EAIT,EAHDE,EAGC,EAHDA,OACAC,EAEC,EAFDA,KACAC,EACC,EADDA,OAEA,OACE,uBACEC,iBADF,EAEEH,OAFF,EAGEI,UAAW,CACTC,gBAAiB,CACfC,SADe,EAEfC,QAFe,EAGfC,kBAAmB,WAGvBC,WAVF,EAWEC,iBACE,6BACE,qBACErD,UAAWuC,EADb,UAEEf,SAFF,EAGEK,QAHF,EAIEE,SAAUA,KAIhBc,OAAQA,IAKdH,eACAA,kB,oEC5CaY,EAAK,KASLC,EAAgB,CAAEC,IAAF,EAAUC,IAAK,IAC/BC,EAAgB,CAAEF,IAAF,EAAUC,IAAK,IAC/BE,EAAqB,CAAEH,IAAF,EAAUC,IAAK,IACpCG,EAAmB,OAAnBA,EAAmB,UAAnBA,EAAmB,UAAnBA,EAID,W,SChBCC,EAAgB,SAACC,EAAOC,GACnC,OAAID,EAAJ,EAAsB,EAClBA,GAASC,EAAb,OAAoCA,SAAP,EAC7B,GAcWC,EAAO,SAAAhD,GAAI,OAAIA,GAAQA,SAAZ,I,OCFXiD,EAAiB,SAACtD,EAASuD,GACtC,GAAKC,kCAAL,UACA,IAAMC,EAAcD,2CAApB,IACME,EAAYF,sBAAlB,GACMG,EAAuBH,2CAA7B,IAKIC,GAAeA,IAAnB,EACEE,YAEAF,YAEFzD,gBAAsB,IAAI4D,MAAM,QAAS,CAAEC,SAAS,OAGzCC,EAAoB,SAACC,EAAUC,EAAQC,GAClD,OAAIF,IAAad,EACRiB,EAAiBF,EAAxB,GAEED,IAAad,EACRe,wBAAP,IAEED,IAAad,EACRe,wBAAP,IAEED,IAAad,EACRe,sBAAP,SADF,GAKIE,EAAmB,SAACF,EAAQC,GAChC,SACSD,wBAAP,IAEKA,wBAAP,KAGIG,EAAmB,SAACZ,EAAOa,GAC/B,OAAIb,eAAJ,IAAsBA,EAA4B,GAC3Ca,EAAwBC,eAAH,GAA+BC,OAA3D,IAGWC,GAAgB,SAACP,EAAQT,GACpC,IAAMa,EAAwBJ,iBAA9B,EACA,OAAOG,EAAiBZ,EAAxB,IAEWiB,GAAgB,SAACR,EAAQT,GACpC,IAAMa,EAAwBJ,iBAA9B,EACA,OAAOG,EAAiBZ,EAAxB,IAEWkB,GAAa,SAACT,EAAQT,GACjC,IAAMa,EACJJ,oBAA6BA,iBAD/B,EAEA,OAAOG,EAAiBZ,EAAxB,IAGWmB,GAAiB,SAACV,EAAQT,GAAT,OAC5BS,kBAA2BT,EAA3BS,cAAiDT,EADrB,eAGjBoB,GAA0B,SAAAC,GACrC,IAAMC,EAAYC,mBAAlB,GACA,OAAIC,gBAAJ,GAA6B,KAE7B,GAGWC,GAAiB,SAAAC,GAC5B,IAAMC,EAAcD,EAApB,mBACIC,GAAeA,EAAnB,oBACEA,8BAWSC,GAAqB,SAAC,EAAD,KAAiC,IAA9BtC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,IACxC,YAAIsC,OAAJ,OAA4BA,EAAwB,KAChDA,EAAJ,EACML,gBAAJ,GAAyBD,mBAAP,GAClB,EAEEM,EAAJ,EAAyBvC,EACzB,GAWWwC,GAAwB,SAAChF,EAAM2D,EAAQC,GAClD,MAAW,MAAO,GAClB,IAAMqB,EAAQrB,EAAa5D,aAAH,GAA4BA,EAApD,OACMkF,EAAUlF,EAAhB,UACMmF,EAAUnF,EAAhB,UACMoF,EAAYpC,EAAD,GAAjB,EFvHgB,KEyHhB,MAAO,CACLiC,MAAOb,GAAWT,EADb,GAELuB,QAAShB,GAAcP,EAFlB,GAGLwB,QAAShB,GAAcR,EAHlB,GAILyB,aAWSC,GAAmB,SAACC,EAAWC,EAAc1E,GAA1B,MAAuC,CACrE2E,QADqE,SAErEC,KAFqE,OAGrEH,UAHqE,EAIrEzE,QAJqE,EAKrEQ,QAASkE,ICrGLG,GAAkBjH,mBAFxB,qBAGMkH,GAAYlH,qBAHlB,oBAGA,SACMmH,GAAU,OAAAnH,EAAA,WAJhB,oBAIgB,WAGd,kBAAgB,CACdyE,MADF,YAMI2C,GAAc,SAAC,GAAD,gBAAGC,OAAH,sBAAkB5C,OAAlB,kBAClB,sBAASA,QAASA,GADA,I,GAID,SAAC,GAYd,IAXJlD,EAWI,EAXJA,KACA2D,EAUI,EAVJA,OACAC,EASI,EATJA,WASI,IARJmC,YAQI,MARG,EAQH,EAPJC,EAOI,EAPJA,UACAC,EAMI,EANJA,YACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACA3F,EAGI,EAHJA,SACAnB,EAEI,EAFJA,SACe+G,EACX,EADJ,eACI,EAC4BC,mBAD5B,uBACGjB,EADH,KACakB,EADb,OAEsBD,mBAFtB,uBAEGpB,EAFH,KAEUsB,EAFV,OAG0BF,mBAH1B,uBAGGnB,EAHH,KAGYsB,EAHZ,OAIsCH,oBAJtC,sBAIGI,EAJH,KAIkBC,EAJlB,OAK0BL,mBAL1B,uBAKGlB,EALH,KAKYwB,EALZ,OAMgCN,mBANhC,uBAMGO,EANH,KAMeC,EANf,QAO0CR,mBAP1C,2BAOGS,GAPH,MAOoBC,GAPpB,SAQoCV,mBARpC,wBAQGW,GARH,MAQiBC,GARjB,MASEC,GAAWC,YAAjB,GACMC,GAAY,CAChBnC,MADgB,KAEhBC,QAFgB,KAGhBC,QAHgB,KAIhBC,SAAU,MAGZiC,qBAAU,WACR,KAAU,CACR,IAAMC,EAAatC,GAAsBhF,EAAM2D,EAA/C,GAEA2C,EAAYgB,EAAZhB,UACAC,EAASe,EAATf,OACAC,EAAWc,EAAXd,SACAG,EAAWW,EAAXX,YAPJU,IAWAA,qBAAU,WACR,IAAMC,EAAatC,GAAsBhF,EAAM2D,EAA/C,IAEK3D,GAAL,KACEsG,MACAC,MACAC,MACAG,OAGE3G,GAAJ,KACEsG,EAAYgB,EAAZhB,UACAC,EAASe,EAATf,OACAC,EAAWc,EAAXd,SACAG,EAAWW,EAAXX,YAED,CAAC3G,EAAMkH,GAAUvD,EAhBpB0D,IAkBA,IAAME,GAAyB,SAAC3C,EAAWnC,EAAKsC,GDtGT,IAAAyC,GA+FL,SAAC/E,GAAiC,IAA5BsC,EAA4B,uDAAnB,EAAGR,EAAgB,uCAC9DkD,EAAaxD,OAAnB,GACMyD,EAAcD,mBAChBA,QADgBA,GAApB,EAGA,OAAO1C,QAAqBd,mBAAuByD,EAAnD,QCIIC,CAAqBlF,EAAKsC,EAAQH,EAAlC+C,SHjHoB,eESeH,ECwGnCG,IHlHkB,YEWAH,GFNH,UEMuBA,KCsGxC,GAKE7C,OAIEiD,GAAmB,SAAC1E,GAA+B,IAAxB2E,IAAwB,yDACjDC,EAAcxD,GAApB,GACA,OAAOuD,EAAeC,EAAH,EAAwBA,EAA3C,GAGIvC,GAAe,SAACwC,GACpBA,mBACAA,oBACAA,mBAGIlH,GAAU,SAACkH,GACXA,SAAJ,OACErB,OAKEpB,GAAY,SAAC0C,EAAOvF,GAAQ,IAExBS,EADW8E,EADa,aAIhC,OADAjB,GAAmBiB,EAAnBjB,KACQiB,EAAR,KACE,IHjJkB,UGkJhBA,mBACAnB,EAAcmB,EAAdnB,KACA,IAAMoB,EAAmBL,GAAzB,GACA3E,EAAe+E,EAAD,OAAd/E,GACA,MAEF,IHvJoB,YGwJlB+E,mBACAnB,EAAcmB,EAAdnB,KACA,IAAMqB,EAAmBN,GAAiB1E,GAA1C,GACAD,EAAe+E,EAAD,OAAd/E,GACA,MAEF,IH7JmB,YG8JjB+E,mBACA,EAGE/E,EAAe+E,EAAD,OAAd/E,ID5EwB,SAAA2B,GAChC,IAAMuD,EAAkBvD,EAAxB,uBACIuD,GAAmBA,EAAvB,wBACEA,iCCuEMC,CAAmBJ,EAAnBI,QAIF,MAEF,IHrKgB,SGsKdJ,mBACAA,gBACA,MAEF,IHzKc,OG0KZA,mBACA/E,EAAe+E,EAAD,OAAe/D,OAA7BhB,IACA0B,GAAeqD,EAAfrD,QACA,MAEF,IH7Ka,MG8KXqD,mBACA/E,EAAe+E,EAAD,OAAd/E,MACA0B,GAAeqD,EAAfrD,QACA,MAEF,IHpLe,QGqLbqD,mBACAnB,EAAcmB,EAAdnB,OAmBNQ,qBAAU,WACR,IAAMgB,EAAerI,GAAQE,MAC7B,GAd0B,WAC1B,IAAIoI,EAAJ,GAOA,OALA,IAAeA,EAAe,GAAH,uBAAqBrD,GAAjCqD,QACf,IAAiBA,EAAe,GAAH,uBAAqBpD,GAAjCoD,QACjB,IAAiBA,EAAe,GAAH,uBAAqBnD,GAAjCmD,QACjB,IAAgBA,EAAe,GAAH,uBAAqBlD,GAAjCkD,SAERA,EAAA,MAAkB,wBAMtBC,GAAuB,CAIzB,GAHIvC,GAAJ,GAAwBqC,WACpBpC,GAAJ,GAA4BoC,aACxBnC,GAAJ,GAA4BmC,aACxBzE,GAAJ,EAA4B,CAC1B,IAAM4E,EACJpD,oBAAgCH,EAAhCG,GAA8CH,EAAD,GAD/C,GAEAoD,UAEFpB,SAED,CAAChC,EAAOC,EAASC,EAbpBkC,IAeA,IAAMoB,GAAsB,SAACV,GAAM,IACzB7E,EAAU6E,EADe,aAE3BW,EAAiBpE,GAAvB,GAEMqE,EAAc7D,GAAmB,EAAD,EAAtC,IAMA6B,EAAWxC,GAAcR,EAAzBgD,IACAR,MACAoB,GAAuBQ,EAAD,OAAWpF,EAAX,IAAtB4E,IAGIqB,GAAsB,SAACb,GAAM,IACzB7E,EAAU6E,EADe,aAE3Bc,EAAiBvE,GAAvB,GACMwE,EAAchE,GAAmB,EAAD,EAAtC,IAMA0B,EAAWtC,GAAcP,EAAzB6C,IACAL,MACAoB,GAAuBQ,EAAD,OAAWpF,EAAX,IAAtB4E,IAGIwB,GAAoB,SAAChB,GAAM,IACvB7E,EAAU6E,EADa,aAEzBiB,EAAO1E,GAAb,GACM2E,EAAarF,EAAarB,EAAhC,EAEM2G,EAAWpE,GAAmBmE,EAAYD,EAAhD,IACAzC,EAASnC,GAAWT,EAApB4C,IACAJ,MACAoB,GAAuBQ,EAAD,OAAWkB,EAAX,IAAtB1B,IAGI4B,GAAwB,SAACpB,GHrQT,YGsQhBA,OAAJ,MAA0BA,MACxBzB,EAAYjC,GAAeV,EAA3B2C,IHtQoB,cGuQXyB,OAAJ,MAA4BA,MACjCzB,EAAYjC,GAAeV,EH1Qf,OAMG,UGqQNoE,MACTlB,EAAckB,EAAdlB,KHzQmB,cG0QVkB,OACTzB,MAEFH,OAGIiD,GAAqB,SAACrB,GAAM,IACxB7E,EAAU6E,EADc,aAE5B7E,OHrRU,OGqRMA,GAClBoD,OAkDE+C,GAAmB,WACvB,MAAgB,OAAO,KACvB,IAAMC,EAAkB1F,EAAarB,EAArC,EAEA,OACE,oCACM8C,IACF,mBAAOC,GAAUyC,EAAGuB,EAApB,OADkB,GADtB,KAME9B,IANF,aAOE+B,cAPF,uBAQEtI,aAAYmF,GARd,cASE5F,SATF,EAWEnB,SAAU,mBAAW+H,SAAX,GACVjB,SAZF,GAaEvG,YAAa6D,EACXb,EAD4B,EAbhC,GAkBEM,MAAO+B,MAwDb,OACE,sBAAiB5F,SAAUA,GARpB,CAzBQ,CACbgK,KAtEF,EAGE,oCACMhE,IACF,mBAAOC,GAAUyC,EAAGpF,EAApB,OADkB,GADtB,KAME6E,IANF,gBAOE+B,cAPF,yBAQEtI,aAAYmF,GARd,gBASE5F,SATF,EAWEnB,SAAU,mBAAW+H,WAAX,GACVjB,SAZF,GAaEvG,YAAa6D,EAAkBb,EAbjC,GAcEM,MAAOgC,KAjBc,KAvBzB,EAGE,oCACMG,IACF,mBAAOC,GAAUyC,EAAGpF,EAApB,OADkB,GADtB,KAME6E,IANF,gBAOE+B,cAPF,yBAQEtI,aAAYmF,GARd,gBASE5F,SATF,EAWEnB,SAAU,mBAAW+H,WAAX,GACVjB,SAZF,GAaEvG,YAAa6D,EAAkBb,EAbjC,GAcEM,MAAOiC,KAjBc,MAkGE,QACzB,uBACEqE,EACIC,SAAW,CACT3G,EACE,sBAEE0E,IAFF,EAGE1B,QAHF,IAIE5C,MAAOsG,QAAYtG,QANd,KADV,IADP,IADF,IAqBE,yBAA4B,CAAEsE,IAAK,SA7CrC,EAGE,wCAEEA,IAFF,iBAGE+B,cAHF,sBAIEtI,aAAYmF,GAJd,iBAKE5F,SALF,EAMEM,OANF,GAOEwE,UAPF,GAQE1F,YAAa6D,EAAkBb,EARjC,GASEM,MAAOkC,KAZa,QC9VtBsE,GAAqBjL,mBAF3B,c,GAIsB,SAAC,GAQjB,IAPJkF,EAOI,EAPJA,OACAtE,EAMI,EANJA,SACA8G,EAKI,EALJA,SACAnH,EAII,EAJJA,UACAkE,EAGI,EAHJA,MACA1C,EAEI,EAFJA,SACe4F,EACX,EADJ,eAEMuD,EAAuBC,aAAW,SAAAC,GAAW,OACjDC,YADiD,MAG/CC,EAAkBC,mBAQhBC,EAAgBC,mBAAQ,kBAAMP,EAAN,MAE9B,OACE,sBACE3K,UADF,EAEEwB,SAFF,EAGEnB,SAHF,EAIEwB,QAbgB,SAAAkH,GACbA,SAAL,MACEgC,mCAaA,kCACE9I,aADF,EAEET,SAFF,EAGEmD,OAHF,EAIEtE,SAAU,SAAA8K,GAAI,OAAKJ,EAAL,GACd5D,SALF,EAMEnG,KAAMkD,GAbZ,M,0EC7Ba/C,YAAW,CACxBC,MAAO,CADiB,yMAIxBC,OAJwB,GAKxBC,MAAO,K,UCRF,SAAS8J,GAAoB,EAA7B,GAWL,IAREC,EAQF,EAREA,UAQF,IAPE7H,WAOF,MAPQ,EAOR,MANEC,WAMF,MANQ9C,EAAQ2K,aAMhB,MALEC,aAKF,MALU,EAKV,MAJEC,cAIF,MAJW,EAIX,MAHEC,gBAGF,MAHa,wBAGb,MAFEC,mBAEF,MAFgB,wBAEhB,EACIC,GAAJ,EACIC,EAAJ,EACIC,EAHJ,EAMMC,EAEFC,8BACAA,OADAA,6BAEAA,OAFAA,0BAGAA,OAHAA,wBAIAA,OAJAA,yBAKA,SAAAC,GACED,oBAAwB,KAqB9B,cACEhD,EADoB,iBAEpB,IAAIkD,EAAQlD,SAAWA,EAAvB,gBACA,IAAIkD,IAEFA,GAASlD,EAATkD,OACAA,GAAS,GAATA,GAGFL,IAAQK,EAARL,EACAA,EAAMM,WAAcA,WAVA,IAWpB,GA3BF,aACEP,KACA,IAAMM,GAASL,EAAD,GAAd,EACAC,KAEIK,YAAJ,GACEJ,GAAa,WACXL,EAASI,EAATJ,GACAU,QAGFT,KACAC,MAgBAQ,GAOJ,OAHAd,sCACAA,0CAEO,CACLe,YAAa,WACXf,sCACAA,2CAEFgB,eAAgB,SAAAC,GAEdT,IADAD,Q,ohCC5DN,IAEMpM,GAAY,OAAAC,EAAA,UAFlB,oBAEkB,MAGhB,kBAAoB,CAAE8M,UAAtB,gBAEIC,GAAU/M,mBAPhB,oBAOA,WACMgN,GAA0BhN,mBARhC,oBAQA,uBAIMiN,GAAiBjN,mBAZvB,oBAYA,aACMkN,GAAelN,mBAbrB,oBAaA,UACMmN,GAAsB,OAAAnN,EAAA,UAd5B,oBAc4B,QAG1B,kBAAmB,CAAEoN,SAArB,eAEIC,GAA+BrN,mBAnBrC,oBAmBA,sBAIMsN,GAAiBtN,mBAvBvB,oBAuBA,mBACMuN,GAAuBvN,mBAxB7B,oBAwBA,mBAKMwN,GAAiB,SAAClJ,EAASmJ,GAA4C,IAA5BC,EAA4B,uDAAZ,QACzDrJ,EAAQC,EAAA,WACZ,SAAAqJ,GAAM,OAAIA,OAAJ,KAER,OAAOvJ,EAAcC,EAArB,IAGIuJ,GAAa,CACjBnL,WADiB,OAEjBoL,aAFiB,EAGjBC,YAHiB,EAIjB7L,KAAM,KAGa8L,e,8BAwBnB,cAAmB,kCACjB,iBADiB,2DAvBW5C,aAAW,SAAA9G,GAAS,MACb,EADa,MACxCC,EADwC,UAC/BoJ,EAD+B,kBAEV,EAFU,MAExCD,EAFwC,iBAExBX,EAFwB,YAI1CkB,EACJ3J,GAASmJ,GAAelJ,EAASmJ,EADnC,GAEMQ,EACJ,mBAAwBD,EAAsB,EADhD,aAMA,OAHI,kBAAJ,GACE,kCAEF,MAWiB,6CAqKJ,WAAM,IACXE,EAAW,EADA,aAGnB,OAAO,0BAAP,MAtKA,yBAA8BC,IAA9B,YACA,gBAAqBA,IAArB,YACA,gBAAqBA,IAArB,YACA,oBAAyBA,IAAzB,YAEA,QAAa,CACXV,eAAgBW,EADL,SAEXC,YAFW,EAIXC,UAAW,IAXI,oL,iEAeC,WAClBnO,KAAA,eACA,IAAMoO,EAAwBpO,KAAKqO,uBAAnC,QACMC,EAAetO,KAAKuO,cAA1B,QAEAvO,KAAA,cAAqB,IAAIwL,GAAoB8C,EAAc,CACzD7C,UADyD,EAEzD7H,KAAM5D,KAFmD,iBAGzD6D,IAAK7D,KAHoD,iBAIzD6L,SAAU,cAAgB,IAElB3H,EADc,EADI,cAGtBC,SACCmI,YAAYN,EAAM,EAAP,kBAAgC,EAD5C7H,eAECkI,OAHH,GAIA,gBAEFP,YAAa,WACX,WAAc,CAAEa,WAAW,OAG/B3M,KAAA,gC,6CAIAA,KAAA,8B,qCAeawN,GAEb,OAAOA,EADmBxN,KADL,uB,qCAKRwN,GAEb,OAAOA,EADmBxN,KADL,uB,6BAKhBkE,EAAOyI,GAAW,IACfxI,EAAYnE,KADG,cAEfsN,EAAmBtN,KAFJ,qBAGjBwO,EAAavK,EAAcC,EAAjC,GACMsJ,EAASrJ,EAAf,GACMsK,EAAczO,KAAK0O,eAAzB,GACIpB,IAAJ,GACEtN,KAAA,4B,qCAIW,MAC4BA,KAD5B,MACLmE,EADK,UACIwK,EADJ,sBAESC,EAAiB5O,KAAK6O,cAF/B,qBAIb7O,KAAA,eACAA,KAAA,WAAkBA,KAAK4O,aAAvB,EAEA5O,KAAA,iBAAwBA,KAAK8O,WAAa,EAAI9O,KAAK4O,aAAnD,EACA5O,KAAA,iBACEA,KAAK4O,cAAgBzK,SAAiBmI,UAAUqC,EADlD,M,yCAIiBF,EAAavK,EAAOyI,GAAW,IACxCpF,EAAavH,KAD2B,eAEhDA,KAAA,UACE,SAAA+O,GAAK,uBAEHpC,UAFG,EAGHW,eAHG,EAIHY,YAAahK,OAEf,WACEqD,EAASkH,EAATlH,Q,oCAOQ4B,GAAG,IACP+E,EAAgBlO,KADT,kBAEPmE,EAAYnE,KAFL,gBAGuBgP,gCAHvB,6CAGRC,EAHQ,KAGQC,EAHR,aAMMA,SANN,GAMRC,EANQ,sBAOAH,gCAPA,8BAORI,EAPQ,oBAUTC,EAAiBL,SAAvB,cAEA,OAAQ7F,EAAR,KACE,WACEnJ,KAAA,UACA,MACF,UACEA,KAAA,OAAYmE,SAAZ,GACA,MACF,cACEnE,KAAA,OAAYkO,EAAZ,GACA,MACF,gBACElO,KAAA,OAAYkO,EAAZ,GACA,MACF,UAGE,GAFA/E,EADU,iBAGNiG,GAAQC,IAAZ,EACED,eACK,GAAIC,IAAJ,EACLJ,cACK,CAELC,EADiBI,oBAAUJ,EAA3B,GACAA,e,yCASW,IACThB,EAAgBlO,KADP,kBAGXuP,EAAcrB,EADElO,KAFL,gBAIXwP,EAAUD,OAAiCrB,EAAjD,EACAlO,KAAA,Y,2CAGmB,IACXkO,EAAgBlO,KADL,oBAEYA,KAFZ,MAGbuP,EAAcrB,EAHD,YAIbsB,EACJD,GALiB,UAKjBA,SAA8CrB,EADhD,EAEAlO,KAAA,Y,+BASO,aACwBA,KADxB,MACCmE,EADD,UACUsL,EADV,cAE4CzP,KAF5C,MAECsN,EAFD,iBAEiBY,EAFjB,cAE8BvB,EAF9B,YAIDmB,EAAgB9N,KAAK0P,4BAA3B,GAEA,OACE,0BACGD,GAAazP,KADhB,eAEE,sBACE2P,WAAY,CAAEhD,aACdjG,UAAW1G,KAFb,cAGE4P,SAAU,GAEV,sBAA8BnP,SAAUT,KAAK6P,mBAC3C,qBANJ,OAQE,0BACE,yCAEExN,aAFF,aAGET,SAAUsM,GAHZ,EAIErM,KAAM,qBAJR,MAKEI,QAASjC,KALX,iBAME4P,UAAW,MAGf,sBACEnP,SAAUT,KADZ,uBAEEU,MAAO,CACLe,OAAQzB,KAAK8O,aAGf,sBACErO,SAAUT,KADZ,cAEEU,MAAO,CACLoP,UAAW,cAAF,kBAGV3L,EAAA,KAAY,cACX,IAAMG,EAAQ,iBAAd,GACMyL,EAAQ,iBAAd,GACA,OACE,sBACEnH,IADF,EAEE+G,WAAY,CACV1C,SAAUK,EACNhJ,IADoB,EAEV,IAAVJ,GAENzD,SAAU,EAPZ,cAQEwB,QAAS,kBAAM,uBAAN,KATb,QAiBN,0BACE,yCAEEI,aAFF,eAGET,SAAUsM,GAAe/J,EAH3B,OAIEtC,KAAM,uBAJR,MAKEI,QAASjC,KALX,mBAME4P,UAAW,W,gDAlMSI,KAA0B,IAAb7B,EAAa,EAAbA,UACnClB,EAAqC+C,EADW,SACtCzC,EAA2ByC,EADW,cACvB7L,EAAY6L,EADW,QAExD,OAAI/C,IAAakB,EAAjB,SACS,CACLb,eADK,EAELY,YAAab,GAAelJ,EAAS8I,EAFhC,GAGLkB,UAAW6B,GAGf,S,EA5EiBpC,CAAoBrN,a,aAApBqN,kBAgBG,CACpBL,cADoB,QAEpB0C,cAFoB,QAGpBtB,oBAHoB,EAIpBxK,QAJoB,GAKpB+L,UAAW,I,gdCjEf,IAEMC,GAAsBtQ,mBAF5B,oBAGMuQ,GAAmBvQ,mBAHzB,mBAGA,UACMwQ,GAA2BxQ,mBAJjC,mBAIA,mBAKMyQ,GAAiB,SAACvL,GAAD,OAAY,kBAAa,CAC9CT,MAD8C,EAE9CyL,MAAyB,oBAAXhL,EAAwBA,EAA/B,GAAgDyI,KAGpC+C,e,8BAYnB,cAAmB,kCACjB,iBADiB,6CAgIJ,WAAM,IACXnP,EAAS,EADE,WAEnB,OAAO,0BAAmBA,SAA1B,cAhIA,QAAa,CACXA,KAAM6M,QAAc3M,OAHL,8P,iEAOC,IACVF,EAASpB,KADC,WAElBA,KAAA,SAAc,CAAEoB,W,yCAGCkD,GAAO,IAChBlD,EAASpB,KADO,WAExBA,KAAA,WAAgBoB,SAAhB,M,wCAGgBkD,GAAO,IACflD,EAASpB,KADM,WAGnBsK,EAAJ,EADuBtK,KAFA,mBAKhBoE,EAAL,KACEkG,EAAYhG,EAAD,GAAXgG,KAGJtK,KAAA,WAAgBoB,OAAhB,M,0CAGkBkD,GAAO,IACjBlD,EAASpB,KADQ,WAEzBA,KAAA,WAAgBoB,SAAhB,M,uCAGekD,GAAO,IACdlD,EAASpB,KADK,WAEhBoK,EAAOhJ,EAAb,OACMkJ,EACJhG,uBAA+B8F,EAA/B9F,GAA4C8F,EAAD,GAD7C,GAEApK,KAAA,WAAgBoB,OAAhB,M,iCAGSA,IAEToP,EADyBxQ,KADV,oBAEfwQ,GACAxQ,KAAA,SAAc,CAAEoB,W,2CAGG,IACXA,EAASpB,KADE,aAEwBA,KAFxB,MAEXqH,EAFW,cAEEtC,EAFF,SAEU0K,EAFV,YAGnB,MAAkB,OAAO,KACzB,IAAMgB,EAAmB1L,iBAAzB,EACM2L,EAAeC,wBACnBL,GAAeG,GAAoBrL,YADrC,KAGA,OACE,sBACEqK,UADF,EAEE1B,OAFF,IAGExG,SAAUvH,KAHZ,mBAIEmE,QAJF,EAKE8I,SAAU7L,e,2CAKK,IACXA,EAASpB,KADE,aAEwBA,KAFxB,MAEXsH,EAFW,cAEEvC,EAFF,SAEU0K,EAFV,YAGnB,MAAkB,OAAO,KACzB,IAAMgB,EAAmB1L,iBAAzB,EACM6L,EAAeD,wBACnBL,GAAeG,GAAoBrL,YADrC,KAGA,OACE,sBACEqK,UADF,EAEE1B,OAFF,IAGExG,SAAUvH,KAHZ,oBAIEmE,QAJF,EAKE8I,SAAU7L,e,yCAMG,IACTA,EAASpB,KADA,aAEoCA,KAFpC,MAEToH,EAFS,YAEEpC,EAFF,aAEcD,EAFd,SAEsB0K,EAFtB,YAGjB,MAAgB,OAAO,KAEvB,IAAMoB,EAAe7L,EAAa5D,aAAH,GAA4BA,EAA3D,OAEMqP,EAAmB1L,iBAAzB,EAEM+L,GADa9L,EAAa2L,gBAAM,EAAT,IAAkBA,gBAA/C,KACqBI,IACnBT,GAAeG,GAAoBrL,YADrC,KAGA,OACE,sBACEqK,UADF,EAEE1B,OAFF,IAGExG,SAAUvH,KAHZ,kBAIEmE,QAJF,EAKE8I,SAAU4D,M,wCAKE,IACRzP,EAASpB,KADD,aAEkBA,KAFlB,MAERgF,EAFQ,aAEIyK,EAFJ,YAGhB,SAEE,sBACEA,UADF,EAEE1B,OAFF,GAGExG,SAAUvH,KAHZ,iBAIEmE,QAAS,CACP,CAAEG,MAAF,KAAeyL,MAAO,MACtB,CAAEzL,MAAF,KAAeyL,MAAO,OAExB9C,SAAW7I,EAAD,GAAqB,KAArB,OAVU,O,+BAoBjB,IACC4M,EAAqBhR,KADtB,uBAGP,OACE,0BACGgR,GAAoBhR,KADvB,eAEE,0BACGA,KADH,mBAEGA,KAFH,qBAGGA,KAHH,qBAIGA,KAPP,wB,EApJiBuQ,CAAuBhQ,a,aAAvBgQ,kBAEG,CACpBnP,KAAME,MACNmO,WAFoB,EAGpBzK,YAHoB,EAIpBsC,aAJoB,EAKpBD,aALoB,EAMpBD,WANoB,EAOpBoJ,aAAc,0BAyJlBD,aAA2B,CAEzBnP,KAAMP,eAFmB,KAIzB4O,UAAW5O,IAJc,KAMzBmE,WAAYnE,IANa,KAQzByG,YAAazG,IARY,KAUzBwG,YAAaxG,IAVY,KAYzBuG,UAAWvG,IAZc,KAczB2P,aAAc3P,IAAUuL,M,UCpLpB6E,GAAwBpR,mBAF9B,mBAEA,WACMqR,GAAarR,gBAHnB,mBAGA,eACMsR,GAAoBtR,mBAJ1B,mBAIA,uBAIMuR,GAAYvR,iBARlB,mBAQA,c,GAE6B,SAAC,GA0BxB,IAzBJmB,EAyBI,EAzBJA,YACAG,EAwBI,EAxBJA,KAwBI,IAvBJkQ,gBAuBI,IAtBFzP,gBAsBE,aArBF0P,sBAqBE,MArBe,EAqBf,MApBFnP,gBAoBE,aAnBFoP,yBAmBE,aAlBFC,0BAkBE,MAlBmB,EAkBnB,MAjBFC,sBAiBE,MAjBe,EAiBf,MAhBFC,4BAgBE,aAfFC,kCAeE,aAdFC,wBAcE,MAdiB,wBAcjB,MAbFC,wBAaE,MAbiB,wBAajB,MAZFC,eAYE,MAZQ,wBAYR,MAXFC,oBAWE,MAXa,wBAWb,MAVFC,eAUE,MAVQC,0BAUR,MATFC,wBASE,MATiB,IASjB,MARFC,oBAQE,MARa,qBAQb,MAPFC,sBAOE,MAPe,qBAOf,MANFC,wBAME,MANiB,qBAMjB,MAJJC,gBAII,IAHFvN,cAGE,MAHO,UAGP,OAFFwC,SAAUgL,QAER,OAF6B,wBAE7B,MACoC9K,mBAASnG,OAD7C,qBACGkR,GADH,MACiBC,GADjB,SAEwBhL,oBAFxB,wBAEG1E,GAFH,MAEW2P,GAFX,MAIEC,GAA2BvH,mBAEjC3C,qBAAU,WACR,GAAUgK,GAAgBnR,IAAhBmR,MACT,CAFHhK,IAIA,IAAMmK,GAAgBtH,mBAAQ,kBAAMJ,YAAN,KAA9B,IAEM2H,GAAcvR,MAApB,OA+BA,OACE,uBACEpB,WACE,qBACE0B,SADF,EAEEmB,OAFF,GAGEC,KACE,sBACEpC,IADF,GAEE+J,cAAY,oBAEZ,uBACExJ,KADF,GAEE+Q,iBAFF,EAGEX,kBAHF,EAIEE,eAJF,EAKEE,2BALF,EAMEQ,aANF,EAOEE,iBAPF,EAQED,eARF,EASEV,qBATF,EAUEJ,eAVF,EAWEwB,cAzBY,kBAAMJ,IAAN,IA0BZZ,QAZF,EAaEC,aArDiB,SAACgB,GAC9B,IAAM1R,EAAeH,EAAkB6R,EAAvC,IACA,IACEN,MACAV,OAkDUiB,cAAe,aAEfnB,iBAhBF,EAiBEoB,eAAgB,mBArCH,SAAC7J,GACrBuJ,oBAA0CvJ,EAA/C,SACEsJ,OAmCqCQ,CAAX,IAChBtB,iBAlBF,EAmBEI,QAnBF,EAoBER,mBAAoBA,IAEtB,0BACE,kCACE5P,SADF,EAEEmD,OAFF,EAGE0K,WAHF,EAIEuB,kBAJF,EAKER,aA5DK,SAAC2C,GACpB,IAAM9R,EAAeH,EAAkBsR,GAAvC,GACAD,MACAE,OA0DcnL,aANF,EAOElG,KAAMoR,IAtChB,OA4CEvQ,QAjDW,kBAAMyQ,IAAN,IAkDXvQ,SAAUA,KAId,uBACEiR,gBAAiB,gBAAaC,EAAb,WAA8BC,EAA9B,mCACf,oCACE,kCACE1R,SADF,EAEEmD,OAFF,aAGEwC,SAAU,mBAAkB8L,EAAlB,KAHZ,GAKEE,aAAcV,GALhB,IAMEW,aAAcX,GAAc,OAE9B,kCACEjR,SADF,EAEEmD,OAFF,QAGEwC,SAAU,mBAAU8L,EAAV,KAbC,MAkBjBI,qBAnBF,EAoBE7R,SApBF,EAqBE2F,SAxFoB,SAACmM,GACzBjB,MACAF,MACAR,MAsFI/Q,YAtBF,EAuBEsD,MAAOkO,OCnKAmB,GAGXC,EAHF5S,YACW6S,GAETD,EAFFxT,UACI0T,GACFF,EADF3S,GAGI8S,GAAmB,SAAC,GA6BpB,QA5BJ1T,sBA4BI,MA5Ba,GA4Bb,MA3BJD,iBA2BI,MA3BQyT,GA2BR,MA1BJ5S,UA0BI,MA1BC6S,GA0BD,MAzBJ9S,mBAyBI,MAzBU2S,GAyBV,EAxBJxS,EAwBI,EAxBJA,KAwBI,IAvBJkQ,uBAuBI,MAvBc,CAChBzP,UADgB,EAEhB0P,eAFgB,EAGhBnP,UAHgB,EAIhBoP,mBAJgB,EAKhBC,mBALgB,EAMhBC,eANgB,EAOhBC,sBAPgB,EAQhBC,4BARgB,EAShBC,iBAAkB,wBAClBC,iBAAkB,wBAClBC,QAAS,wBACTC,aAAc,wBACdC,QAbgB,0BAchBE,iBAdgB,IAehBC,aAAc,qBACdC,eAAgB,qBAChBC,iBAAkB,sBAMhB,MAJJC,uBAII,MAJc,CAChBvN,OADgB,UAEhBwC,SAAU,yBAER,EACIyM,EAAiBpR,YAA0B,iBAAD,EAGhD,CACE3B,OALA,aAQJ,OACE,qCAAKb,UAAW4T,GAAhB,GACE,sBACE7S,KADF,EAEEkQ,gBAFF,EAGErQ,YAHF,EAIEsR,gBAAiBA,MAQzByB,aAA6B,CAI3B5S,KAAMN,oBAJqB,KAQ3BwQ,gBAAiB,UAAgB,CAC/BzP,SAAUf,IADqB,KAE/ByQ,eAAgBzQ,IAFe,OAG/BsB,SAAUtB,IAHqB,KAI/B0Q,kBAAmB1Q,IAJY,KAK/B2Q,mBAAoB3Q,IALW,OAM/B4Q,eAAgB5Q,IANe,OAO/B6Q,qBAAsB7Q,IAPS,KAQ/B8Q,2BAA4B9Q,IARG,KAS/B+Q,iBAAkB/Q,IATa,KAU/BgR,iBAAkBhR,IAVa,KAW/BiR,QAASjR,IAXsB,KAY/BkR,aAAclR,IAZiB,KAa/BmR,QAAS,UAAgB,CACvBiC,cAAepT,IADQ,OAEvBqT,gBAAiBrT,IAFM,OAGvBsT,WAAYtT,IAHW,OAIvBuT,eAAgBvT,IAJO,OAKvBwT,gBAAiBxT,IALM,OAMvByT,gBAAiBzT,IANM,OAOvB0T,kBAAmB1T,IAPI,OAQvB2T,2BAA4B3T,IARL,OASvB8Q,2BAA4B9Q,IATL,OAUvB4T,cAAe5T,IAVQ,OAWvB6T,SAAU7T,IAXa,OAYvB8T,oBAAqB9T,IAZE,OAavB+T,iBAAkB/T,IAbK,OAcvBgU,eAAgBhU,IAdO,OAevBiU,QAASjU,IAfc,OAgBvBkU,OAAQlU,IAhBe,OAiBvBmU,aAAcnU,IAjBS,OAkBvBoU,kBAAmBpU,IAlBI,OAmBvBqU,kBAAmBrU,IAnBI,OAoBvBsU,mBAAoBtU,IApBG,OAqBvBuU,oBAAqBvU,IArBE,OAsBvBwU,6BAA8BxU,IAtBP,OAuBvByU,mBAAoBzU,IAvBG,OAwBvB0U,+BAAgC1U,IAxBT,OAyBvB2U,yBAA0B3U,IAzBH,KA0BvB4U,uBAAwB5U,IA1BD,KA2BvB6U,kBAAmB7U,IA3BI,KA4BvB8U,eAAgB9U,IAAUuL,OAE5B8F,iBAAkBrR,IA3Ca,OA4C/BsR,aAActR,IA5CiB,KA6C/BuR,eAAgBvR,IA7Ce,KA8C/BwR,iBAAkBxR,IAAUuL,OAK9BpL,YAAaH,IA3Dc,OA+D3ByR,gBAAiB,UAAgB,CAC/BvN,OAAQlE,IADuB,OAE/B0G,SAAU1G,IAAUuL,Q","file":"static/js/39.95adc6b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nDSInputGroup.propTypes = {\n  containerProps: PropTypes.shape({}),\n  innerRef: PropTypes.func,\n  className: PropTypes.string,\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element,\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element,\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element,\n};\n\nexport default DSInputGroup;\n","export default {\n  placeholder: 'Select date and time',\n  className: '',\n  id: '',\n};\n","import moment from 'moment';\n\nexport const updateDateAndTime = (date, time) => {\n  const splittedDate = moment();\n  splittedDate.month(date.get('month'));\n  splittedDate.year(date.get('year'));\n  splittedDate.date(date.get('date'));\n  splittedDate.hour(time.get('hour'));\n  splittedDate.minute(time.get('minute'));\n  splittedDate.second(time.get('second'));\n\n  return splittedDate;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../utils/prop-types';\n\nconst Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  ...rest\n}) => (\n  <DSButton\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n  />\n);\n\nPicker.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n};\nexport default Picker;\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker from './DatePickerPicker/DatePickerPicker';\n\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {};\nDatePickerDropdown.defaultProps = {};\n\nexport default DatePickerDropdown;\n","export const AM = 'am';\nexport const PM = 'pm';\nexport const ARROW_UP = 'ArrowUp';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const BACKSPACE = 'Backspace';\nexport const ESCAPE = 'Escape';\nexport const HOME = 'Home';\nexport const SHIFT = 'Shift';\nexport const END = 'End';\nexport const HOUR_RANGE_12 = { min: 0, max: 12 };\nexport const HOUR_RANGE_24 = { min: 0, max: 24 };\nexport const GENERAL_TIME_RANGE = { min: 0, max: 59 };\nexport const PLACEHOLDER_TIME = {\n  hour: 'hour',\n  minutes: 'minutes',\n  seconds: 'seconds',\n  meridiem: 'meridiem',\n};\n","export const validateIndex = (index, options) => {\n  if (index < 0) return 0;\n  if (index >= options.length) return options.length - 1;\n  return index;\n};\n\nexport const getOptionIndex = (\n  options,\n  selectedOption,\n  valueProperty = 'value',\n) => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nexport const isAM = time => time && time.hour() < 12;\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport { isAM } from '../../TimePicker/utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  SHIFT,\n  PLACEHOLDER_TIME,\n} from '../../utils/constants';\n\nexport const isArrowIncrementDecrement = key =>\n  key === ARROW_DOWN || key === ARROW_UP || key === SHIFT;\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nexport const placeholderFormat = (position, format, use12Hours) => {\n  if (position === PLACEHOLDER_TIME.hour) {\n    return _placeholderHour(format, use12Hours);\n  }\n  if (position === PLACEHOLDER_TIME.minutes) {\n    return format.indexOf('mm') > -1 ? 'mm' : 'm';\n  }\n  if (position === PLACEHOLDER_TIME.seconds) {\n    return format.indexOf('ss') > -1 ? 'ss' : 's';\n  }\n  if (position === PLACEHOLDER_TIME.meridiem) {\n    return format.indexOf('A') > -1 ? 'A' : 'a';\n  }\n};\n\nconst _placeholderHour = (format, use12Hours) => {\n  if (use12Hours) {\n    return format.indexOf('hh') > -1 ? 'hh' : 'h';\n  }\n  return format.indexOf('HH') > -1 ? 'HH' : 'H';\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros ? addLeadingZeros(2)(value) : String(value);\n};\n\nexport const formatMinutes = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('mm') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatSeconds = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('ss') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatHour = (format, value) => {\n  const shouldAddLeadingZeros =\n    format.indexOf('HH') > -1 || format.indexOf('hh') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\n\nexport const formatMeridiem = (format, value) =>\n  format.indexOf('A') > -1 ? value.toUpperCase() : value.toLowerCase();\n\nexport const parseTimeNumberFromText = stringValue => {\n  const parsedInt = parseInt(stringValue);\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\nexport const focusNextInput = currentEl => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = currentEl => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = ({ min, max }, number, typed) => {\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    if (isNaN(typed)) return parseInt(typed);\n    return max;\n  }\n  if (number < min) return min;\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  const safeString = String(stringValue);\n  const cleanString = safeString.startsWith('00')\n    ? safeString.slice(1)\n    : safeString;\n  return number * 10 > max || String(max).length === cleanString.length;\n};\n\nexport const getTimeValuesFromTime = (time, format, use12Hours) => {\n  if (!time) return {};\n  const hours = use12Hours ? time.hour() % 12 || 12 : time.hour();\n  const minutes = time.minutes();\n  const seconds = time.seconds();\n  const meridiem = !isAM(time) ? PM : AM;\n\n  return {\n    hours: formatHour(format, hours),\n    minutes: formatMinutes(format, minutes),\n    seconds: formatSeconds(format, seconds),\n    meridiem,\n  };\n};\n\nexport const resetTimeValues = () => ({\n  hours: '',\n  minutes: '',\n  seconds: '',\n  meridiem: AM,\n});\n\nexport const commonInputProps = (onKeyDown, onInputFocus, onClick) => ({\n  pattern: '[0-9]*',\n  type: 'text',\n  onKeyDown,\n  onClick,\n  onFocus: onInputFocus,\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useEffect, useState } from 'react';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  formatHour,\n  formatMinutes,\n  formatSeconds,\n  formatMeridiem,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getTimeValuesFromTime,\n  isArrowIncrementDecrement,\n  shouldFocusNextInput,\n  placeholderFormat,\n} from './utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  BACKSPACE,\n  ESCAPE,\n  HOME,\n  HOUR_RANGE_12,\n  HOUR_RANGE_24,\n  GENERAL_TIME_RANGE,\n  END,\n  PLACEHOLDER_TIME,\n  SHIFT,\n} from '../../utils/constants';\n\nconst blockName = 'input-times-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst TimeInput = aggregatedClasses('input')(blockName, 'input');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst TimeDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst TimeInputs = ({\n  time,\n  format,\n  use12Hours,\n  step = 1,\n  showHours,\n  showMinutes,\n  showSeconds,\n  onChange,\n  disabled,\n  innerRef,\n  'arial-label': ariaLabel,\n}) => {\n  const [meridiem, setMeridiem] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [seconds, setSeconds] = useState('');\n  const [currentKey, setCurrentKey] = useState('');\n  const [lastTypedNumber, setLastTypedNumber] = useState(null);\n  const [timeSelected, setTimeSelected] = useState(time);\n  const prevTime = usePrevious(time);\n  const inputRefs = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null,\n  };\n\n  useEffect(() => {\n    if (time) {\n      const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, []);\n\n  useEffect(() => {\n    const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n    if (!time && prevTime) {\n      setMeridiem('');\n      setHours('');\n      setMinutes('');\n      setSeconds('');\n    }\n\n    if (time && prevTime) {\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, [time, prevTime, format, use12Hours]);\n\n  const focusNextInputIfNeeded = (currentEl, max, number) => {\n    if (\n      shouldFocusNextInput(max, number, currentEl.value) &&\n      !isArrowIncrementDecrement(currentKey) &&\n      !hasInputValue\n    ) {\n      focusNextInput(currentEl);\n    }\n  };\n\n  const getNextTimeValue = (value, incrementing = true) => {\n    const parsedValue = parseTimeNumberFromText(value);\n    return incrementing ? parsedValue + step : parsedValue - step;\n  };\n\n  const onInputFocus = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.select();\n  };\n\n  const onClick = (e) => {\n    if (e.target.value) {\n      setHasInputValue(true);\n    }\n  };\n\n  // eslint-disable-next-line max-statements\n  const onKeyDown = (event, max) => {\n    const { target } = event;\n    const { value } = target;\n    setLastTypedNumber(event.key);\n    switch (event.key) {\n      case ARROW_UP: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const incrementedValue = getNextTimeValue(value);\n        setNativeValue(event.target, incrementedValue);\n        break;\n      }\n      case ARROW_DOWN: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const decrementedValue = getNextTimeValue(value, false);\n        setNativeValue(event.target, decrementedValue);\n        break;\n      }\n      case BACKSPACE: {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case ESCAPE: {\n        event.preventDefault();\n        event.target.blur();\n        break;\n      }\n      case HOME: {\n        event.preventDefault();\n        setNativeValue(event.target, String(max));\n        focusNextInput(event.target);\n        break;\n      }\n      case END: {\n        event.preventDefault();\n        setNativeValue(event.target, '00');\n        focusNextInput(event.target);\n        break;\n      }\n      case SHIFT:\n        event.preventDefault();\n        setCurrentKey(event.key);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isTimeCompletelySet = () => {\n    let neededValues = [];\n\n    if (showHours) neededValues = [...neededValues, hours || null];\n    if (showMinutes) neededValues = [...neededValues, minutes || null];\n    if (showSeconds) neededValues = [...neededValues, seconds || null];\n    if (use12Hours) neededValues = [...neededValues, meridiem || null];\n\n    return !neededValues.some((value) => !value);\n  };\n\n  // eslint-disable-next-line complexity\n  useEffect(() => {\n    const selectedTime = time || moment();\n    if (isTimeCompletelySet()) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      setTimeSelected(selectedTime);\n    }\n  }, [hours, minutes, seconds, meridiem]);\n\n  const handleSecondsChange = (e) => {\n    const { value } = e.target;\n    const secondsHandled = parseTimeNumberFromText(value);\n\n    const nextSeconds = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      secondsHandled,\n      lastTypedNumber,\n    );\n\n    setSeconds(formatSeconds(format, nextSeconds));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleMinutesChange = (e) => {\n    const { value } = e.target;\n    const minutesHandled = parseTimeNumberFromText(value);\n    const nextMinutes = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      minutesHandled,\n      lastTypedNumber,\n    );\n\n    setMinutes(formatMinutes(format, nextMinutes));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleHoursChange = (e) => {\n    const { value } = e.target;\n    const hour = parseTimeNumberFromText(value);\n    const hoursRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    const nextHour = getValidTimeNumber(hoursRange, hour, lastTypedNumber);\n    setHours(formatHour(format, nextHour));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, hoursRange.max, value);\n  };\n\n  const handleMeridiemKeyDown = (e) => {\n    if (e.key === ARROW_UP || e.key === 'a') {\n      setMeridiem(formatMeridiem(format, AM));\n    } else if (e.key === ARROW_DOWN || e.key === 'p') {\n      setMeridiem(formatMeridiem(format, PM));\n    } else if (e.key === SHIFT) {\n      setCurrentKey(e.key);\n    } else if (e.key === BACKSPACE) {\n      setMeridiem('');\n    }\n    onChange(timeSelected);\n  };\n\n  const handleMeridiemBlur = (e) => {\n    const { value } = e.target;\n    if (value !== AM && value !== PM) {\n      setMeridiem('');\n    }\n  };\n\n  const renderSecondsInput = () => {\n    if (!showSeconds) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"seconds-input\"\n        data-testid=\"ds-time-input__seconds\"\n        aria-label={ariaLabel || 'Seconds Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.seconds = node)}\n        onChange={handleSecondsChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.seconds, format)}\n        value={seconds}\n      />\n    );\n  };\n\n  const renderMinutesInput = () => {\n    if (!showMinutes) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"minutes-input\"\n        data-testid=\"ds-time-input__minutes\"\n        aria-label={ariaLabel || 'Minutes Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.minutes = node)}\n        onChange={handleMinutesChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.minutes, format)}\n        value={minutes}\n      />\n    );\n  };\n\n  const renderHoursInput = () => {\n    if (!showHours) return null;\n    const hourFormatRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, hourFormatRange.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"hour-input\"\n        data-testid=\"ds-time-input__hours\"\n        aria-label={ariaLabel || 'Hours Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.hours = node)}\n        onChange={handleHoursChange}\n        placeholder={placeholderFormat(\n          PLACEHOLDER_TIME.hour,\n          format,\n          use12Hours,\n        )}\n        value={hours}\n      />\n    );\n  };\n\n  const renderMeridiemInput = () => {\n    if (!use12Hours) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps}\n        key=\"meridiem-input\"\n        data-testid=\"ds-time-input__ampm\"\n        aria-label={ariaLabel || 'Meridiem Input'}\n        disabled={disabled}\n        onBlur={handleMeridiemBlur}\n        onKeyDown={handleMeridiemKeyDown}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.meridiem, format)}\n        value={meridiem}\n      />\n    );\n  };\n\n  const renderTimeInputs = () => {\n    const inputs = [\n      renderHoursInput(),\n      renderMinutesInput(),\n      renderSecondsInput(),\n    ];\n    /* eslint-disable indent */\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <TimeDivider\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={index}\n                  content=\":\"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n    /* eslint-enable indent */\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n      renderMeridiemInput(),\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderTimeInputs()}</InputTimesGroup>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useRef, useMemo } from 'react';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport memoizeOne from 'memoize-one';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport TimeInputs from './TimeInputs';\n\nconst blockName = 'input-time';\n\nconst InputTimeContainer = aggregatedClasses('div')(blockName);\n\nconst TimeInputImpl = ({\n  format,\n  innerRef,\n  onChange,\n  className,\n  value,\n  disabled,\n  'arial-label': ariaLabel,\n}) => {\n  const getVisibleTimeInputs = memoizeOne(formatValue =>\n    getVisibleTimeByFormat(formatValue),\n  );\n  let inputsContainer = useRef();\n\n  const handleFocus = e => {\n    if (!e.target.type) {\n      inputsContainer.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeInputs(format));\n\n  return (\n    <InputTimeContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <TimeInputs\n        aria-label={ariaLabel}\n        disabled={disabled}\n        format={format}\n        innerRef={node => (inputsContainer = node)}\n        onChange={onChange}\n        time={value}\n        {...visibleInputs}\n      />\n    </InputTimeContainer>\n  );\n};\n\nexport default TimeInputImpl;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.499 6.969a.503.503 0 0 0-.313.109l-5 4a.5013.5013 0 0 0-.078.703c.173.214.488.25.703.078l4.688-3.75 4.688 3.75c.218.172.531.136.703-.078a.5004.5004 0 0 0-.078-.703l-5-4a.501.501 0 0 0-.313-.109z',\n  ],\n  height: 20,\n  width: 20,\n});\n","export function MoveElementOnScroll(\n  element,\n  {\n    container,\n    min = 0,\n    max = element.offsetHeight,\n    speed = 1,\n    smooth = 2,\n    onUpdate = () => null,\n    onEndScroll = () => null,\n  },\n) {\n  let moving = false;\n  let pos = min;\n  let lastPos = pos;\n\n  // todo: move this to utils if we finally need it\n  const requestFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(func) {\n        window.setTimeout(func, 1000 / 50);\n      }\n    );\n  })();\n\n  function update() {\n    moving = true;\n    const delta = (pos - lastPos) / smooth;\n    lastPos += delta;\n\n    if (Math.abs(delta) > 0.7) {\n      requestFrame(() => {\n        onUpdate(lastPos, delta);\n        update();\n      });\n    } else {\n      onEndScroll(pos);\n      moving = false;\n    }\n  }\n\n  function scrolling(e) {\n    e.preventDefault(); // disable default scrolling\n    let delta = e.delta || e.wheelDelta;\n    if (delta === undefined) {\n      // for firefox\n      delta = -e.detail;\n      delta *= 10 * speed;\n    }\n\n    pos += -delta * speed;\n    pos = Math.max(min, Math.min(pos, max)); // limit scrolling\n    if (!moving) {\n      update();\n    }\n  }\n\n  container.addEventListener('mousewheel', scrolling, false);\n  container.addEventListener('DOMMouseScroll', scrolling, false);\n\n  return {\n    unsubscribe: () => {\n      container.removeEventListener('mousewheel', scrolling);\n      container.removeEventListener('DOMMouseScroll', scrolling);\n    },\n    updatePosition: newPos => {\n      pos = -newPos;\n      lastPos = -pos;\n    },\n  };\n}\n\nexport default MoveElementOnScroll;\n","/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport { findIndex } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport memoizeOne from 'memoize-one';\nimport ChevronSmallUp from '@elliemae/ds-icons/ChevronSmallUp';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport ChevronSmallDown from '@elliemae/ds-icons/ChevronSmallDown';\nimport { MoveElementOnScroll } from './moveElementOnScroll';\nimport { validateIndex } from './utils';\n\nconst blockName = 'time-picker-panel';\n\nconst Container = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ scrolling }) => ({ scrolling }),\n);\nconst Wrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst PickerItemListContainer = aggregatedClasses('div')(\n  blockName,\n  'item-list-container',\n);\nconst PickerItemList = aggregatedClasses('div')(blockName, 'item-list');\nconst PickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst PickerItemContainer = aggregatedClasses('div')(\n  blockName,\n  'item',\n  ({ selected }) => ({ selected }),\n);\nconst PickerSelectedOptionSelected = aggregatedClasses('div')(\n  blockName,\n  'selected-container',\n);\nconst SelectedCircle = aggregatedClasses('div')(blockName, 'selected-circle');\nconst ArrowButtonContainer = aggregatedClasses('div')(\n  blockName,\n  'arrow-container',\n);\n\nconst getOptionIndex = (options, selectedOption, valueProperty = 'value') => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nconst arrowProps = {\n  buttonType: 'text',\n  fluidHeight: true,\n  fluidWidth: true,\n  size: 's',\n};\n\nexport default class PickerPanel extends Component {\n  computeContainerTranslation = memoizeOne(index => {\n    const { options, valueProperty } = this.props;\n    const { selectedOption, scrolling } = this.state;\n\n    const selectedOptionIndex =\n      index || getOptionIndex(options, selectedOption, valueProperty);\n    const listYPosition =\n      this.minYListPosition - selectedOptionIndex * this.optionHeight;\n\n    if (this.scrollHandler && !scrolling)\n      this.scrollHandler.updatePosition(listYPosition);\n\n    return listYPosition;\n  });\n\n  static defaultProps = {\n    valueProperty: 'value',\n    labelProperty: 'label',\n    numberItemsOnScreen: 5, // this number should be impair\n    options: [],\n    arrowStep: 5,\n  };\n\n  constructor(props) {\n    super(props);\n    this.pickerListContainerRef = React.createRef();\n    this.pickerListRef = React.createRef();\n    this.pickerItemRef = React.createRef();\n    this.selectedOptionRef = React.createRef();\n\n    this.state = {\n      selectedOption: props.selected,\n      activeIndex: 0,\n      // eslint-disable-next-line react/no-unused-state\n      prevProps: {},\n    };\n  }\n\n  componentDidMount() {\n    this.computeSizes();\n    const pickerListContainerEl = this.pickerListContainerRef.current;\n    const pickerListEl = this.pickerListRef.current;\n\n    this.scrollHandler = new MoveElementOnScroll(pickerListEl, {\n      container: pickerListContainerEl,\n      min: -this.minYListPosition,\n      max: this.maxYListPosition,\n      onUpdate: (pos, delta) => {\n        const { options } = this.props;\n        const index =\n          options.length -\n          -Math.floor((pos - this.maxYListPosition) / this.optionHeight) +\n          (delta > 0 ? 1 : -1);\n        this.moveTo(index, true);\n      },\n      onEndScroll: () => {\n        this.setState({ scrolling: false });\n      },\n    });\n    this.computeContainerTranslation();\n  }\n\n  componentWillUnmount() {\n    this.scrollHandler.unsubscribe();\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevProps }) {\n    const { selected, valueProperty, options } = nextProps;\n    if (selected !== prevProps.selected) {\n      return {\n        selectedOption: selected,\n        activeIndex: getOptionIndex(options, selected, valueProperty),\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  getOptionValue(option) {\n    const { valueProperty } = this.props;\n    return option[valueProperty];\n  }\n\n  getOptionLabel(option) {\n    const { labelProperty } = this.props;\n    return option[labelProperty];\n  }\n\n  moveTo(index, scrolling) {\n    const { options } = this.props;\n    const { selectedOption } = this.state;\n    const validIndex = validateIndex(index, options);\n    const option = options[validIndex];\n    const optionValue = this.getOptionValue(option);\n    if (selectedOption !== optionValue) {\n      this.handleOptionSelect(optionValue, validIndex, scrolling);\n    }\n  }\n\n  computeSizes() {\n    const { options, numberItemsOnScreen } = this.props;\n    const { offsetHeight: optionHeight } = this.pickerItemRef.current;\n\n    this.optionHeight = optionHeight;\n    this.listHeight = this.optionHeight * numberItemsOnScreen;\n\n    this.minYListPosition = this.listHeight / 2 - this.optionHeight / 2;\n    this.maxYListPosition =\n      this.optionHeight * (options.length - Math.ceil(numberItemsOnScreen / 2));\n  }\n\n  handleOptionSelect(optionValue, index, scrolling) {\n    const { onChange } = this.props;\n    this.setState(\n      state => ({\n        ...state,\n        scrolling,\n        selectedOption: optionValue,\n        activeIndex: index,\n      }),\n      () => {\n        onChange(optionValue, index);\n      },\n    );\n  }\n\n  // TODO: this needs a refactor from de FocusGroup\n  // eslint-disable-next-line max-statements\n  handleKeyDown(e) {\n    const { activeIndex } = this.state;\n    const { options } = this.props;\n    const [firstColumn, ...restColumns] = document.getElementsByClassName(\n      'em-ds-time-picker-panel',\n    );\n    const [lastColumn] = restColumns.slice(-1);\n    const [prev] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const focusedElement = document.activeElement;\n\n    switch (e.key) {\n      case 'Home':\n        this.moveTo(0);\n        break;\n      case 'End':\n        this.moveTo(options.length - 1);\n        break;\n      case 'ArrowUp':\n        this.moveTo(activeIndex - 1);\n        break;\n      case 'ArrowDown':\n        this.moveTo(activeIndex + 1);\n        break;\n      case 'Tab': {\n        e.preventDefault();\n        // If it is DateTimePicker, move focus to prev arrow element\n        if (prev && focusedElement === lastColumn) {\n          prev.focus();\n        } else if (focusedElement === lastColumn) {\n          firstColumn.focus();\n        } else {\n          const position = findIndex(restColumns, focusedElement);\n          restColumns[position + 1].focus();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  handleStepMoveUp() {\n    const { activeIndex } = this.state;\n    const { arrowStep } = this.props;\n    const supposedPos = activeIndex - arrowStep;\n    const nextPos = supposedPos >= 0 ? supposedPos : activeIndex - 1;\n    this.moveTo(nextPos);\n  }\n\n  handleStepMoveDown() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex + arrowStep;\n    const nextPos =\n      supposedPos <= options.length ? supposedPos : activeIndex + 1;\n    this.moveTo(nextPos);\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return <PickerHeader>{header}</PickerHeader>;\n  };\n\n  render() {\n    const { options, hasHeader } = this.props;\n    const { selectedOption, activeIndex, scrolling } = this.state;\n\n    const listYPosition = this.computeContainerTranslation(activeIndex);\n\n    return (\n      <Wrapper>\n        {hasHeader && this.renderHeader()}\n        <Container\n          classProps={{ scrolling }}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n        >\n          <PickerSelectedOptionSelected innerRef={this.selectedOptionRef}>\n            <SelectedCircle />\n          </PickerSelectedOptionSelected>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Up\"\n              disabled={activeIndex <= 0}\n              icon={<ChevronSmallUp />}\n              onClick={this.handleStepMoveUp}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n          <PickerItemListContainer\n            innerRef={this.pickerListContainerRef}\n            style={{\n              height: this.listHeight,\n            }}\n          >\n            <PickerItemList\n              innerRef={this.pickerListRef}\n              style={{\n                transform: `translateY(${listYPosition}px)`,\n              }}\n            >\n              {options.map((option, index) => {\n                const value = this.getOptionValue(option);\n                const label = this.getOptionLabel(option);\n                return (\n                  <PickerItemContainer\n                    key={value}\n                    classProps={{\n                      selected: selectedOption\n                        ? value === selectedOption\n                        : index === 0,\n                    }}\n                    innerRef={this.pickerItemRef}\n                    onClick={() => this.handleOptionSelect(value, index)}\n                  >\n                    {label}\n                  </PickerItemContainer>\n                );\n              })}\n            </PickerItemList>\n          </PickerItemListContainer>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Down\"\n              disabled={activeIndex >= options.length}\n              icon={<ChevronSmallDown />}\n              onClick={this.handleStepMoveDown}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from '@elliemae/ds-utilities/utils';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { isAM } from './utils';\nimport PickerPanel from './PickerPanel';\n\nconst blockName = 'time-picker-menu';\n\nconst TimePickerContainer = aggregatedClasses('div')(blockName);\nconst TimePickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst TimePickerPanelContainer = aggregatedClasses('div')(\n  blockName,\n  'panel-container',\n);\n\nconst generateOption = (format) => (option) => ({\n  value: option,\n  label: typeof format === 'function' ? format(option) : option,\n});\n\nexport default class TimePickerMenu extends Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    time: moment(),\n    hasHeader: false,\n    use12Hours: true,\n    showSeconds: true,\n    showMinutes: true,\n    showHours: true,\n    onTimeChange: () => null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: props.time || moment(),\n    };\n  }\n\n  componentDidMount() {\n    const { time } = this.state;\n    this.setState({ time });\n  }\n\n  handleMinuteChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.minute(value));\n  }\n\n  handleHoursChange(value) {\n    const { time } = this.state;\n    const { use12Hours } = this.props;\n    let nextHour = value;\n    if (use12Hours) {\n      if (!isAM(time)) {\n        nextHour = (value % 12) + 12;\n      }\n    }\n    this.updateTime(time.hour(nextHour));\n  }\n\n  handleSecondsChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.second(value));\n  }\n\n  handleAMPMChange(value) {\n    const { time } = this.state;\n    const hour = time.hour();\n    const nextHour =\n      value.toLowerCase() === 'am' ? hour % 12 : (hour % 12) + 12;\n    this.updateTime(time.hour(nextHour));\n  }\n\n  updateTime(time) {\n    const { onTimeChange } = this.props;\n    onTimeChange(time);\n    this.setState({ time });\n  }\n\n  renderMinutesPanel() {\n    const { time } = this.state;\n    const { showMinutes, format, hasHeader } = this.props;\n    if (!showMinutes) return null;\n    const withLeadingZeros = format.indexOf('mm') > -1;\n    const rangeMinutes = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"M\"\n        onChange={this.handleMinuteChange}\n        options={rangeMinutes}\n        selected={time.minute()}\n      />\n    );\n  }\n\n  renderSecondsPanel() {\n    const { time } = this.state;\n    const { showSeconds, format, hasHeader } = this.props;\n    if (!showSeconds) return null;\n    const withLeadingZeros = format.indexOf('ss') > -1;\n    const rangeSeconds = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"S\"\n        onChange={this.handleSecondsChange}\n        options={rangeSeconds}\n        selected={time.second()}\n      />\n    );\n  }\n\n  // eslint-disable-next-line max-lines\n  renderHoursPanel() {\n    const { time } = this.state;\n    const { showHours, use12Hours, format, hasHeader } = this.props;\n    if (!showHours) return null;\n\n    const selectedHour = use12Hours ? time.hour() % 12 || 12 : time.hour();\n\n    const withLeadingZeros = format.indexOf('hh') > -1;\n    const rangeHours = use12Hours ? range(1, 13) : range(24);\n    const hoursOptions = rangeHours.map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"H\"\n        onChange={this.handleHoursChange}\n        options={hoursOptions}\n        selected={selectedHour}\n      />\n    );\n  }\n\n  renderAMPMPanel() {\n    const { time } = this.state;\n    const { use12Hours, hasHeader } = this.props;\n    if (!use12Hours) return null;\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"\"\n        onChange={this.handleAMPMChange}\n        options={[\n          { value: 'am', label: 'am' },\n          { value: 'pm', label: 'pm' },\n        ]}\n        selected={!isAM(time) ? 'pm' : 'am'}\n      />\n    );\n  }\n\n  renderHeader = () => {\n    const { time } = this.state;\n    return <TimePickerHeader>{time.format('hh:mma')}</TimePickerHeader>;\n  };\n\n  render() {\n    const { hasHeaderDisplay } = this.props;\n\n    return (\n      <TimePickerContainer>\n        {hasHeaderDisplay && this.renderHeader()}\n        <TimePickerPanelContainer>\n          {this.renderHoursPanel()}\n          {this.renderMinutesPanel()}\n          {this.renderSecondsPanel()}\n          {this.renderAMPMPanel()}\n        </TimePickerPanelContainer>\n      </TimePickerContainer>\n    );\n  }\n}\n\nTimePickerMenu.propTypes = {\n  /** Time value */\n  time: PropTypes.instanceOf(moment),\n  /** If the menu has header or not */\n  hasHeader: PropTypes.bool,\n  /** Whether to use the 12 hours format */\n  use12Hours: PropTypes.bool,\n  /** Whether show 'seconds' or not */\n  showSeconds: PropTypes.bool,\n  /** Whether show 'minutes' or not */\n  showMinutes: PropTypes.bool,\n  /** Whether show 'hours' or not */\n  showHours: PropTypes.bool,\n  /** Handler when time changes */\n  onTimeChange: PropTypes.func,\n};\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport {\n  DSDatePickerController,\n  DatePickerDropdown,\n} from '@elliemae/ds-date-picker';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport DSInput from '@elliemae/ds-basic/form/Input';\nimport { DateInputImpl } from '@elliemae/ds-basic/form/DateInput';\nimport { TimeInputImpl } from '@elliemae/ds-basic/form/TimeInput';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport { Menu } from '@elliemae/ds-basic/TimePicker';\nimport { updateDateAndTime } from '../utils';\n\nconst blockName = 'date-time-picker';\n\nconst DateTimePickerWrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst TimePicker = aggregatedClasses(Menu)(blockName, 'time-picker');\nconst TimePickerWrapper = aggregatedClasses('div')(\n  blockName,\n  'time-picker-wrapper',\n);\nconst DateInput = aggregatedClasses(DateInputImpl)(blockName, 'date-input');\n\nconst DSDateTimePickerImpl = ({\n  placeholder,\n  date,\n  datePickerProps: {\n    disabled = false,\n    numberOfMonths = 1,\n    readOnly = false,\n    enableOutsideDays = false,\n    transitionDuration = 0,\n    firstDayOfWeek = 0,\n    keepOpenOnDateSelect = true,\n    hideKeyboardShortcutsPanel = true,\n    onPrevMonthClick = () => null,\n    onNextMonthClick = () => null,\n    onClose = () => null,\n    onDateChange = () => null,\n    phrases = SingleDatePickerPhrases,\n    displayFormatDay = 'D',\n    isDayBlocked = () => false,\n    isOutsideRange = () => false,\n    isDayHighlighted = () => false,\n  },\n  timePickerProps: {\n    format = 'hh:mm A',\n    onChange: onChangeTimePicker = () => null,\n  },\n}) => {\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dateTimePickerWrapperRef = useRef();\n\n  useEffect(() => {\n    if (date) setSelectedDate(moment(date));\n  }, [date]);\n\n  const visiblePanels = useMemo(() => getVisibleTimeByFormat(format), []);\n\n  const currentYear = moment().year();\n\n  const handleDatePickerChange = (dateSelected) => {\n    const splittedDate = updateDateAndTime(dateSelected, selectedDate);\n    if (!readOnly) {\n      setSelectedDate(splittedDate);\n      onDateChange(splittedDate);\n    }\n  };\n\n  const onTimeChange = (pickerTime) => {\n    const splittedDate = updateDateAndTime(selectedDate, pickerTime);\n    onChangeTimePicker(splittedDate);\n    setSelectedDate(splittedDate);\n  };\n\n  const handleInputChange = (inputValue) => {\n    setSelectedDate(inputValue);\n    onChangeTimePicker(inputValue);\n    onDateChange(inputValue);\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!dateTimePickerWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleClickEscape = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  return (\n    <DSInputGroup\n      rightAddon={\n        <DatePickerDropdown\n          disabled={disabled}\n          isOpen={isOpen}\n          menu={\n            <DateTimePickerWrapper\n              ref={dateTimePickerWrapperRef}\n              data-testid=\"date-time-picker\"\n            >\n              <DSDatePickerController\n                date={selectedDate}\n                displayFormatDay={displayFormatDay}\n                enableOutsideDays={enableOutsideDays}\n                firstDayOfWeek={firstDayOfWeek}\n                hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                isDayBlocked={isDayBlocked}\n                isDayHighlighted={isDayHighlighted}\n                isOutsideRange={isOutsideRange}\n                keepOpenOnDateSelect={keepOpenOnDateSelect}\n                numberOfMonths={numberOfMonths}\n                onClickEscape={handleClickEscape}\n                onClose={onClose}\n                onDateChange={handleDatePickerChange}\n                onFocusChange={() => {}}\n                // eslint-disable-next-line max-lines\n                onNextMonthClick={onNextMonthClick}\n                onOutsideClick={(event) => handleOutsideClick(event)}\n                onPrevMonthClick={onPrevMonthClick}\n                phrases={phrases}\n                transitionDuration={transitionDuration}\n              />\n              <TimePickerWrapper>\n                <TimePicker\n                  disabled={disabled}\n                  format={format}\n                  hasHeader\n                  hasHeaderDisplay\n                  onTimeChange={onTimeChange}\n                  showSeconds={false}\n                  time={selectedDate}\n                  {...visiblePanels}\n                />\n              </TimePickerWrapper>\n            </DateTimePickerWrapper>\n          }\n          onClick={handleOpen}\n          readOnly={readOnly}\n        />\n      }\n    >\n      <DSInput\n        customInputType={({ onChange: handleChange, ...restInputProps }) => (\n          <>\n            <DateInput\n              disabled={disabled}\n              format=\"MM:DD:YYYY\"\n              onChange={(dateSelected) => handleChange(dateSelected)}\n              {...restInputProps}\n              yearMaxRange={currentYear + 100}\n              yearMinRange={currentYear - 100}\n            />\n            <TimeInputImpl\n              disabled={disabled}\n              format=\"hh:mm\"\n              onChange={(time) => handleChange(time)}\n              {...restInputProps}\n            />\n          </>\n        )}\n        isShowElipsisActive={false}\n        disabled={disabled}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n        value={selectedDate}\n      />\n    </DSInputGroup>\n  );\n};\n\nexport default DSDateTimePickerImpl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSDateTimePickerImpl from './components/DateTimePickerImpl';\nimport english from './lang/english';\n\nconst {\n  placeholder: placeholderDefault,\n  className: classNameDefault,\n  id: idDefault,\n} = english;\n\nconst DSDateTimePicker = ({\n  containerProps = {},\n  className = classNameDefault,\n  id = idDefault,\n  placeholder = placeholderDefault,\n  date,\n  datePickerProps = {\n    disabled: false,\n    numberOfMonths: 1,\n    readOnly: false,\n    enableOutsideDays: false,\n    transitionDuration: 0,\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    displayFormatDay: 'D',\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n  },\n  timePickerProps = {\n    format: 'hh:mm A',\n    onChange: () => null,\n  },\n}) => {\n  const { cssClassName } = convertPropToCssClassName(\n    'datetimepicker',\n    className,\n    {\n      id,\n    },\n  );\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDateTimePickerImpl\n        date={date}\n        datePickerProps={datePickerProps}\n        placeholder={placeholder}\n        timePickerProps={timePickerProps}\n      />\n    </div>\n  );\n};\n\nexport default DSDateTimePicker;\n\nDSDateTimePicker.propTypes = {\n  /**\n   * Initial date, by default current date\n   */\n  date: PropTypes.instanceOf(Date, moment),\n  /**\n   * DatePicker properties\n   */\n  datePickerProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    numberOfMonths: PropTypes.number,\n    readOnly: PropTypes.bool,\n    enableOutsideDays: PropTypes.bool,\n    transitionDuration: PropTypes.number,\n    firstDayOfWeek: PropTypes.number,\n    keepOpenOnDateSelect: PropTypes.bool,\n    hideKeyboardShortcutsPanel: PropTypes.bool,\n    onPrevMonthClick: PropTypes.func,\n    onNextMonthClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onDateChange: PropTypes.func,\n    phrases: PropTypes.shape({\n      calendarLabel: PropTypes.string,\n      closeDatePicker: PropTypes.string,\n      clearDates: PropTypes.string,\n      focusStartDate: PropTypes.string,\n      jumpToPrevMonth: PropTypes.string,\n      jumpToNextMonth: PropTypes.string,\n      keyboardShortcuts: PropTypes.string,\n      showKeyboardShortcutsPanel: PropTypes.string,\n      hideKeyboardShortcutsPanel: PropTypes.string,\n      openThisPanel: PropTypes.string,\n      enterKey: PropTypes.string,\n      leftArrowRightArrow: PropTypes.string,\n      upArrowDownArrow: PropTypes.string,\n      pageUpPageDown: PropTypes.string,\n      homeEnd: PropTypes.string,\n      escape: PropTypes.string,\n      questionMark: PropTypes.string,\n      selectFocusedDate: PropTypes.string,\n      moveFocusByOneDay: PropTypes.string,\n      moveFocusByOneWeek: PropTypes.string,\n      moveFocusByOneMonth: PropTypes.string,\n      moveFocustoStartAndEndOfWeek: PropTypes.string,\n      returnFocusToInput: PropTypes.string,\n      keyboardNavigationInstructions: PropTypes.string,\n      chooseAvailableStartDate: PropTypes.func,\n      chooseAvailableEndDate: PropTypes.func,\n      dateIsUnavailable: PropTypes.func,\n      dateIsSelected: PropTypes.func,\n    }),\n    displayFormatDay: PropTypes.string,\n    isDayBlocked: PropTypes.func,\n    isOutsideRange: PropTypes.func,\n    isDayHighlighted: PropTypes.func,\n  }),\n  /**\n   * Input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * TimePicker properties\n   */\n  timePickerProps: PropTypes.shape({\n    format: PropTypes.string,\n    onChange: PropTypes.func,\n  }),\n};\n"],"sourceRoot":""}