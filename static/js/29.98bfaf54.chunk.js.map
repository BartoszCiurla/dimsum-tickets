{"version":3,"sources":["../../../src/DatePicker.js","../../../../../src/components/DatePickerPicker/DatePickerPicker.js","../../../../src/components/DatePickerDropdown.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../../src/operators.js","../../../../src/components/DSDatePickerImpl.js","../../../src/DSDatePicker.js"],"names":["createIcon","paths","height","width","Picker","className","disabled","icon","size","DSIconSizes","buttonActionType","onClick","onBlur","readOnly","rest","aria-label","buttonType","color","DSIconColors","PropTypes","onFocus","bool","classNameElement","convertPropToCssClassName","noop","DatePickerDropdown","isOpen","menu","zIndex","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","number","Container","aggregatedClasses","InputAddon","AddonWrapper","this","leftAddon","rightAddon","inputComponent","containerProps","childType","Component","DSInputGroup","innerRef","style","InputComponents","ref","children","element","isNull","a","value","DSdatePickerImpl","inputFocused","date","defaultValue","primaryInput","selectedDate","dataInput","moment","maskFocus","safeValue","Boolean","onDateChange","keepOpenOnDateSelect","event","momentvalue","focused","onClose","undefined","numberOfMonths","enableOutsideDays","transitionDuration","firstDayOfWeek","hideKeyboardShortcutsPanel","onPrevMonthClick","onNextMonthClick","phrases","placeholder","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","tabIndex","safedate","safeInputValue","minHeight","onClickEscape","onFocusChange","onOutsideClick","mask","MASK_TYPES","onChange","pipe","MASK_PIPES","nextProps","prevProps","React","DSDatePicker","id","appendToBody","required","hasError","screenReaderInputMessage","initialVisibleMonth","SingleDatePickerPhrases","displayFormat","verticalSpacing","openDirection","cssClassName","safeDate","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected","func","string"],"mappings":"4HAGA,EAAeA,YAAW,CACxBC,MAAO,CAAC,idADgB,0HAKxBC,OALwB,GAMxBC,MAAO,K,wICFHC,EAAS,SAAC,GAAD,kBACbC,OADa,wCAEbC,OAFa,kBAGbC,OAHa,MAGN,sBAHM,iBAIbC,OAJa,MAINC,IAJM,yBAKbC,OALa,gCAMbC,OANa,MAMH,wBANG,aAObC,OAPa,MAOJ,wBAPI,eAQbC,OARa,SASVC,EATU,8GAWb,uBACEC,aAAYD,iBADd,qBAEEE,WAFF,EAGEX,UAHF,EAIEY,MAAQX,EAAkCY,IAJ5C,QAIqBA,IAAZ,QACPZ,SALF,EAMEC,KANF,EAOEK,OAPF,EAQED,QARF,EASEE,SATF,EAUEL,KAAMA,KAIVJ,YAAmB,CACjBC,UAAWc,IADM,OAEjBb,SAAUa,IAFO,KAGjBZ,KAAMY,IAHW,QAIjBX,KAAMW,UAJW,KAKjBT,iBAAkBS,UALD,KAMjBR,QAASQ,IANQ,KAOjBC,QAASD,IAPQ,KAQjBP,OAAQO,IARS,KASjBN,SAAUM,IAAUE,M,6GCnCdC,EAAqBC,YAA0B,oBAA/CD,iBAEFE,EAAO,wBACb,SAASC,EAAmB,GAOzB,QANDnB,gBAMC,SALDO,EAKC,EALDA,SAKC,IAJDF,eAIC,MAJSa,EAIT,EAHDE,EAGC,EAHDA,OACAC,EAEC,EAFDA,KACAC,EACC,EADDA,OAEA,OACE,uBACEC,iBADF,EAEEH,OAFF,EAGEI,UAAW,CACTC,gBAAiB,CACfC,SADe,EAEfC,QAFe,EAGfC,kBAAmB,WAGvBC,WAVF,EAWEC,iBACE,6BACE,uBACE/B,UAAWiB,EADb,UAEEhB,SAFF,EAGEK,QAHF,EAIEE,SAAUA,KAIhBe,OAAQA,IAKdH,YAA+B,CAC7BnB,SAAUa,IADmB,KAE7BN,SAAUM,IAFmB,KAG7BR,QAASQ,IAHoB,KAI7BO,OAAQP,IAJqB,KAK7BQ,KAAMR,IALuB,QAM7BS,OAAQT,IAAUkB,Q,mlBC/CpB,IAEMC,EAAYC,mBAFlB,qBAGMC,EAAaD,oBAHnB,oBAGA,SAEqBE,c,wNAGX,I,uDAEC,MAOHC,KAPG,MAELC,EAFK,YAGLC,EAHK,aAIKC,EAJL,WAKLxC,EALK,YAMLyC,EANK,iBAQDC,EACJF,GAAkBA,EAAlBA,MAAyCA,OAAzCA,KACIA,YADJA,cADF,UAIA,OACE,iCACExC,UAAS,wBAxBjB,oBAwBiB,iBADX,GAIGsC,GAAa,yBAJhB,KAMGC,GAAc,yBAPnB,Q,EAjBiBH,CAAqBO,a,YAArBP,iBACG,I,QCLlBQ,EAAe,SAAC,GAAD,uBACnBH,OADmB,wBAEnBI,OAFmB,2BAGnB7C,OAHmB,qBAInB8C,OAJmB,yBAKnBR,OALmB,4BAMnBC,OANmB,aAOTQ,EAPS,kBASnB,qBACEC,IADF,EAEEhD,UAFF,EAGEyC,eAHF,EAIEH,UAJF,EAKEC,WALF,EAMEO,MAAOA,GAfU,IAqBrBF,YAAyB,CACvBH,eAAgB3B,UADO,IAEvB+B,SAAU/B,IAFa,KAGvBd,UAAWc,IAHY,OAOvBgC,MAAOhC,aAAmBA,IAPH,QAWvBwB,UAAWxB,IAXY,QAevByB,WAAYzB,IAfW,QAmBvBmC,SAAUnC,IAAUoC,S,wPCRTC,EAAS,SAAAC,GAAC,MA9BrBC,MAD2BA,EA+BN,SA9BrBA,IAAgBA,GADgB,OACOA,EADZ,IAAAA,G,idCORC,Y,4BACnB,cAAmB,iCACjB,iBADiB,mFA2BH,WACd,WAAc,CAAEC,cAAc,OA5Bb,2CA+BJ,WAAM,MACmB,EADnB,MACXF,EADW,QACJG,EADI,OACEC,EADF,iBAE+B,EAF/B,MAEXC,EAFW,eAEGC,EAFH,eAEiBC,EAFjB,YAGnB,SACSC,IAAP,GAEF,EACSA,IAAP,GAEF,EACSA,IAAP,GAEEH,GAAJ,EACSG,IAAOD,SAAd,OAEF,GAGA,QAjDiB,gDAoDC,WAAM,MACuB,EADvB,MAChBA,EADgB,YACLF,EADK,eACSI,EADT,YAEhBT,EAAU,EAFM,YAGlBU,EAAY,EAAlB,eAEA,OAAIZ,EAAJ,GAA0B,GAExBY,UAGAA,yBAAmCH,SAJrC,MAMSG,SAAP,cAEEL,GAAJ,EAAsCE,SAAP,MAE/B,EACOG,SAAP,YADuB,MApEN,2CAwEJ,WAAM,MACK,EADL,MACXV,EADW,QACJG,EADI,OAEnB,OAAOQ,YAAkBA,QAAzB,MA1EiB,+CA6EA,cAAiB,MACuB,EADvB,MAC1BxD,EAD0B,WAChByD,EADgB,eACFC,EADE,uBAElC,IACO,EAAL,gBACE,WAAc,CAAEP,aAAF,EAAsBD,cAAc,IAEpDO,KACA,WAAc,CAAEP,cAAc,IACzBQ,GAAL,UAA6BC,OAC3B,WAAc,CAAEZ,cAAc,QAtFjB,2CA0FJ,SAAAK,GAAa,IAClBK,EAAiB,EADC,mBAEpBG,EAAcP,IAAOD,SAA3B,OACA,WAAc,CAAED,aAAF,EAA6BC,UAA7B,EAAwCF,cAAc,IACpEO,QA9FiB,0CAiGL,YAAiB,IAAdI,EAAc,EAAdA,QACf,WAAc,CAAEd,aAAcc,OAlGb,kDAqGG,WAAM,IAClBC,EAAY,EADM,cAG1B,WAAc,CAAEf,cAAc,IAC9B,iBACAe,OA1GiB,gDA6GC,WAAM,IAChBA,EAAY,EADI,cAGxB,WAAc,CAAEf,cAAc,IAC9B,iBACAe,OAlHiB,2CAqHJ,WAAM,IACX/D,EAAW,EADA,aAEXoD,EAAiB,EAFN,mBAInB,WAAc,CAAEG,WAAF,EAAoBF,eAAWW,IAC7ChE,QA1HiB,+CA6HA,SAAAqD,GAAa,IACtB7C,EAAY,EADU,cAE9B,WAAc,CAAE+C,WAAW,IAC3B/C,QA9HA,QAAa,CACX4C,aAAc,EADH,eAEXJ,cAFW,EAGXO,WAHW,EAIXJ,cAAc,GANC,E,qDAmIV,WACCH,EAAiBlB,KADlB,qBAsBHA,KAtBG,MAGLpC,EAHK,WAILuE,EAJK,iBAKLhE,EALK,WAMLiE,EANK,oBAOLC,EAPK,qBAQLC,EARK,iBASLT,EATK,uBAULU,EAVK,6BAWLC,EAXK,mBAYLC,EAZK,mBAaLR,EAbK,UAcLS,EAdK,UAeLC,EAfK,cAgBLC,EAhBK,mBAiBLC,EAjBK,eAkBLC,EAlBK,iBAmBLC,EAnBK,mBAoBLC,EApBK,WAqBL9D,EArBK,SAuBD+D,EAAWjD,KAAjB,eACMkD,EAAiBlD,KAAvB,oBACA,OACE,uBACEE,WACE,uBACEtC,SADF,EAEEoB,OAFF,EAGEC,KACE,yBAAKwB,MAAO,CAAE0C,UAAW,UACvB,uBACEhC,KADF,EAEEyB,iBAFF,EAGER,kBAHF,EAIEE,eAJF,EAKEC,2BALF,EAMEM,aANF,EAOEE,iBAPF,EAQED,eARF,EASEjB,qBATF,EAUEM,eAVF,EAWEiB,cAAepD,KAXjB,kBAYEiC,QAZF,EAaEL,aAAY,yCACZyB,cAAerD,KAdjB,YAeEyC,iBAfF,EAgBEa,eAAgBtD,KAhBlB,oBAiBEwC,iBAjBF,EAkBEE,QAlBF,EAmBEL,mBAAoBA,KAI1BpE,QAAS+B,KA5BX,cA6BE7B,SA7BF,EA8BEe,OAAQA,KAIZ,uBACEb,aAAYsE,GADd,yBAEE/E,SAFF,EAGE2F,KAAMC,IAHR,KAIEtF,OAAQ8B,KAJV,aAKEyD,SAAUzD,KALZ,aAMEtB,QAASsB,KANX,iBAOE0D,KAAMC,IAPR,kBAQEhB,YARF,EASEK,SATF,EAUEhC,MAAOkC,Q,gDA/LiBU,EAAWC,GACzC,OAAID,UAAoBC,EAAxB,MACS,CACLvC,aAAcsC,QAAkBpC,IAAOoC,EAAzBA,OAA4C,IAG1DA,SAAmBC,EAAvB,MACS,CACLvC,aAAcsC,OAAiBpC,IAAOoC,EAAxBA,MAA0C,IAI5D,S,EAzBiB3C,CAAyB6C,IAAMxD,WCS9CyD,EAAe,SAAC,GAoChB,QAnCJ3D,sBAmCI,MAnCa,GAmCb,MAlCJ4D,UAkCI,MAlCC,GAkCD,MAjCJC,oBAiCI,aAhCJtG,iBAgCI,MAhCQ,GAgCR,EA/BJwD,EA+BI,EA/BJA,KACAH,EA8BI,EA9BJA,MA8BI,IA7BJ2B,mBA6BI,MA7BU,GA6BV,MA5BJ/E,gBA4BI,aA3BJsG,gBA2BI,aA1BJ/F,gBA0BI,aAzBJgG,gBAyBI,aAxBJC,gCAwBI,MAxBuB,cAwBvB,MAvBJhC,yBAuBI,aAtBJiC,2BAsBI,MAtBkB7C,MAsBlB,MArBJc,sBAqBI,MArBa,EAqBb,MApBJT,4BAoBI,aAnBJU,kCAmBI,aAlBJkB,gBAkBI,MAlBO,wBAkBP,MAjBJ7B,oBAiBI,WAjBWM,EAiBX,MAhBJM,wBAgBI,MAhBe,wBAgBf,MAfJC,wBAeI,MAfe,wBAef,MAdJR,eAcI,MAdM,wBAcN,MAbJvD,eAaI,MAbM,wBAaN,MAZJR,cAYI,MAZK,wBAYL,MAXJwE,gBAWI,MAXM4B,0BAWN,OAVJC,sBAUI,OAVY,IAUZ,QATJ3B,yBASI,OATe,IASf,QARJP,2BAQI,OARiB,EAQjB,QAPJmC,wBAOI,OAPc,EAOd,QANJ3B,qBAMI,OANW,qBAMX,QALJC,uBAKI,OALa,qBAKb,QAJJC,yBAII,OAJe,qBAIf,QAHJZ,uBAGI,OAHa,EAGb,QAFJsC,sBAEI,OAFY,OAEZ,QADJvF,eACI,OADK,OACL,GACIwF,GAAiB7F,YAA0B,aAAclB,EAAW,CAC1EwG,SAD0E,EAE1EhG,SAF0E,EAG1EP,SAH0E,EAI1EoG,OALE,aAOEW,GAAWxD,GAAjB,EACA,OACE,qCAAKxD,UAAW+G,IAAhB,GACE,qBACET,aADF,EAEE9C,KAFF,GAGEvD,SAHF,EAIE2G,cAJF,GAKE3B,iBALF,GAMER,kBANF,EAOEE,eAPF,EAQEC,2BARF,EASE8B,oBAAqB,kBACnBA,EAAsB7C,IAAH,GAAiCA,IADjC,KAGrBqB,aAZF,GAaEE,iBAbF,GAcED,gBACE,IAAAA,KAAA,IAA2BA,GACvB,sBAhBR,GAmBEjB,qBAnBF,EAoBEM,eApBF,GAqBEjE,OArBF,EAsBE+D,QAtBF,EAuBEL,aAAc,WACZ,GAAkBA,0BAClB,GAAc6B,2BAEhB/E,QA3BF,EA4BE+D,iBA5BF,EA6BED,iBA7BF,EA8BEiC,cA9BF,GA+BE/B,QA/BF,GAgCEC,YAhCF,EAiCExE,SAjCF,EAkCE+F,SAlCF,EAmCEE,yBAnCF,EAoCE/B,mBApCF,GAqCErB,MArCF,GAsCEwD,gBAtCF,GAuCEtF,OAAQA,OAMhB6E,YAAyB,CACvB3D,eAAgB3B,UADO,IAEvBuF,GAAIvF,IAFmB,OAGvBwF,aAAcxF,IAHS,KAIvBd,UAAWc,IAJY,OAKvB0C,KAAM1C,oBALiB,KAMvBuC,MAAOvC,oBANgB,KAQvBkE,YAAalE,IARU,OASvBb,SAAUa,IATa,KAUvByF,SAAUzF,IAVa,KAWvBN,SAAUM,IAXa,KAYvB0F,SAAU1F,IAZa,KAavB2F,yBAA0B3F,IAbH,OAcvB2D,kBAAmB3D,IAdI,KAevB4F,oBAAqB5F,oBAfE,KAgBvB6D,eAAgB7D,IAhBO,OAiBvBoD,qBAAsBpD,IAjBC,KAkBvB8D,2BAA4B9D,IAlBL,KAmBvBgF,SAAUhF,IAnBa,KAoBvBmD,aAAcnD,IApBS,KAqBvB+D,iBAAkB/D,IArBK,KAsBvBgE,iBAAkBhE,IAtBK,KAuBvBP,OAAQO,IAvBe,KAwBvBwD,QAASxD,IAxBc,KAyBvBC,QAASD,IAzBc,KA0BvBiE,QAAS,UAAgB,CACvBkC,cAAenG,IADQ,OAEvBoG,gBAAiBpG,IAFM,OAGvBqG,WAAYrG,IAHW,OAIvBsG,eAAgBtG,IAJO,OAKvBuG,gBAAiBvG,IALM,OAMvBwG,gBAAiBxG,IANM,OAOvByG,kBAAmBzG,IAPI,OAQvB0G,2BAA4B1G,IARL,OASvB8D,2BAA4B9D,IATL,OAUvB2G,cAAe3G,IAVQ,OAWvB4G,SAAU5G,IAXa,OAYvB6G,oBAAqB7G,IAZE,OAavB8G,iBAAkB9G,IAbK,OAcvB+G,eAAgB/G,IAdO,OAevBgH,QAAShH,IAfc,OAgBvBiH,OAAQjH,IAhBe,OAiBvBkH,aAAclH,IAjBS,OAkBvBmH,kBAAmBnH,IAlBI,OAmBvBoH,kBAAmBpH,IAnBI,OAoBvBqH,mBAAoBrH,IApBG,OAqBvBsH,oBAAqBtH,IArBE,OAsBvBuH,6BAA8BvH,IAtBP,OAuBvBwH,mBAAoBxH,IAvBG,OAwBvByH,+BAAgCzH,IAxBT,OAyBvB0H,yBAA0B1H,IAzBH,KA0BvB2H,uBAAwB3H,IA1BD,KA2BvB4H,kBAAmB5H,IA3BI,KA4BvB6H,eAAgB7H,IAAU8H,OAE5BhC,cAAe9F,IAxDQ,OAyDvBmE,iBAAkBnE,IAzDK,OA0DvB4D,mBAAoB5D,IA1DG,OA2DvB+F,gBAAiB/F,IA3DM,OA4DvBoE,aAAcpE,IA5DS,KA6DvBqE,eAAgBrE,IA7DO,KA8DvBsE,iBAAkBtE,IA9DK,KA+DvB0D,eAAgB1D,IA/DO,OAgEvBgG,cAAehG,IAhEQ,OAiEvBuE,SAAUvE,IAjEa,OAkEvBS,OAAQT,IAAU+H,Q","file":"static/js/29.98bfaf54.chunk.js","sourcesContent":["/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../utils/prop-types';\n\nconst Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  ...rest\n}) => (\n  <DSButton\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n  />\n);\n\nPicker.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n};\nexport default Picker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker from './DatePickerPicker/DatePickerPicker';\n\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n};\n\nexport default DatePickerDropdown;\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nDSInputGroup.propTypes = {\n  containerProps: PropTypes.shape({}),\n  innerRef: PropTypes.func,\n  className: PropTypes.string,\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element,\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element,\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element,\n};\n\nexport default DSInputGroup;\n","/**\n * Check if the value is null undefined ''\n *\n * @param value\n */\nexport const checkNotEmpty = value =>\n  value === '' || value === undefined || value === null;\n\n/**\n * @param value: number\n * @param comparator: number\n * @param value\n * @param comparator\n */\nexport const greaterThan = (value, comparator) => value > comparator;\n\n/**\n * Check if a valid date with format MM/DD/YYYY\n *\n * @param {*} value: string\n * @param value\n */\nexport const validDate = value => {\n  const dateValidationRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\n  if (!dateValidationRegex.test(value)) return false;\n  const [m, d, y] = value.split('/').map(n => Number(n));\n  return (\n    m === Number(new Date(y, m - 1, d).getMonth()) + 1 &&\n    d === Number(new Date(y, m - 1, d).getDate())\n  );\n};\n\nexport const equal = (a, b) => a === b;\n\nexport const notEqual = (a, b) => !equal(a, b);\n\nexport const isNull = a => checkNotEmpty(a);\n\nexport const isNotNull = a => !isNull(a);\n\nexport const isIn = (a, b) => b.indexOf(a) > -1;\n\nexport const isNotIn = (a, b) => !isIn(a, b);\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport moment from 'moment';\nimport DSInputMask, {\n  MASK_TYPES,\n  MASK_PIPES,\n} from '@elliemae/ds-basic/form/InputMask';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport { isNull } from '@elliemae/ds-utilities/operators';\nimport DSDatePickerController from './DatePickerController/DatePickerController';\nimport DatePickerDropdown from './DatePickerDropdown';\n\nexport default class DSdatePickerImpl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: this.getSafeValue(),\n      inputFocused: false,\n      maskFocus: false,\n      primaryInput: true,\n    };\n  }\n\n  state = {};\n\n  static getDerivedStateFromProps(nextProps, prevProps) {\n    if (nextProps.value !== prevProps.value) {\n      return {\n        selectedDate: nextProps.value ? moment(nextProps.value) : '',\n      };\n    }\n    if (nextProps.date !== prevProps.value) {\n      return {\n        selectedDate: nextProps.date ? moment(nextProps.date) : '',\n      };\n    }\n\n    return null;\n  }\n\n  onClickPicker = () => {\n    this.setState({ inputFocused: true });\n  };\n\n  getSafeValue = () => {\n    const { value, date, defaultValue } = this.props;\n    const { primaryInput, selectedDate, dataInput } = this.state;\n    if (value) {\n      return moment(value);\n    }\n    if (date) {\n      return moment(date);\n    }\n    if (defaultValue) {\n      return moment(defaultValue);\n    }\n    if (primaryInput && dataInput) {\n      return moment(dataInput.target.value);\n    }\n    if (selectedDate) {\n      return selectedDate;\n    }\n    return null;\n  };\n\n  getSafeInputValue = () => {\n    const { dataInput, primaryInput, maskFocus } = this.state;\n    const { value } = this.props;\n    const safeValue = this.getSafeValue();\n\n    if (isNull(value)) return '';\n    if (\n      safeValue &&\n      dataInput &&\n      !maskFocus &&\n      safeValue.format('MM/DD/YYYY') !== dataInput.target.value\n    ) {\n      return safeValue.format('MM/DD/YYYY');\n    }\n    if (primaryInput && dataInput) return dataInput.target.value;\n\n    if (!safeValue) return '';\n    return safeValue.format('MMDDYYYY');\n  };\n\n  isControlled = () => {\n    const { value, date } = this.props;\n    return Boolean(value) || Boolean(date);\n  };\n\n  handleDateChange = (date, event) => {\n    const { readOnly, onDateChange, keepOpenOnDateSelect } = this.props;\n    if (!readOnly) {\n      if (!this.isControlled()) {\n        this.setState({ selectedDate: date, primaryInput: false });\n      }\n      onDateChange(date);\n      this.setState({ primaryInput: false });\n      if (!keepOpenOnDateSelect || event.key === 'Enter')\n        this.setState({ inputFocused: false });\n    }\n  };\n\n  handleChange = dataInput => {\n    const { onDateChange } = this.props;\n    const momentvalue = moment(dataInput.target.value);\n    this.setState({ selectedDate: momentvalue, dataInput, primaryInput: true });\n    onDateChange(momentvalue);\n  };\n\n  handleFocus = ({ focused }) => {\n    this.setState({ inputFocused: focused });\n  };\n\n  handleCalendarClose = () => {\n    const { onClose } = this.props;\n\n    this.setState({ inputFocused: false });\n    this.handleOnBlur();\n    onClose();\n  };\n\n  handleClickEscape = () => {\n    const { onClose } = this.props;\n\n    this.setState({ inputFocused: false });\n    this.handleOnBlur();\n    onClose();\n  };\n\n  handleOnBlur = () => {\n    const { onBlur } = this.props;\n    const { selectedDate } = this.state;\n\n    this.setState({ maskFocus: false, dataInput: undefined });\n    onBlur(selectedDate);\n  };\n\n  handleInputFocus = dataInput => {\n    const { onFocus } = this.props;\n    this.setState({ maskFocus: true });\n    onFocus(dataInput);\n  };\n\n  render() {\n    const { inputFocused } = this.state;\n    const {\n      disabled,\n      numberOfMonths,\n      readOnly,\n      enableOutsideDays,\n      transitionDuration,\n      firstDayOfWeek,\n      keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel,\n      onPrevMonthClick,\n      onNextMonthClick,\n      onClose,\n      phrases,\n      placeholder,\n      displayFormatDay,\n      isDayBlocked,\n      isOutsideRange,\n      isDayHighlighted,\n      tabIndex,\n      zIndex,\n    } = this.props;\n    const safedate = this.getSafeValue();\n    const safeInputValue = this.getSafeInputValue();\n    return (\n      <DSInputGroup\n        rightAddon={\n          <DatePickerDropdown\n            disabled={disabled}\n            isOpen={inputFocused}\n            menu={\n              <div style={{ minHeight: '310px' }}>\n                <DSDatePickerController\n                  date={safedate}\n                  displayFormatDay={displayFormatDay}\n                  enableOutsideDays={enableOutsideDays}\n                  firstDayOfWeek={firstDayOfWeek}\n                  hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                  isDayBlocked={isDayBlocked}\n                  isDayHighlighted={isDayHighlighted}\n                  isOutsideRange={isOutsideRange}\n                  keepOpenOnDateSelect={keepOpenOnDateSelect}\n                  numberOfMonths={numberOfMonths}\n                  onClickEscape={this.handleClickEscape}\n                  onClose={onClose}\n                  onDateChange={this.handleDateChange(event)}\n                  onFocusChange={this.handleFocus}\n                  onNextMonthClick={onNextMonthClick}\n                  onOutsideClick={this.handleCalendarClose}\n                  onPrevMonthClick={onPrevMonthClick}\n                  phrases={phrases}\n                  transitionDuration={transitionDuration}\n                />\n              </div>\n            }\n            onClick={this.onClickPicker}\n            readOnly={readOnly}\n            zIndex={zIndex}\n          />\n        }\n      >\n        <DSInputMask\n          aria-label={placeholder || 'Date Picker Input Mask'}\n          disabled={disabled}\n          mask={MASK_TYPES.DATE}\n          onBlur={this.handleOnBlur}\n          onChange={this.handleChange}\n          onFocus={this.handleInputFocus}\n          pipe={MASK_PIPES.AUTO_CORRECT_DATE}\n          placeholder={placeholder}\n          tabIndex={tabIndex}\n          value={safeInputValue}\n        />\n      </DSInputGroup>\n    );\n  }\n}\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport 'react-dates/initialize';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  DatePickerNavigation,\n  DatePickerDay,\n  DatePickerPicker,\n  DatePickerDropdown,\n  DatePickerSingleDate,\n  DatePickerHeader,\n  DatePickerRange,\n  DatePickerRangeHeader,\n  SingleRangeDateSwitcher,\n} from './components';\nimport DSDatePickerImpl from './components/DSDatePickerImpl';\nimport DSDatePickerController from './components/DatePickerController/DatePickerController';\n\nconst DSDatePicker = ({\n  containerProps = {},\n  id = '',\n  appendToBody = true,\n  className = '',\n  date,\n  value,\n  placeholder = '',\n  disabled = false,\n  required = false,\n  readOnly = false,\n  hasError = false,\n  screenReaderInputMessage = 'Select date',\n  enableOutsideDays = true,\n  initialVisibleMonth = moment(),\n  firstDayOfWeek = 0,\n  keepOpenOnDateSelect = true,\n  hideKeyboardShortcutsPanel = true,\n  onChange = () => null,\n  onDateChange = undefined,\n  onPrevMonthClick = () => null,\n  onNextMonthClick = () => null,\n  onClose = () => null,\n  onFocus = () => null,\n  onBlur = () => null,\n  phrases = SingleDatePickerPhrases,\n  displayFormat = 'L',\n  displayFormatDay = 'D',\n  transitionDuration = 0,\n  verticalSpacing = 0,\n  isDayBlocked = () => false,\n  isOutsideRange = () => false,\n  isDayHighlighted = () => false,\n  numberOfMonths = 1,\n  openDirection = 'down',\n  zIndex = 'auto',\n}) => {\n  const { cssClassName } = convertPropToCssClassName('datepicker', className, {\n    hasError,\n    readOnly,\n    disabled,\n    id,\n  });\n  const safeDate = date || value;\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDatePickerImpl\n        appendToBody={appendToBody}\n        date={safeDate}\n        disabled={disabled}\n        displayFormat={displayFormat}\n        displayFormatDay={displayFormatDay}\n        enableOutsideDays={enableOutsideDays}\n        firstDayOfWeek={firstDayOfWeek}\n        hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n        initialVisibleMonth={() =>\n          initialVisibleMonth ? moment(initialVisibleMonth) : moment(safeDate)\n        }\n        isDayBlocked={isDayBlocked}\n        isDayHighlighted={isDayHighlighted}\n        isOutsideRange={\n          isOutsideRange === true || isOutsideRange === false\n            ? () => isOutsideRange\n            : isOutsideRange\n        }\n        keepOpenOnDateSelect={keepOpenOnDateSelect}\n        numberOfMonths={numberOfMonths}\n        onBlur={onBlur}\n        onClose={onClose}\n        onDateChange={(...args) => {\n          if (onDateChange) onDateChange(...args);\n          if (onChange) onChange(...args);\n        }}\n        onFocus={onFocus}\n        onNextMonthClick={onNextMonthClick}\n        onPrevMonthClick={onPrevMonthClick}\n        openDirection={openDirection}\n        phrases={phrases}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        required={required}\n        screenReaderInputMessage={screenReaderInputMessage}\n        transitionDuration={transitionDuration}\n        value={safeDate}\n        verticalSpacing={verticalSpacing}\n        zIndex={zIndex}\n      />\n    </div>\n  );\n};\n\nDSDatePicker.propTypes = {\n  containerProps: PropTypes.shape({}),\n  id: PropTypes.string,\n  appendToBody: PropTypes.bool,\n  className: PropTypes.string,\n  date: PropTypes.instanceOf(Date, moment),\n  value: PropTypes.instanceOf(Date, moment),\n  // eslint-disable-next-line max-lines\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  hasError: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  enableOutsideDays: PropTypes.bool,\n  initialVisibleMonth: PropTypes.instanceOf(Date, moment),\n  firstDayOfWeek: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  hideKeyboardShortcutsPanel: PropTypes.bool,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClose: PropTypes.func,\n  onFocus: PropTypes.func,\n  phrases: PropTypes.shape({\n    calendarLabel: PropTypes.string,\n    closeDatePicker: PropTypes.string,\n    clearDates: PropTypes.string,\n    focusStartDate: PropTypes.string,\n    jumpToPrevMonth: PropTypes.string,\n    jumpToNextMonth: PropTypes.string,\n    keyboardShortcuts: PropTypes.string,\n    showKeyboardShortcutsPanel: PropTypes.string,\n    hideKeyboardShortcutsPanel: PropTypes.string,\n    openThisPanel: PropTypes.string,\n    enterKey: PropTypes.string,\n    leftArrowRightArrow: PropTypes.string,\n    upArrowDownArrow: PropTypes.string,\n    pageUpPageDown: PropTypes.string,\n    homeEnd: PropTypes.string,\n    escape: PropTypes.string,\n    questionMark: PropTypes.string,\n    selectFocusedDate: PropTypes.string,\n    moveFocusByOneDay: PropTypes.string,\n    moveFocusByOneWeek: PropTypes.string,\n    moveFocusByOneMonth: PropTypes.string,\n    moveFocustoStartAndEndOfWeek: PropTypes.string,\n    returnFocusToInput: PropTypes.string,\n    keyboardNavigationInstructions: PropTypes.string,\n    chooseAvailableStartDate: PropTypes.func,\n    chooseAvailableEndDate: PropTypes.func,\n    dateIsUnavailable: PropTypes.func,\n    dateIsSelected: PropTypes.func,\n  }),\n  displayFormat: PropTypes.string,\n  displayFormatDay: PropTypes.string,\n  transitionDuration: PropTypes.number,\n  verticalSpacing: PropTypes.number,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  numberOfMonths: PropTypes.number,\n  openDirection: PropTypes.string,\n  tabIndex: PropTypes.string,\n  zIndex: PropTypes.string,\n};\n\nexport {\n  DatePickerNavigation,\n  DatePickerDay,\n  DatePickerPicker,\n  DSDatePickerController,\n  DatePickerDropdown,\n  DatePickerSingleDate,\n  DatePickerHeader,\n  DatePickerRange,\n  DatePickerRangeHeader,\n  SingleRangeDateSwitcher,\n};\n\nexport default DSDatePicker;\n"],"sourceRoot":""}