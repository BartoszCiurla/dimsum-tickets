{"version":3,"sources":["../../../../src/hooks/usePrevious.js","../../../src/timeUtils.js","../../../../../../src/form/DateInput/components/utils.js","../../../src/ChevronSmallDown.js","../../../../../../src/form/DateInput/components/DateInputImpl.js","../../../../../../src/form/DateInput/components/DateInputs.js","../../../src/CloseCircle.js","../../../../../src/form/Input/InputAddonWrapper.js","../../../../../src/components/DatePickerPicker/DatePickerPicker.js","../../../src/DatePicker.js","../../../../src/components/DatePickerDropdown.js","../../../../../src/form/Input/InputImpl.js","../../../../../src/form/Input/showEllipsis.js","../../../../../src/form/Input/DSInput.js","../../../../src/Tooltip/TooltipType.js","../../../../src/Tooltip/DSTooltip.js","../../../src/constants.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../../../src/lang/english.js","../../../src/utils.js","../../../../src/utils/constants.js","../../../../src/TimePicker/utils.js","../../../../../src/form/TimeInput/utils.js","../../../../../src/form/TimeInput/TimeInputs.js","../../../../../src/form/TimeInput/TimeInputImpl.js","../../../src/ChevronSmallUp.js","../../../../src/TimePicker/moveElementOnScroll.js","../../../../src/TimePicker/PickerPanel.js","../../../../src/TimePicker/TimePickerMenu.js","../../../../src/components/DateTimePickerImpl.js","../../../src/DSDateTimePicker.js"],"names":["value","ref","useRef","useEffect","getVisibleTimeByFormat","format","showHours","showMinutes","showSeconds","use12Hours","addLeadingZeros","count","number","padStart","String","currentYear","Date","setNativeValue","element","Object","valueSetter","prototype","prototypeValueSetter","Event","bubbles","formatTimeNumber","shouldAddLeadingZeros","leadingZeros","formatDay","formatYear","formatMonth","parseTimeNumberFromText","stringValue","parsedInt","parseInt","isNaN","triggerOnBlur","blurEvent","onBlur","currentEl","relatedTarget","nextElement","nextElementSibling","focusNextInput","focusPreviousInput","previousElement","getValidTimeNumber","min","max","valueString","onError","getDateValuesFromTime","time","month","day","year","onInputFocus","e","getNextTimeValue","step","incrementing","parsedValue","result","target","focusNextInputIfNeeded","key","shouldFocusNextInput","commonInputProps","digits","onKeyDown","placeholder","props","pattern","type","onFocus","handleCompletedDate","newDate","INTERNAL_V2_NO_MUTATION","moment","date","showYear","show","showMonth","showDay","isTimeCompletelySet","range","neededValues","yearMinRange","yearMaxRange","isValidYear","createIcon","paths","height","width","DateInputContainer","aggregatedClasses","DateInputImpl","innerRef","onChange","className","disabled","inputContainerRef","visibleInputs","useMemo","onClick","onCustomKeyDown","PropTypes","current","any","blockName","InputTimesGroup","MonthInput","DayInput","YearInput","Divider","DateDivider","content","DateInputs","useState","currentKey","setCurrentKey","setMonth","setDay","setYear","prevTime","usePrevious","prevFormat","dateValues","isCompletedDate","triggerChange","handleYearChange","yearValue","yearRange","nextYear","handleMonthChange","monthValue","monthRange","nextMonth","handleDayChange","dayValue","dayRange","nextDay","event","shouldIncrementDecrement","name","change","v","incrementedValue","decrementedValue","renderMonthInput","autocomplete","data-testid","renderDayInput","renderYearInput","input","acc","index","InputWrapper","InputAddon","left","right","variant","InputAddonWrapper","components","this","renderAddonComponent","Array","comp","containerProps","classProps","component","rightComponents","leftComponents","children","InputComponent","React","hasError","readOnly","rightAddon","getRightAddon","leftAddon","getLeftAddon","Component","Picker","icon","size","DSIconSizes","buttonActionType","tabIndex","rest","aria-label","buttonType","color","DSIconColors","PickerPropsTypes","classNameElement","convertPropToCssClassName","noop","DatePickerDropdown","isOpen","menu","zIndex","pickerProps","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","Input","clearable","WrapperForTooltipInput","InputCustomWrapper","ClearableButton","getValidComponents","InputImpl","active","showTooltip","client","window","onClear","focus","handleClear","role","id","isShowElipsisActive","autoFocus","maxLength","minLength","leftComponent","rightComponent","disableTooltip","onKeyUp","onPaste","required","customInputType","onMouseLeave","onMouseOut","style","filter","inputProps","onMouseEnter","showEllipsis","title","Error","fluidWidth","otherProps","TooltipType","TooltipContainer","TooltipText","DSTooltip","placement","PopperPositions","TOP","delayClose","delayOpen","interactionType","PopperInteractions","HOVER","undefined","onOpen","springAnimationComponent","tooltipType","otherTooltipProps","tooltipBlockName","Content","getComponentFromProps","bool","Container","AddonWrapper","inputComponent","childType","DSInputGroup","InputComponents","updateDateAndTime","splittedDate","AM","HOUR_RANGE_12","HOUR_RANGE_24","GENERAL_TIME_RANGE","PLACEHOLDER_TIME","validateIndex","options","isAM","placeholderFormat","position","_placeholderHour","formatMinutes","formatSeconds","formatHour","formatMeridiem","getTimeValuesFromTime","hours","minutes","seconds","meridiem","TimeInput","TimeDivider","ariaLabel","setMeridiem","setHours","setMinutes","hasInputValue","setHasInputValue","setSeconds","lastTypedNumber","setLastTypedNumber","timeSelected","setTimeSelected","inputRefs","timeValues","safeString","cleanString","selectedTime","nextHours","handleSecondsChange","secondsHandled","nextSeconds","handleMinutesChange","minutesHandled","nextMinutes","handleHoursChange","hour","hoursRange","nextHour","handleMeridiemKeyDown","handleMeridiemBlur","renderHoursInput","hourFormatRange","InputTimeContainer","getVisibleTimeInputs","memoizeOne","formatValue","inputsContainer","node","MoveElementOnScroll","container","offsetHeight","speed","smooth","onUpdate","onEndScroll","moving","pos","lastPos","requestFrame","func","delta","Math","update","unsubscribe","updatePosition","newPos","scrolling","Wrapper","PickerItemListContainer","PickerItemList","PickerHeader","PickerItemContainer","selected","PickerSelectedOptionSelected","SelectedCircle","ArrowButtonContainer","getOptionIndex","selectedOption","valueProperty","option","arrowProps","fluidHeight","PickerPanel","selectedOptionIndex","listYPosition","header","activeIndex","prevProps","pickerListContainerEl","pickerListContainerRef","pickerListEl","pickerListRef","validIndex","optionValue","getOptionValue","numberItemsOnScreen","optionHeight","pickerItemRef","listHeight","state","document","firstColumn","restColumns","lastColumn","prev","focusedElement","findIndex","supposedPos","nextPos","hasHeader","computeContainerTranslation","selectedOptionRef","transform","label","nextProps","labelProperty","arrowStep","TimePickerContainer","TimePickerHeader","TimePickerPanelContainer","generateOption","TimePickerMenu","onTimeChange","withLeadingZeros","rangeMinutes","rangeSeconds","selectedHour","hoursOptions","rangeHours","hasHeaderDisplay","DateTimePickerWrapper","TimePicker","TimePickerWrapper","DateInput","datePickerProps","numberOfMonths","enableOutsideDays","transitionDuration","firstDayOfWeek","keepOpenOnDateSelect","hideKeyboardShortcutsPanel","onPrevMonthClick","onNextMonthClick","onClose","onDateChange","phrases","SingleDatePickerPhrases","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","timePickerProps","onChangeTimePicker","selectedDate","setSelectedDate","setIsOpen","dateTimePickerWrapperRef","visiblePanels","onClickEscape","dateSelected","onFocusChange","onOutsideClick","handleOutsideClick","pickerTime","handleChange","restInputProps","inputValue","placeholderDefault","english","classNameDefault","idDefault","DSDateTimePicker","cssClassName","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected"],"mappings":"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","file":"static/js/7.ba4a31c0.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport default usePrevious;\n","import { padStart } from './utils';\n\nexport const getVisibleTimeByFormat = format => ({\n  showHours:\n    format.indexOf('H') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('k') > -1,\n  showMinutes: format.indexOf('m') > -1,\n  showSeconds: format.indexOf('s') > -1,\n  use12Hours:\n    format.indexOf('A') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('a') > -1,\n});\n\nexport const addLeadingZeros = count => number =>\n  padStart(String(number), count, '0');\n","/* eslint-disable max-params */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport moment from 'moment';\n\nconst currentYear = new Date().getFullYear();\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === 'ArrowDown' || key === 'ArrowUp';\n\n// TODO remove and keep `true` behavior ( PUI-4141 )\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros, leadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros\n    ? addLeadingZeros(leadingZeros)(value)\n    : String(value);\n};\n\nexport const formatDay = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('DD') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 2);\n};\nexport const formatYear = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('YYYY') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 4);\n};\nexport const formatMonth = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('MM') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 2);\n};\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\n// trigger onBlur for entire DateInput control if focus is not in day, month, year\nexport const triggerOnBlur = (blurEvent, onBlur = () => {}) => {\n  const { target: currentEl = {}, relatedTarget } = blurEvent || {};\n  const nextElement = currentEl.nextElementSibling;\n  const { nextElementSibling } = nextElement || {};\n  // relatedTarget points to the element that is currently having focus\n  if (!nextElementSibling || nextElementSibling !== relatedTarget) {\n    onBlur(blurEvent);\n  }\n};\n\nexport const focusNextInput = (currentEl) => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = (\n  { min, max },\n  number,\n  valueString = '',\n  onError,\n) => {\n  if (valueString === '0') return number;\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    onError();\n    return max;\n  }\n  if (number < min) {\n    onError();\n    return min;\n  }\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  if (stringValue.length > 1) return true;\n  return number * 10 > max;\n};\n\nexport const getDateValuesFromTime = (time, format) => {\n  if (!time) return {};\n  const month = time.format('MM');\n  const day = time.format('DD');\n  const year = time.format('YYYY');\n  return {\n    month: formatMonth(format, month),\n    day: formatDay(format, day),\n    year: formatYear(format, year),\n  };\n};\n\nexport const resetTimeValues = () => ({\n  month: '',\n  day: '',\n  year: '',\n});\n\nexport const onInputFocus = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  e.target.select();\n};\n\nexport const getNextTimeValue = (\n  value,\n  target,\n  yearMinRange,\n  yearMaxRange,\n  step = 1,\n  incrementing = true,\n) => {\n  const parsedValue = parseTimeNumberFromText(value);\n  let result = incrementing ? parsedValue + step : parsedValue - step;\n  if (target === 'year') {\n    if (result < yearMinRange) result = currentYear;\n    if (result > yearMaxRange) result = currentYear;\n  }\n  return result;\n};\n\nexport const focusNextInputIfNeeded = (\n  currentEl,\n  max,\n  number,\n  stringValue,\n  currentKey,\n) => {\n  if (\n    shouldFocusNextInput(max, number, stringValue) &&\n    !isArrowIncrementDecrement(currentKey)\n  ) {\n    focusNextInput(currentEl);\n  }\n};\n\nexport const commonInputProps = (digits = 2, onKeyDown, placeholder) => {\n  const props = {\n    pattern: '[0-9]*',\n    placeholder,\n    type: 'text',\n    onKeyDown,\n    onFocus: onInputFocus,\n  };\n  if (digits === 4) props.placeholder = 'YYYY';\n  return props;\n};\n\nexport const handleCompletedDate = (\n  time,\n  date,\n  show,\n  INTERNAL_V2_NO_MUTATION,\n) => {\n  // clone time to avoid mutation when INTERNAL_V2_NO_MUTATION is true\n  const newDate = INTERNAL_V2_NO_MUTATION\n    ? (time && moment(time)) || moment()\n    : time || moment();\n\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n\n  if (time && !year && !month && !day) return '';\n\n  newDate.value = `${year}-${month}-${day}`;\n\n  if (showMonth && month) newDate.month(parseInt(month - 1, 10));\n  if (showDay && day) newDate.date(parseInt(day, 10));\n  if (showYear && year) newDate.year(parseInt(year, 10));\n\n  return newDate;\n};\n\nexport const isTimeCompletelySet = (date, show, range) => {\n  let neededValues = [];\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n  const { yearMinRange, yearMaxRange } = range;\n\n  if (showMonth) neededValues = [...neededValues, month || null];\n  if (showDay) neededValues = [...neededValues, day || null];\n  if (showYear) neededValues = [...neededValues, year || null];\n\n  const isValidYear = year < yearMaxRange && year > yearMinRange;\n\n  return !neededValues.some((value) => !value) && isValidYear;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.5 13a.503.503 0 0 1-.313-.109l-5-4a.5013.5013 0 0 1-.078-.703c.173-.214.488-.25.703-.078L9.5 11.86l4.688-3.75c.218-.172.531-.136.703.078.172.216.138.53-.078.703l-5 4A.501.501 0 0 1 9.5 13z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DateInputs from './DateInputs';\n\nconst blockName = 'input-time';\n\nconst DateInputContainer = aggregatedClasses('div')(blockName);\n\nconst getVisibleTimeByFormat = (format) => ({\n  showMonth: format.indexOf('MM') > -1 || format.indexOf('M') > -1,\n  showDay: format.indexOf('DD') > -1 || format.indexOf('D') > -1,\n  showYear: format.indexOf('YYYY') > -1,\n});\n\nconst DateInputImpl = ({\n  format,\n  innerRef,\n  onBlur,\n  onChange,\n  onKeyDown,\n  onError,\n  className,\n  value,\n  disabled,\n  yearMaxRange,\n  yearMinRange,\n  onFocus,\n  // eslint-disable-next-line react/prop-types\n  INTERNAL_V2_NO_MUTATION,\n}) => {\n  const inputContainerRef = useRef();\n\n  const handleFocus = (e) => {\n    onFocus();\n    if (!e.target.type) {\n      inputContainerRef.current.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeByFormat(format));\n\n  return (\n    <DateInputContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <DateInputs\n        disabled={disabled}\n        format={format}\n        INTERNAL_V2_NO_MUTATION={INTERNAL_V2_NO_MUTATION}\n        innerRef={inputContainerRef}\n        onBlur={onBlur}\n        onChange={onChange}\n        onCustomKeyDown={onKeyDown}\n        onError={onError}\n        time={value}\n        yearMaxRange={yearMaxRange}\n        yearMinRange={yearMinRange}\n        {...visibleInputs}\n      />\n    </DateInputContainer>\n  );\n};\n\nDateInputImpl.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.bool,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  className: PropTypes.string,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  onFocus: PropTypes.func,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  value: PropTypes.instanceOf(Moment),\n};\n\nexport default DateInputImpl;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable indent */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport {\n  formatMonth,\n  formatDay,\n  formatYear,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getDateValuesFromTime,\n  getNextTimeValue,\n  focusNextInputIfNeeded,\n  commonInputProps,\n  handleCompletedDate,\n  triggerOnBlur,\n  isTimeCompletelySet,\n} from './utils';\n\nconst blockName = 'input-date-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst MonthInput = aggregatedClasses('input')(blockName, 'input input-month');\nconst DayInput = aggregatedClasses('input')(blockName, 'input input-day');\nconst YearInput = aggregatedClasses('input')(blockName, 'input input-year');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst DateDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst DateInputs = ({\n  innerRef,\n  onBlur,\n  onChange,\n  onCustomKeyDown,\n  onError,\n  format = '',\n  showMonth = true,\n  showDay = true,\n  showYear = true,\n  step = 1,\n  yearMaxRange,\n  disabled,\n  yearMinRange,\n  time,\n  // TODO remove and keep `true` behavior ( PUI-4141 )\n  INTERNAL_V2_NO_MUTATION, // eslint-disable-line react/prop-types\n}) => {\n  const [currentKey, setCurrentKey] = useState('ArrowUp');\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n  const [year, setYear] = useState('');\n  const prevTime = usePrevious(time);\n  const prevFormat = usePrevious(format);\n\n  let digits = 2;\n  let placeholder = '';\n\n  useEffect(() => {\n    if (time) {\n      const dateValues = getDateValuesFromTime(time, format);\n      setMonth(dateValues.month);\n      setDay(dateValues.day);\n      setYear(dateValues.year);\n    }\n  }, [time]);\n\n  useEffect(() => {\n    if (!time && prevTime) {\n      setMonth('');\n      setDay('');\n      setYear('');\n      onChange('');\n    }\n    if (\n      time &&\n      prevTime &&\n      time.format(format) !== prevTime.format(prevFormat)\n    ) {\n      const dateValues = getDateValuesFromTime(time, format);\n\n      setMonth(dateValues.month);\n      setDay(dateValues.day);\n      setYear(dateValues.year);\n    }\n  }, [time, prevTime, format]);\n\n  const isCompletedDate = () =>\n    isTimeCompletelySet(\n      { year, month, day },\n      { showYear, showMonth, showDay },\n      { yearMinRange, yearMaxRange },\n    );\n\n  useEffect(() => {\n    if (INTERNAL_V2_NO_MUTATION) {\n      const dateValues = getDateValuesFromTime(time, format);\n\n      if (dateValues.day !== day && isCompletedDate()) {\n        onChange(\n          handleCompletedDate(\n            time,\n            { year, month, day },\n            { showYear, showMonth, showDay },\n            INTERNAL_V2_NO_MUTATION,\n          ),\n        );\n      } else if (dateValues.month !== month && isCompletedDate()) {\n        onChange(\n          handleCompletedDate(\n            time,\n            { year, month, day },\n            { showYear, showMonth, showDay },\n            INTERNAL_V2_NO_MUTATION,\n          ),\n        );\n      } else if (dateValues.year !== year && isCompletedDate()) {\n        onChange(\n          handleCompletedDate(\n            time,\n            { year, month, day },\n            { showYear, showMonth, showDay },\n            INTERNAL_V2_NO_MUTATION,\n          ),\n        );\n      }\n    }\n  }, [day, month, year]);\n\n  const triggerChange = () =>\n    handleCompletedDate(\n      time,\n      { year, month, day },\n      { showYear, showMonth, showDay },\n      INTERNAL_V2_NO_MUTATION,\n    );\n\n  const handleYearChange = (e) => {\n    const { value } = e.target;\n    const yearValue = parseTimeNumberFromText(value);\n    const yearRange = { min: 1, max: 9999 };\n    const nextYear = getValidTimeNumber(yearRange, yearValue, value, onError);\n\n    setYear(formatYear(format, nextYear));\n    if (isCompletedDate() && !INTERNAL_V2_NO_MUTATION) {\n      onChange(triggerChange());\n    }\n    focusNextInputIfNeeded(\n      e.target,\n      yearRange.max,\n      nextYear,\n      value,\n      currentKey,\n    );\n  };\n  const handleMonthChange = (e) => {\n    const { value } = e.target;\n    const monthValue = parseTimeNumberFromText(value);\n    const monthRange = { min: 1, max: 12 };\n    const nextMonth = getValidTimeNumber(\n      monthRange,\n      monthValue,\n      value,\n      onError,\n    );\n\n    setMonth(formatMonth(format, nextMonth));\n    if (isCompletedDate() && !INTERNAL_V2_NO_MUTATION) {\n      onChange(triggerChange());\n    }\n    focusNextInputIfNeeded(\n      e.target,\n      monthRange.max,\n      nextMonth,\n      value,\n      currentKey,\n    );\n  };\n\n  const handleDayChange = (e) => {\n    const { value } = e.target;\n    const dayValue = parseTimeNumberFromText(value);\n    const dayRange = { min: 1, max: 31 };\n    const nextDay = getValidTimeNumber(dayRange, dayValue, value, onError);\n\n    setDay(formatDay(format, nextDay));\n    if (isCompletedDate() && !INTERNAL_V2_NO_MUTATION) {\n      onChange(triggerChange());\n    }\n    if (value !== day)\n      focusNextInputIfNeeded(\n        e.target,\n        dayRange.max,\n        nextDay,\n        value,\n        currentKey,\n      );\n  };\n\n  // eslint-disable-next-line complexity\n  const onKeyDown = (event, shouldIncrementDecrement = true) => {\n    const { value, name } = event.target;\n    const change = {\n      day: (v) => handleDayChange({ target: { value: v } }),\n      month: (v) => handleMonthChange({ target: { value: v } }),\n      year: (v) => handleYearChange({ target: { value: v } }),\n    };\n    switch (event.key) {\n      case 'ArrowLeft': {\n        event.preventDefault();\n        focusPreviousInput(event.target);\n        break;\n      }\n      case 'ArrowUp': {\n        if (shouldIncrementDecrement) {\n          event.preventDefault();\n          setCurrentKey(event.key);\n          const incrementedValue = getNextTimeValue(\n            value,\n            name,\n            yearMinRange,\n            yearMaxRange,\n            step,\n            true,\n          );\n          if (INTERNAL_V2_NO_MUTATION) {\n            change[name](incrementedValue);\n          } else {\n            setNativeValue(event.target, incrementedValue);\n          }\n        }\n        break;\n      }\n      case 'ArrowDown': {\n        if (shouldIncrementDecrement) {\n          event.preventDefault();\n          setCurrentKey(event.key);\n          const decrementedValue = getNextTimeValue(\n            value,\n            name,\n            yearMinRange,\n            yearMaxRange,\n            step,\n            false,\n          );\n          if (INTERNAL_V2_NO_MUTATION) {\n            change[name](decrementedValue);\n          } else {\n            setNativeValue(event.target, decrementedValue);\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        event.preventDefault();\n        focusNextInput(event.target);\n        break;\n      }\n      case 'Backspace': {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (INTERNAL_V2_NO_MUTATION) {\n            change[name]('');\n          } else {\n            setNativeValue(event.target, '');\n          }\n        }\n        break;\n      }\n      case 'Enter': {\n        if (onCustomKeyDown && isCompletedDate())\n          onCustomKeyDown(event, triggerChange());\n        setCurrentKey(null);\n        break;\n      }\n      default:\n        if (onCustomKeyDown) onCustomKeyDown(event);\n        setCurrentKey(null);\n    }\n  };\n\n  const renderMonthInput = () => {\n    if (!showMonth) return null;\n    placeholder = 'MM';\n    const onMonthInputBlur = (e) => {\n      handleMonthChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <MonthInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"month-input\"\n        data-testid=\"month\"\n        disabled={disabled}\n        name=\"month\"\n        onBlur={onMonthInputBlur}\n        onChange={handleMonthChange}\n        value={month}\n      />\n    );\n  };\n  const renderDayInput = () => {\n    if (!showDay) return null;\n    placeholder = 'DD';\n    const onDayInputBlur = (e) => {\n      handleDayChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DayInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"day-input\"\n        data-testid=\"day\"\n        disabled={disabled}\n        name=\"day\"\n        onBlur={onDayInputBlur}\n        onChange={handleDayChange}\n        value={day}\n      />\n    );\n  };\n  const renderYearInput = () => {\n    if (!showYear) return null;\n    placeholder = 'YY';\n    digits = 4;\n    const onYearInputBlur = (e) => {\n      handleYearChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <YearInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"seconds-input\"\n        data-testid=\"year\"\n        disabled={disabled}\n        name=\"year\"\n        onBlur={onYearInputBlur}\n        onChange={handleYearChange}\n        value={year}\n      />\n    );\n  };\n\n  const renderDateInputs = () => {\n    const inputs = [renderMonthInput(), renderDayInput(), renderYearInput()];\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <DateDivider\n                  key={index}\n                  content=\" / \"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderDateInputs()}</InputTimesGroup>\n  );\n};\n\nDateInputs.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.bool,\n  onChange: PropTypes.func,\n  onCustomKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  time: PropTypes.instanceOf(Moment),\n};\n\nexport default DateInputs;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15 10.5c0 3.038-2.462 5.5-5.5 5.5S4 13.538 4 10.5 6.462 5 9.5 5 15 7.462 15 10.5zm-2.672-2.121l-.707-.707L9.5 9.793 7.379 7.672l-.707.707L8.793 10.5l-2.121 2.121.707.707L9.5 11.207l2.121 2.121.707-.707-2.121-2.121 2.121-2.121z',\n  ],\n  height: 20,\n  width: 20,\n});\n","/* eslint-disable react/display-name */\nimport React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-wrapper';\n\nconst InputWrapper = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(\n  blockName,\n  'addon',\n  ({ left, right, variant }) => ({\n    left,\n    right,\n    [variant]: variant,\n  }),\n);\n\nexport default class InputAddonWrapper extends Component {\n  static defaultProps = {\n    rightComponents: [],\n    leftComponents: [],\n    containerProps: {},\n  };\n\n  getLeftAddon(components) {\n    return this.renderAddonComponent(true, components);\n  }\n\n  getRightAddon(components) {\n    return this.renderAddonComponent(false, components);\n  }\n\n  renderAddonComponent(left = true, components) {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      if (!components.filter(comp => comp).length) return null;\n    }\n    const { containerProps } = this.props;\n    const classProps = left ? { left: true } : { right: true };\n\n    return (\n      <InputAddon classProps={classProps} {...containerProps}>\n        {components.map(\n          (component, index) =>\n            component &&\n            React.cloneElement(component, { ...component.props, key: index }),\n        )}\n      </InputAddon>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      innerRef,\n      rightComponents,\n      leftComponents,\n      children,\n      variant,\n      containerProps,\n    } = this.props;\n\n    const InputComponent = React.Children.only(children);\n\n    const { hasError, readOnly, disabled } = InputComponent.props;\n\n    const rightAddon = this.getRightAddon([...rightComponents]);\n    const leftAddon = this.getLeftAddon([...leftComponents]);\n\n    return (\n      <InputWrapper\n        className={className}\n        classProps={{\n          hasError,\n          readOnly,\n          disabled,\n          variant,\n        }}\n        innerRef={innerRef}\n        {...containerProps}\n      >\n        {leftAddon}\n        {InputComponent}\n        {rightAddon}\n      </InputWrapper>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../utils/prop-types';\n\nexport const Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  tabIndex = 0,\n  ...rest\n}) => (\n  <DSButton\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n    tabIndex={tabIndex}\n  />\n);\n\nexport const PickerPropsTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.number,\n};\n\nPicker.propTypes = PickerPropsTypes;\nexport default Picker;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker, {\n  PickerPropsTypes,\n} from './DatePickerPicker/DatePickerPicker';\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n  pickerProps,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            {...pickerProps}\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n  pickerProps: PickerPropsTypes,\n};\n\nexport default DatePickerDropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport CloseCircle from '@elliemae/ds-icons/CloseCircle';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport DSTooltip from '@elliemae/ds-basic/Tooltip';\nimport InputAddonWrapper from './InputAddonWrapper';\nimport { showEllipsis } from './showEllipsis';\n\nconst blockName = 'input';\nconst Input = aggregatedClasses('input')(\n  blockName,\n  null,\n  ({ clearable, value }) => ({\n    clearable,\n    value,\n  }),\n);\nconst WrapperForTooltipInput = aggregatedClasses('div')(\n  blockName,\n  'tooltip-ref',\n);\nconst InputCustomWrapper = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ clearable, value }) => ({\n    clearable,\n    value,\n  }),\n);\nconst ClearableButton = aggregatedClasses(DSButton)(blockName, 'clearable');\n\nconst getValidComponents = component => component;\n\nconst noop = () => null;\nclass InputImpl extends Component {\n  static defaultProps = {\n    onBlur: noop,\n    onFocus: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.refTooltip = React.createRef();\n  }\n\n  state = {\n    width: -1,\n    active: false,\n    showTooltip: false,\n  };\n\n  componentDidMount() {\n    this.setWidth();\n    window.addEventListener('resize', this.setWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWidth);\n  }\n\n  handleBlur = e => {\n    const { onBlur } = this.props;\n    onBlur(e);\n    this.setState({\n      active: false,\n    });\n  };\n\n  handleFocus = e => {\n    const { onFocus } = this.props;\n    onFocus(e);\n    this.setState({\n      active: true,\n    });\n  };\n\n  handleMouseEnter = () => {\n    this.setState({\n      showTooltip: true,\n    });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({\n      showTooltip: false,\n    });\n  };\n\n  setWidth = () => {\n    const client = this.refTooltip.current.getBoundingClientRect();\n    this.setState({\n      width: client.width,\n    });\n  };\n\n  handleClear() {\n    const { onClear, onChange, clearable } = this.props;\n    if (clearable && onClear) {\n      onClear();\n    } else {\n      onChange({ target: { value: '' } });\n    }\n\n    if ((this.ref || {}).current) this.ref.current.focus();\n  }\n\n  renderClearableComponent() {\n    const { clearable, value, disabled } = this.props;\n    if (disabled) return null;\n    return clearable && value ? (\n      <ClearableButton\n        buttonType=\"text\"\n        data-testid=\"ds-input_clearable-btn\"\n        disabled={disabled}\n        icon={<CloseCircle />}\n        onClick={this.handleClear}\n      />\n    ) : null;\n  }\n\n  render() {\n    const {\n      role,\n      id,\n      isShowElipsisActive,\n      autoFocus,\n      className,\n      name,\n      innerRef,\n      maxLength,\n      minLength,\n      placeholder,\n      leftComponent,\n      rightComponent,\n      disableTooltip,\n      readOnly,\n      disabled,\n      value,\n      onClick,\n      onChange,\n      onKeyDown,\n      onKeyUp,\n      onFocus,\n      onBlur,\n      onPaste,\n      required,\n      type,\n      customInputType,\n      min,\n      max,\n      clearable,\n      onMouseLeave,\n      onMouseOut,\n      style,\n      containerProps,\n      tabIndex,\n      ...rest\n    } = this.props;\n    const { width, active, showTooltip } = this.state;\n    const rightComponents = [\n      this.renderClearableComponent(),\n      rightComponent,\n    ].filter(getValidComponents);\n    const leftComponents = [leftComponent].filter(getValidComponents);\n\n    const inputProps = {\n      'aria-label': rest['aria-label'],\n      'aria-placeholder': placeholder,\n      'aria-required': required,\n      'aria-multiline': false,\n      'aria-autocomplete': 'none',\n      'data-testid': rest['data-testid'],\n      role,\n      id,\n      ref: this.ref,\n      className,\n      autoFocus,\n      disabled: disabled || readOnly,\n      innerRef,\n      maxLength,\n      minLength,\n      name,\n      onBlur,\n      onChange,\n      onClick,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      onPaste,\n      onMouseLeave,\n      disableTooltip,\n      onMouseOut,\n      placeholder,\n      required,\n      type,\n      value,\n      min,\n      max,\n      style,\n      tabIndex,\n      ...containerProps,\n    };\n\n    let InputComponent = (\n      <WrapperForTooltipInput ref={this.refTooltip} style={{ width: '100%' }}>\n        {!customInputType ? (\n          <Input\n            {...inputProps}\n            autocomplete=\"off\"\n            clearable={clearable}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            value={value}\n          />\n        ) : (\n          <InputCustomWrapper\n            {...containerProps}\n            clearable={clearable}\n            value={value}\n          >\n            {customInputType({\n              ...inputProps,\n            })}\n          </InputCustomWrapper>\n        )}\n      </WrapperForTooltipInput>\n    );\n    if (\n      showEllipsis(width, value) &&\n      !active &&\n      showTooltip &&\n      width &&\n      isShowElipsisActive\n    ) {\n      InputComponent = (\n        <DSTooltip\n          isOpen={disableTooltip}\n          title={String(value)}\n          zIndex={11}\n          triggerComponent={\n            <WrapperForTooltipInput style={{ width: '100%' }}>\n              {InputComponent}\n            </WrapperForTooltipInput>\n          }\n        />\n      );\n    }\n\n    const renderInput =\n      rightComponents.length || leftComponents.length || clearable ? (\n        <InputAddonWrapper\n          className={className}\n          leftComponents={leftComponents}\n          rightComponents={rightComponents}\n          {...containerProps}\n        >\n          {InputComponent}\n        </InputAddonWrapper>\n      ) : (\n        InputComponent\n      );\n\n    return renderInput;\n  }\n}\n\nInputImpl.propTypes = {\n  className: PropTypes.string,\n  customInputType: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isShowElipsisActive: PropTypes.bool,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onPaste: PropTypes.func,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  role: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Should be of type string if using ellipsis tooltip [isShowElipsisActive] prop\n   *\n   * @param props\n   * @param propName\n   * @param componentName\n   */\n  value(props, propName, componentName) {\n    // eslint-disable-line consistent-return\n    if (!!props.isShowElipsisActive && typeof props[propName] !== 'string') {\n      return new Error(\n        `Invalid prop \\`${propName}\\` of type \\`${typeof props[\n          propName\n        ]}\\` supplied to` +\n          ` \\`${componentName}\\`. Prop \\`value\\` should be of type \\`string\\` if prop \\`isShowElipsisActive\\` is set to \\`true\\`.` +\n          ' Either set `isShowElipsisActive` to `false`, or properly format your `value` prop to `string`.',\n      );\n    }\n  },\n};\n\nexport default InputImpl;\n","export function showEllipsis(width, value) {\n  return String(value).length * 8 > width;\n}\n","import React from 'react';\nimport InputImpl from './InputImpl';\nimport InputAddonWrapper from './InputAddonWrapper';\n\nconst DSInput = ({\n  containerProps = {},\n  id,\n  autoFocus = false,\n  disabled = false,\n  className = '',\n  clearable = false,\n  name = '',\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  disableTooltip = true,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  customInputType = null,\n  variant,\n  isShowElipsisActive = true,\n  ...otherProps\n}) => (\n  <InputImpl\n    {...otherProps}\n    aria-label={otherProps['aria-label']}\n    autoFocus={autoFocus}\n    className={className}\n    clearable={clearable}\n    containerProps={containerProps}\n    customInputType={customInputType}\n    data-testid={otherProps['data-testid'] || 'ds-input_main-component'}\n    disabled={disabled}\n    disableTooltip={disableTooltip}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    id={id}\n    innerRef={innerRef}\n    isShowElipsisActive={isShowElipsisActive}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    name={name}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nexport { InputAddonWrapper };\n\nexport default DSInput;\n","export const TooltipType = {\n  TOOLTIP: 'tooltip',\n  TOOLBAR: 'toolbar',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  aggregatedClasses,\n  convertPropToCssClassName,\n} from '@elliemae/ds-classnames';\nimport DSPopper, {\n  PopperPositions,\n  PopperInteractions,\n} from '@elliemae/ds-basic/Popper';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport {\n  DEFAULT_DELAY_OPEN,\n  DEFAULT_DELAY_CLOSE,\n} from '@elliemae/ds-shared/constants';\nimport { TooltipType } from './TooltipType';\nimport { interactions } from '../Popper/interaction';\nimport { positions } from '../Popper/positions';\n\nconst blockName = 'tooltip';\n\nconst TooltipContainer = aggregatedClasses('div')(blockName);\nconst TooltipText = aggregatedClasses('span')(blockName, 'text');\n\nconst DSTooltip = ({\n  containerProps = {},\n  innerRef,\n  placement = PopperPositions.TOP,\n  title = '',\n  delayClose = DEFAULT_DELAY_CLOSE,\n  delayOpen = DEFAULT_DELAY_OPEN,\n  interactionType = PopperInteractions.HOVER,\n  triggerComponent = null,\n  className = '',\n  isOpen = undefined,\n  onOpen = () => null,\n  springAnimationComponent = undefined,\n  tooltipType = TooltipType.TOOLTIP,\n  showArrow = true,\n  zIndex,\n  ...otherTooltipProps\n}) => {\n  const { cssClassName: tooltipBlockName } = convertPropToCssClassName(\n    blockName,\n  );\n\n  let Content = title;\n  if (typeof title === 'string') {\n    Content = <TooltipText>{title}</TooltipText>;\n  }\n\n  return (\n    <DSPopper\n      blockName={tooltipBlockName}\n      contentComponent={\n        <TooltipContainer\n          {...containerProps}\n          {...otherTooltipProps}\n          className={`tooltip-container--${tooltipType} ${className}`}\n          innerRef={innerRef}\n        >\n          {Content}\n        </TooltipContainer>\n      }\n      delayClose={delayClose}\n      delayOpen={delayOpen}\n      interactionType={interactionType}\n      isOpen={isOpen}\n      onOpen={onOpen}\n      placement={placement}\n      showArrow={tooltipType === TooltipType.TOOLTIP ? showArrow : false}\n      springAnimationComponent={springAnimationComponent}\n      triggerComponent={getComponentFromProps(triggerComponent)}\n      zIndex={zIndex}\n    />\n  );\n};\n\nDSTooltip.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Tooltip position */\n  placement: PropTypes.oneOf(positions),\n  /** Tooltip content */\n  title: PropTypes.string,\n  /** Delay to close the tooltip */\n  delayClose: PropTypes.string,\n  /** Delay to open the tooltip */\n  delayOpen: PropTypes.string,\n  /** A type indicating how to open/close the tooltip */\n  interactionType: PropTypes.oneOf(interactions),\n  /** The component that will trigger the open/close interaction */\n  triggerComponent: PropTypes.element,\n  /** Whether the tooltip is visible or not */\n  isOpen: PropTypes.bool,\n  /** Handler when the tooltip opens */\n  onOpen: PropTypes.func,\n  /** Spring animation component */\n  springAnimationComponent: PropTypes.element,\n  /** Whether to show an arrow or not */\n  showArrow: PropTypes.bool,\n};\n\nexport { TooltipType, TooltipContainer, TooltipText };\nexport default DSTooltip;\n","export const DEFAULT_DELAY_OPEN = 200;\nexport const DEFAULT_DELAY_CLOSE = 300;\nexport const sizeOptions = ['small', 'medium', 'large', 'x-large'];\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nDSInputGroup.propTypes = {\n  containerProps: PropTypes.shape({}),\n  innerRef: PropTypes.func,\n  className: PropTypes.string,\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element,\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element,\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element,\n};\n\nexport default DSInputGroup;\n","export default {\n  placeholder: 'Select date and time',\n  className: '',\n  id: '',\n};\n","import moment from 'moment';\n\nexport const updateDateAndTime = (date, time) => {\n  const splittedDate = moment();\n  splittedDate.month(date.get('month'));\n  splittedDate.year(date.get('year'));\n  splittedDate.date(date.get('date'));\n  splittedDate.hour(time.get('hour'));\n  splittedDate.minute(time.get('minute'));\n  splittedDate.second(time.get('second'));\n\n  return splittedDate;\n};\n","export const AM = 'am';\nexport const PM = 'pm';\nexport const ARROW_UP = 'ArrowUp';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const BACKSPACE = 'Backspace';\nexport const ESCAPE = 'Escape';\nexport const HOME = 'Home';\nexport const SHIFT = 'Shift';\nexport const END = 'End';\nexport const HOUR_RANGE_12 = { min: 0, max: 12 };\nexport const HOUR_RANGE_24 = { min: 0, max: 24 };\nexport const GENERAL_TIME_RANGE = { min: 0, max: 59 };\nexport const PLACEHOLDER_TIME = {\n  hour: 'hour',\n  minutes: 'minutes',\n  seconds: 'seconds',\n  meridiem: 'meridiem',\n};\n","export const validateIndex = (index, options) => {\n  if (index < 0) return 0;\n  if (index >= options.length) return options.length - 1;\n  return index;\n};\n\nexport const getOptionIndex = (\n  options,\n  selectedOption,\n  valueProperty = 'value',\n) => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nexport const isAM = time => time && time.hour() < 12;\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport { isAM } from '../../TimePicker/utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  SHIFT,\n  PLACEHOLDER_TIME,\n} from '../../utils/constants';\n\nexport const isArrowIncrementDecrement = key =>\n  key === ARROW_DOWN || key === ARROW_UP || key === SHIFT;\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nexport const placeholderFormat = (position, format, use12Hours) => {\n  if (position === PLACEHOLDER_TIME.hour) {\n    return _placeholderHour(format, use12Hours);\n  }\n  if (position === PLACEHOLDER_TIME.minutes) {\n    return format.indexOf('mm') > -1 ? 'mm' : 'm';\n  }\n  if (position === PLACEHOLDER_TIME.seconds) {\n    return format.indexOf('ss') > -1 ? 'ss' : 's';\n  }\n  if (position === PLACEHOLDER_TIME.meridiem) {\n    return format.indexOf('A') > -1 ? 'A' : 'a';\n  }\n};\n\nconst _placeholderHour = (format, use12Hours) => {\n  if (use12Hours) {\n    return format.indexOf('hh') > -1 ? 'hh' : 'h';\n  }\n  return format.indexOf('HH') > -1 ? 'HH' : 'H';\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros ? addLeadingZeros(2)(value) : String(value);\n};\n\nexport const formatMinutes = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('mm') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatSeconds = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('ss') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatHour = (format, value) => {\n  const shouldAddLeadingZeros =\n    format.indexOf('HH') > -1 || format.indexOf('hh') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\n\nexport const formatMeridiem = (format, value) =>\n  format.indexOf('A') > -1 ? value.toUpperCase() : value.toLowerCase();\n\nexport const parseTimeNumberFromText = stringValue => {\n  const parsedInt = parseInt(stringValue);\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\nexport const focusNextInput = currentEl => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = currentEl => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = ({ min, max }, number, typed) => {\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    if (isNaN(typed)) return parseInt(typed);\n    return max;\n  }\n  if (number < min) return min;\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  const safeString = String(stringValue);\n  const cleanString = safeString.startsWith('00')\n    ? safeString.slice(1)\n    : safeString;\n  return number * 10 > max || String(max).length === cleanString.length;\n};\n\nexport const getTimeValuesFromTime = (time, format, use12Hours) => {\n  if (!time) return {};\n  const hours = use12Hours ? time.hour() % 12 || 12 : time.hour();\n  const minutes = time.minutes();\n  const seconds = time.seconds();\n  const meridiem = !isAM(time) ? PM : AM;\n\n  return {\n    hours: formatHour(format, hours),\n    minutes: formatMinutes(format, minutes),\n    seconds: formatSeconds(format, seconds),\n    meridiem,\n  };\n};\n\nexport const resetTimeValues = () => ({\n  hours: '',\n  minutes: '',\n  seconds: '',\n  meridiem: AM,\n});\n\nexport const commonInputProps = (onKeyDown, onInputFocus, onClick) => ({\n  pattern: '[0-9]*',\n  type: 'text',\n  onKeyDown,\n  onClick,\n  onFocus: onInputFocus,\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useEffect, useState } from 'react';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  formatHour,\n  formatMinutes,\n  formatSeconds,\n  formatMeridiem,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getTimeValuesFromTime,\n  isArrowIncrementDecrement,\n  shouldFocusNextInput,\n  placeholderFormat,\n} from './utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  BACKSPACE,\n  ESCAPE,\n  HOME,\n  HOUR_RANGE_12,\n  HOUR_RANGE_24,\n  GENERAL_TIME_RANGE,\n  END,\n  PLACEHOLDER_TIME,\n  SHIFT,\n} from '../../utils/constants';\n\nconst blockName = 'input-times-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst TimeInput = aggregatedClasses('input')(blockName, 'input');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst TimeDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst TimeInputs = ({\n  time,\n  format,\n  use12Hours,\n  step = 1,\n  showHours,\n  showMinutes,\n  showSeconds,\n  onChange,\n  disabled,\n  innerRef,\n  'arial-label': ariaLabel,\n}) => {\n  const [meridiem, setMeridiem] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [seconds, setSeconds] = useState('');\n  const [currentKey, setCurrentKey] = useState('');\n  const [lastTypedNumber, setLastTypedNumber] = useState(null);\n  const [timeSelected, setTimeSelected] = useState(time);\n  const prevTime = usePrevious(time);\n  const inputRefs = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null,\n  };\n\n  useEffect(() => {\n    if (time) {\n      const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, [time, format, use12Hours]);\n\n  useEffect(() => {\n    const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n    if (!time && prevTime) {\n      setMeridiem('');\n      setHours('');\n      setMinutes('');\n      setSeconds('');\n    }\n\n    if (time && prevTime) {\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, [time, prevTime, format, use12Hours]);\n\n  const focusNextInputIfNeeded = (currentEl, max, number) => {\n    if (\n      shouldFocusNextInput(max, number, currentEl.value) &&\n      !isArrowIncrementDecrement(currentKey) &&\n      !hasInputValue\n    ) {\n      focusNextInput(currentEl);\n    }\n  };\n\n  const getNextTimeValue = (value, incrementing = true) => {\n    const parsedValue = parseTimeNumberFromText(value);\n    return incrementing ? parsedValue + step : parsedValue - step;\n  };\n\n  const onInputFocus = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.select();\n  };\n\n  const onClick = (e) => {\n    if (e.target.value) {\n      setHasInputValue(true);\n    }\n  };\n\n  // eslint-disable-next-line max-statements\n  const onKeyDown = (event, max) => {\n    const { target } = event;\n    const { value } = target;\n    setLastTypedNumber(event.key);\n    switch (event.key) {\n      case ARROW_UP: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const incrementedValue = getNextTimeValue(value);\n        setNativeValue(event.target, incrementedValue);\n        break;\n      }\n      case ARROW_DOWN: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const decrementedValue = getNextTimeValue(value, false);\n        setNativeValue(event.target, decrementedValue);\n        break;\n      }\n      case BACKSPACE: {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case ESCAPE: {\n        event.preventDefault();\n        event.target.blur();\n        break;\n      }\n      case HOME: {\n        event.preventDefault();\n        setNativeValue(event.target, String(max));\n        focusNextInput(event.target);\n        break;\n      }\n      case END: {\n        event.preventDefault();\n        setNativeValue(event.target, '00');\n        focusNextInput(event.target);\n        break;\n      }\n      case SHIFT:\n        event.preventDefault();\n        setCurrentKey(event.key);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isTimeCompletelySet = () => {\n    let neededValues = [];\n\n    if (showHours) neededValues = [...neededValues, hours || null];\n    if (showMinutes) neededValues = [...neededValues, minutes || null];\n    if (showSeconds) neededValues = [...neededValues, seconds || null];\n    if (use12Hours) neededValues = [...neededValues, meridiem || null];\n\n    return !neededValues.some((value) => !value);\n  };\n\n  // eslint-disable-next-line complexity\n  useEffect(() => {\n    const selectedTime = time || moment();\n    if (isTimeCompletelySet()) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      setTimeSelected(selectedTime);\n    }\n  }, [hours, minutes, seconds, meridiem]);\n\n  const handleSecondsChange = (e) => {\n    const { value } = e.target;\n    const secondsHandled = parseTimeNumberFromText(value);\n\n    const nextSeconds = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      secondsHandled,\n      lastTypedNumber,\n    );\n\n    setSeconds(formatSeconds(format, nextSeconds));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleMinutesChange = (e) => {\n    const { value } = e.target;\n    const minutesHandled = parseTimeNumberFromText(value);\n    const nextMinutes = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      minutesHandled,\n      lastTypedNumber,\n    );\n\n    setMinutes(formatMinutes(format, nextMinutes));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleHoursChange = (e) => {\n    const { value } = e.target;\n    const hour = parseTimeNumberFromText(value);\n    const hoursRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    const nextHour = getValidTimeNumber(hoursRange, hour, lastTypedNumber);\n    setHours(formatHour(format, nextHour));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, hoursRange.max, value);\n  };\n\n  const handleMeridiemKeyDown = (e) => {\n    if (e.key === ARROW_UP || e.key === 'a') {\n      setMeridiem(formatMeridiem(format, AM));\n    } else if (e.key === ARROW_DOWN || e.key === 'p') {\n      setMeridiem(formatMeridiem(format, PM));\n    } else if (e.key === SHIFT) {\n      setCurrentKey(e.key);\n    } else if (e.key === BACKSPACE) {\n      setMeridiem('');\n    }\n    onChange(timeSelected);\n  };\n\n  const handleMeridiemBlur = (e) => {\n    const { value } = e.target;\n    if (value !== AM && value !== PM) {\n      setMeridiem('');\n    }\n  };\n\n  const renderSecondsInput = () => {\n    if (!showSeconds) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"seconds-input\"\n        data-testid=\"ds-time-input__seconds\"\n        aria-label={ariaLabel || 'Seconds Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.seconds = node)}\n        onChange={handleSecondsChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.seconds, format)}\n        value={seconds}\n      />\n    );\n  };\n\n  const renderMinutesInput = () => {\n    if (!showMinutes) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"minutes-input\"\n        data-testid=\"ds-time-input__minutes\"\n        aria-label={ariaLabel || 'Minutes Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.minutes = node)}\n        onChange={handleMinutesChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.minutes, format)}\n        value={minutes}\n      />\n    );\n  };\n\n  const renderHoursInput = () => {\n    if (!showHours) return null;\n    const hourFormatRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, hourFormatRange.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"hour-input\"\n        data-testid=\"ds-time-input__hours\"\n        aria-label={ariaLabel || 'Hours Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.hours = node)}\n        onChange={handleHoursChange}\n        placeholder={placeholderFormat(\n          PLACEHOLDER_TIME.hour,\n          format,\n          use12Hours,\n        )}\n        value={hours}\n      />\n    );\n  };\n\n  const renderMeridiemInput = () => {\n    if (!use12Hours) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps}\n        key=\"meridiem-input\"\n        data-testid=\"ds-time-input__ampm\"\n        aria-label={ariaLabel || 'Meridiem Input'}\n        disabled={disabled}\n        onBlur={handleMeridiemBlur}\n        onKeyDown={handleMeridiemKeyDown}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.meridiem, format)}\n        value={meridiem}\n      />\n    );\n  };\n\n  const renderTimeInputs = () => {\n    const inputs = [\n      renderHoursInput(),\n      renderMinutesInput(),\n      renderSecondsInput(),\n    ];\n    /* eslint-disable indent */\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <TimeDivider\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={index}\n                  content=\":\"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n    /* eslint-enable indent */\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n      renderMeridiemInput(),\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderTimeInputs()}</InputTimesGroup>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useRef, useMemo } from 'react';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport memoizeOne from 'memoize-one';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport TimeInputs from './TimeInputs';\n\nconst blockName = 'input-time';\n\nconst InputTimeContainer = aggregatedClasses('div')(blockName);\n\nconst TimeInputImpl = ({\n  format,\n  innerRef,\n  onChange,\n  className,\n  value,\n  disabled,\n  'arial-label': ariaLabel,\n}) => {\n  const getVisibleTimeInputs = memoizeOne(formatValue =>\n    getVisibleTimeByFormat(formatValue),\n  );\n  let inputsContainer = useRef();\n\n  const handleFocus = e => {\n    if (!e.target.type) {\n      inputsContainer.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeInputs(format));\n\n  return (\n    <InputTimeContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <TimeInputs\n        aria-label={ariaLabel}\n        disabled={disabled}\n        format={format}\n        innerRef={node => (inputsContainer = node)}\n        onChange={onChange}\n        time={value}\n        {...visibleInputs}\n      />\n    </InputTimeContainer>\n  );\n};\n\nexport default TimeInputImpl;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.499 6.969a.503.503 0 0 0-.313.109l-5 4a.5013.5013 0 0 0-.078.703c.173.214.488.25.703.078l4.688-3.75 4.688 3.75c.218.172.531.136.703-.078a.5004.5004 0 0 0-.078-.703l-5-4a.501.501 0 0 0-.313-.109z',\n  ],\n  height: 20,\n  width: 20,\n});\n","export function MoveElementOnScroll(\n  element,\n  {\n    container,\n    min = 0,\n    max = element.offsetHeight,\n    speed = 1,\n    smooth = 2,\n    onUpdate = () => null,\n    onEndScroll = () => null,\n  },\n) {\n  let moving = false;\n  let pos = min;\n  let lastPos = pos;\n\n  // todo: move this to utils if we finally need it\n  const requestFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(func) {\n        window.setTimeout(func, 1000 / 50);\n      }\n    );\n  })();\n\n  function update() {\n    moving = true;\n    const delta = (pos - lastPos) / smooth;\n    lastPos += delta;\n\n    if (Math.abs(delta) > 0.7) {\n      requestFrame(() => {\n        onUpdate(lastPos, delta);\n        update();\n      });\n    } else {\n      onEndScroll(pos);\n      moving = false;\n    }\n  }\n\n  function scrolling(e) {\n    e.preventDefault(); // disable default scrolling\n    let delta = e.delta || e.wheelDelta;\n    if (delta === undefined) {\n      // for firefox\n      delta = -e.detail;\n      delta *= 10 * speed;\n    }\n\n    pos += -delta * speed;\n    pos = Math.max(min, Math.min(pos, max)); // limit scrolling\n    if (!moving) {\n      update();\n    }\n  }\n\n  container.addEventListener('mousewheel', scrolling, false);\n  container.addEventListener('DOMMouseScroll', scrolling, false);\n\n  return {\n    unsubscribe: () => {\n      container.removeEventListener('mousewheel', scrolling);\n      container.removeEventListener('DOMMouseScroll', scrolling);\n    },\n    updatePosition: newPos => {\n      pos = -newPos;\n      lastPos = -pos;\n    },\n  };\n}\n\nexport default MoveElementOnScroll;\n","/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport { findIndex } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport memoizeOne from 'memoize-one';\nimport ChevronSmallUp from '@elliemae/ds-icons/ChevronSmallUp';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport ChevronSmallDown from '@elliemae/ds-icons/ChevronSmallDown';\nimport { MoveElementOnScroll } from './moveElementOnScroll';\nimport { validateIndex } from './utils';\n\nconst blockName = 'time-picker-panel';\n\nconst Container = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ scrolling }) => ({ scrolling }),\n);\nconst Wrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst PickerItemListContainer = aggregatedClasses('div')(\n  blockName,\n  'item-list-container',\n);\nconst PickerItemList = aggregatedClasses('div')(blockName, 'item-list');\nconst PickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst PickerItemContainer = aggregatedClasses('div')(\n  blockName,\n  'item',\n  ({ selected }) => ({ selected }),\n);\nconst PickerSelectedOptionSelected = aggregatedClasses('div')(\n  blockName,\n  'selected-container',\n);\nconst SelectedCircle = aggregatedClasses('div')(blockName, 'selected-circle');\nconst ArrowButtonContainer = aggregatedClasses('div')(\n  blockName,\n  'arrow-container',\n);\n\nconst getOptionIndex = (options, selectedOption, valueProperty = 'value') => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nconst arrowProps = {\n  buttonType: 'text',\n  fluidHeight: true,\n  fluidWidth: true,\n  size: 's',\n};\n\nexport default class PickerPanel extends Component {\n  computeContainerTranslation = memoizeOne(index => {\n    const { options, valueProperty } = this.props;\n    const { selectedOption, scrolling } = this.state;\n\n    const selectedOptionIndex =\n      index || getOptionIndex(options, selectedOption, valueProperty);\n    const listYPosition =\n      this.minYListPosition - selectedOptionIndex * this.optionHeight;\n\n    if (this.scrollHandler && !scrolling)\n      this.scrollHandler.updatePosition(listYPosition);\n\n    return listYPosition;\n  });\n\n  static defaultProps = {\n    valueProperty: 'value',\n    labelProperty: 'label',\n    numberItemsOnScreen: 5, // this number should be impair\n    options: [],\n    arrowStep: 5,\n  };\n\n  constructor(props) {\n    super(props);\n    this.pickerListContainerRef = React.createRef();\n    this.pickerListRef = React.createRef();\n    this.pickerItemRef = React.createRef();\n    this.selectedOptionRef = React.createRef();\n\n    this.state = {\n      selectedOption: props.selected,\n      activeIndex: 0,\n      // eslint-disable-next-line react/no-unused-state\n      prevProps: {},\n    };\n  }\n\n  componentDidMount() {\n    this.computeSizes();\n    const pickerListContainerEl = this.pickerListContainerRef.current;\n    const pickerListEl = this.pickerListRef.current;\n\n    this.scrollHandler = new MoveElementOnScroll(pickerListEl, {\n      container: pickerListContainerEl,\n      min: -this.minYListPosition,\n      max: this.maxYListPosition,\n      onUpdate: (pos, delta) => {\n        const { options } = this.props;\n        const index =\n          options.length -\n          -Math.floor((pos - this.maxYListPosition) / this.optionHeight) +\n          (delta > 0 ? 1 : -1);\n        this.moveTo(index, true);\n      },\n      onEndScroll: () => {\n        this.setState({ scrolling: false });\n      },\n    });\n    this.computeContainerTranslation();\n  }\n\n  componentWillUnmount() {\n    this.scrollHandler.unsubscribe();\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevProps }) {\n    const { selected, valueProperty, options } = nextProps;\n    if (selected !== prevProps.selected) {\n      return {\n        selectedOption: selected,\n        activeIndex: getOptionIndex(options, selected, valueProperty),\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  getOptionValue(option) {\n    const { valueProperty } = this.props;\n    return option[valueProperty];\n  }\n\n  getOptionLabel(option) {\n    const { labelProperty } = this.props;\n    return option[labelProperty];\n  }\n\n  moveTo(index, scrolling) {\n    const { options } = this.props;\n    const { selectedOption } = this.state;\n    const validIndex = validateIndex(index, options);\n    const option = options[validIndex];\n    const optionValue = this.getOptionValue(option);\n    if (selectedOption !== optionValue) {\n      this.handleOptionSelect(optionValue, validIndex, scrolling);\n    }\n  }\n\n  computeSizes() {\n    const { options, numberItemsOnScreen } = this.props;\n    const { offsetHeight: optionHeight } = this.pickerItemRef.current;\n\n    this.optionHeight = optionHeight;\n    this.listHeight = this.optionHeight * numberItemsOnScreen;\n\n    this.minYListPosition = this.listHeight / 2 - this.optionHeight / 2;\n    this.maxYListPosition =\n      this.optionHeight * (options.length - Math.ceil(numberItemsOnScreen / 2));\n  }\n\n  handleOptionSelect(optionValue, index, scrolling) {\n    const { onChange } = this.props;\n    this.setState(\n      state => ({\n        ...state,\n        scrolling,\n        selectedOption: optionValue,\n        activeIndex: index,\n      }),\n      () => {\n        onChange(optionValue, index);\n      },\n    );\n  }\n\n  // TODO: this needs a refactor from de FocusGroup\n  // eslint-disable-next-line max-statements\n  handleKeyDown(e) {\n    const { activeIndex } = this.state;\n    const { options } = this.props;\n    const [firstColumn, ...restColumns] = document.getElementsByClassName(\n      'em-ds-time-picker-panel',\n    );\n    const [lastColumn] = restColumns.slice(-1);\n    const [prev] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const focusedElement = document.activeElement;\n\n    switch (e.key) {\n      case 'Home':\n        this.moveTo(0);\n        break;\n      case 'End':\n        this.moveTo(options.length - 1);\n        break;\n      case 'ArrowUp':\n        this.moveTo(activeIndex - 1);\n        break;\n      case 'ArrowDown':\n        this.moveTo(activeIndex + 1);\n        break;\n      case 'Tab': {\n        e.preventDefault();\n        // If it is DateTimePicker, move focus to prev arrow element\n        if (prev && focusedElement === lastColumn) {\n          prev.focus();\n        } else if (focusedElement === lastColumn) {\n          firstColumn.focus();\n        } else {\n          const position = findIndex(restColumns, focusedElement);\n          restColumns[position + 1].focus();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  handleStepMoveUp() {\n    const { activeIndex } = this.state;\n    const { arrowStep } = this.props;\n    const supposedPos = activeIndex - arrowStep;\n    const nextPos = supposedPos >= 0 ? supposedPos : activeIndex - 1;\n    this.moveTo(nextPos);\n  }\n\n  handleStepMoveDown() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex + arrowStep;\n    const nextPos =\n      supposedPos <= options.length ? supposedPos : activeIndex + 1;\n    this.moveTo(nextPos);\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return <PickerHeader>{header}</PickerHeader>;\n  };\n\n  render() {\n    const { options, hasHeader } = this.props;\n    const { selectedOption, activeIndex, scrolling } = this.state;\n\n    const listYPosition = this.computeContainerTranslation(activeIndex);\n\n    return (\n      <Wrapper>\n        {hasHeader && this.renderHeader()}\n        <Container\n          classProps={{ scrolling }}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n        >\n          <PickerSelectedOptionSelected innerRef={this.selectedOptionRef}>\n            <SelectedCircle />\n          </PickerSelectedOptionSelected>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Up\"\n              disabled={activeIndex <= 0}\n              icon={<ChevronSmallUp />}\n              onClick={this.handleStepMoveUp}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n          <PickerItemListContainer\n            innerRef={this.pickerListContainerRef}\n            style={{\n              height: this.listHeight,\n            }}\n          >\n            <PickerItemList\n              innerRef={this.pickerListRef}\n              style={{\n                transform: `translateY(${listYPosition}px)`,\n              }}\n            >\n              {options.map((option, index) => {\n                const value = this.getOptionValue(option);\n                const label = this.getOptionLabel(option);\n                return (\n                  <PickerItemContainer\n                    key={value}\n                    classProps={{\n                      selected: selectedOption\n                        ? value === selectedOption\n                        : index === 0,\n                    }}\n                    innerRef={this.pickerItemRef}\n                    onClick={() => this.handleOptionSelect(value, index)}\n                  >\n                    {label}\n                  </PickerItemContainer>\n                );\n              })}\n            </PickerItemList>\n          </PickerItemListContainer>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Down\"\n              disabled={activeIndex >= options.length}\n              icon={<ChevronSmallDown />}\n              onClick={this.handleStepMoveDown}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from '@elliemae/ds-utilities/utils';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { isAM } from './utils';\nimport PickerPanel from './PickerPanel';\n\nconst blockName = 'time-picker-menu';\n\nconst TimePickerContainer = aggregatedClasses('div')(blockName);\nconst TimePickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst TimePickerPanelContainer = aggregatedClasses('div')(\n  blockName,\n  'panel-container',\n);\n\nconst generateOption = (format) => (option) => ({\n  value: option,\n  label: typeof format === 'function' ? format(option) : option,\n});\n\nexport default class TimePickerMenu extends Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    time: moment(),\n    hasHeader: false,\n    use12Hours: true,\n    showSeconds: true,\n    showMinutes: true,\n    showHours: true,\n    onTimeChange: () => null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: props.time || moment(),\n    };\n  }\n\n  componentDidMount() {\n    const { time } = this.state;\n    this.setState({ time });\n  }\n\n  handleMinuteChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.minute(value));\n  }\n\n  handleHoursChange(value) {\n    const { time } = this.state;\n    const { use12Hours } = this.props;\n    let nextHour = value;\n    if (use12Hours) {\n      if (!isAM(time)) {\n        nextHour = (value % 12) + 12;\n      }\n    }\n    this.updateTime(time.hour(nextHour));\n  }\n\n  handleSecondsChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.second(value));\n  }\n\n  handleAMPMChange(value) {\n    const { time } = this.state;\n    const hour = time.hour();\n    const nextHour =\n      value.toLowerCase() === 'am' ? hour % 12 : (hour % 12) + 12;\n    this.updateTime(time.hour(nextHour));\n  }\n\n  updateTime(time) {\n    const { onTimeChange } = this.props;\n    onTimeChange(time);\n    this.setState({ time });\n  }\n\n  renderMinutesPanel() {\n    const { time } = this.state;\n    const { showMinutes, format, hasHeader } = this.props;\n    if (!showMinutes) return null;\n    const withLeadingZeros = format.indexOf('mm') > -1;\n    const rangeMinutes = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"M\"\n        onChange={this.handleMinuteChange}\n        options={rangeMinutes}\n        selected={time.minute()}\n      />\n    );\n  }\n\n  renderSecondsPanel() {\n    const { time } = this.state;\n    const { showSeconds, format, hasHeader } = this.props;\n    if (!showSeconds) return null;\n    const withLeadingZeros = format.indexOf('ss') > -1;\n    const rangeSeconds = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"S\"\n        onChange={this.handleSecondsChange}\n        options={rangeSeconds}\n        selected={time.second()}\n      />\n    );\n  }\n\n  // eslint-disable-next-line max-lines\n  renderHoursPanel() {\n    const { time } = this.state;\n    const { showHours, use12Hours, format, hasHeader } = this.props;\n    if (!showHours) return null;\n\n    const selectedHour = use12Hours ? time.hour() % 12 || 12 : time.hour();\n\n    const withLeadingZeros = format.indexOf('hh') > -1;\n    const rangeHours = use12Hours ? range(1, 13) : range(24);\n    const hoursOptions = rangeHours.map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"H\"\n        onChange={this.handleHoursChange}\n        options={hoursOptions}\n        selected={selectedHour}\n      />\n    );\n  }\n\n  renderAMPMPanel() {\n    const { time } = this.state;\n    const { use12Hours, hasHeader } = this.props;\n    if (!use12Hours) return null;\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"\"\n        onChange={this.handleAMPMChange}\n        options={[\n          { value: 'am', label: 'am' },\n          { value: 'pm', label: 'pm' },\n        ]}\n        selected={!isAM(time) ? 'pm' : 'am'}\n      />\n    );\n  }\n\n  renderHeader = () => {\n    const { time } = this.state;\n    return <TimePickerHeader>{time.format('hh:mma')}</TimePickerHeader>;\n  };\n\n  render() {\n    const { hasHeaderDisplay } = this.props;\n\n    return (\n      <TimePickerContainer>\n        {hasHeaderDisplay && this.renderHeader()}\n        <TimePickerPanelContainer>\n          {this.renderHoursPanel()}\n          {this.renderMinutesPanel()}\n          {this.renderSecondsPanel()}\n          {this.renderAMPMPanel()}\n        </TimePickerPanelContainer>\n      </TimePickerContainer>\n    );\n  }\n}\n\nTimePickerMenu.propTypes = {\n  /** Time value */\n  time: PropTypes.instanceOf(moment),\n  /** If the menu has header or not */\n  hasHeader: PropTypes.bool,\n  /** Whether to use the 12 hours format */\n  use12Hours: PropTypes.bool,\n  /** Whether show 'seconds' or not */\n  showSeconds: PropTypes.bool,\n  /** Whether show 'minutes' or not */\n  showMinutes: PropTypes.bool,\n  /** Whether show 'hours' or not */\n  showHours: PropTypes.bool,\n  /** Handler when time changes */\n  onTimeChange: PropTypes.func,\n};\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport {\n  DSDatePickerController,\n  DatePickerDropdown,\n} from '@elliemae/ds-date-picker';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport DSInput from '@elliemae/ds-basic/form/Input';\nimport { DateInputImpl } from '@elliemae/ds-basic/form/DateInput';\nimport { TimeInputImpl } from '@elliemae/ds-basic/form/TimeInput';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport { Menu } from '@elliemae/ds-basic/TimePicker';\nimport { updateDateAndTime } from '../utils';\n\nconst blockName = 'date-time-picker';\n\nconst DateTimePickerWrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst TimePicker = aggregatedClasses(Menu)(blockName, 'time-picker');\nconst TimePickerWrapper = aggregatedClasses('div')(\n  blockName,\n  'time-picker-wrapper',\n);\nconst DateInput = aggregatedClasses(DateInputImpl)(blockName, 'date-input');\n\nconst DSDateTimePickerImpl = ({\n  placeholder,\n  date,\n  datePickerProps: {\n    disabled = false,\n    numberOfMonths = 1,\n    readOnly = false,\n    enableOutsideDays = false,\n    transitionDuration = 0,\n    firstDayOfWeek = 0,\n    keepOpenOnDateSelect = true,\n    hideKeyboardShortcutsPanel = true,\n    onPrevMonthClick = () => null,\n    onNextMonthClick = () => null,\n    onClose = () => null,\n    onDateChange = () => null,\n    phrases = SingleDatePickerPhrases,\n    displayFormatDay = 'D',\n    isDayBlocked = () => false,\n    isOutsideRange = () => false,\n    isDayHighlighted = () => false,\n    zIndex = 11,\n  },\n  timePickerProps: {\n    format = 'hh:mm A',\n    onChange: onChangeTimePicker = () => null,\n  },\n}) => {\n  const [selectedDate, setSelectedDate] = useState(date);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dateTimePickerWrapperRef = useRef();\n\n  useEffect(() => {\n    if (date) setSelectedDate(moment(date));\n  }, [date]);\n\n  const visiblePanels = useMemo(() => getVisibleTimeByFormat(format), []);\n\n  const currentYear = moment().year();\n\n  const handleDatePickerChange = (dateSelected) => {\n    const splittedDate = updateDateAndTime(dateSelected, selectedDate);\n    if (!readOnly) {\n      setSelectedDate(splittedDate);\n      onDateChange(splittedDate);\n    }\n  };\n\n  const onTimeChange = (pickerTime) => {\n    const splittedDate = updateDateAndTime(selectedDate, pickerTime);\n    onChangeTimePicker(splittedDate);\n    setSelectedDate(splittedDate);\n  };\n\n  const handleInputChange = (inputValue) => {\n    setSelectedDate(inputValue);\n    onChangeTimePicker(inputValue);\n    onDateChange(inputValue);\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!dateTimePickerWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleClickEscape = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  return (\n    <DSInputGroup\n      rightAddon={\n        <DatePickerDropdown\n          disabled={disabled}\n          isOpen={isOpen}\n          zIndex={zIndex}\n          menu={\n            <DateTimePickerWrapper\n              ref={dateTimePickerWrapperRef}\n              data-testid=\"date-time-picker\"\n            >\n              <DSDatePickerController\n                date={selectedDate}\n                displayFormatDay={displayFormatDay}\n                enableOutsideDays={enableOutsideDays}\n                firstDayOfWeek={firstDayOfWeek}\n                hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                isDayBlocked={isDayBlocked}\n                isDayHighlighted={isDayHighlighted}\n                isOutsideRange={isOutsideRange}\n                keepOpenOnDateSelect={keepOpenOnDateSelect}\n                numberOfMonths={numberOfMonths}\n                onClickEscape={handleClickEscape}\n                onClose={onClose}\n                onDateChange={handleDatePickerChange}\n                onFocusChange={() => {}}\n                // eslint-disable-next-line max-lines\n                onNextMonthClick={onNextMonthClick}\n                onOutsideClick={(event) => handleOutsideClick(event)}\n                onPrevMonthClick={onPrevMonthClick}\n                phrases={phrases}\n                transitionDuration={transitionDuration}\n              />\n              <TimePickerWrapper>\n                <TimePicker\n                  disabled={disabled}\n                  format={format}\n                  hasHeader\n                  hasHeaderDisplay\n                  onTimeChange={onTimeChange}\n                  showSeconds={false}\n                  time={selectedDate}\n                  {...visiblePanels}\n                />\n              </TimePickerWrapper>\n            </DateTimePickerWrapper>\n          }\n          onClick={handleOpen}\n          readOnly={readOnly}\n        />\n      }\n    >\n      <DSInput\n        customInputType={({ onChange: handleChange, ...restInputProps }) => (\n          <>\n            <DateInput\n              disabled={disabled}\n              format=\"MM:DD:YYYY\"\n              onChange={(dateSelected) => handleChange(dateSelected)}\n              {...restInputProps}\n              yearMaxRange={currentYear + 100}\n              yearMinRange={currentYear - 100}\n            />\n            <TimeInputImpl\n              disabled={disabled}\n              format=\"hh:mm\"\n              onChange={(time) => handleChange(time)}\n              {...restInputProps}\n            />\n          </>\n        )}\n        isShowElipsisActive={false}\n        disabled={disabled}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n        value={selectedDate}\n      />\n    </DSInputGroup>\n  );\n};\n\nexport default DSDateTimePickerImpl;\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSDateTimePickerImpl from './components/DateTimePickerImpl';\nimport english from './lang/english';\n\nconst {\n  placeholder: placeholderDefault,\n  className: classNameDefault,\n  id: idDefault,\n} = english;\n\nconst DSDateTimePicker = ({\n  containerProps = {},\n  className = classNameDefault,\n  id = idDefault,\n  placeholder = placeholderDefault,\n  date = moment(),\n  datePickerProps = {\n    disabled: false,\n    numberOfMonths: 1,\n    readOnly: false,\n    enableOutsideDays: false,\n    transitionDuration: 0,\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    displayFormatDay: 'D',\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    zIndex: 11,\n  },\n  timePickerProps = {\n    format: 'hh:mm A',\n    onChange: () => null,\n  },\n}) => {\n  const { cssClassName } = convertPropToCssClassName(\n    'datetimepicker',\n    className,\n    {\n      id,\n    },\n  );\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDateTimePickerImpl\n        date={date}\n        datePickerProps={datePickerProps}\n        placeholder={placeholder}\n        timePickerProps={timePickerProps}\n      />\n    </div>\n  );\n};\n\nexport default DSDateTimePicker;\n\nDSDateTimePicker.propTypes = {\n  containerProps: PropTypes.object,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  /**\n   * Initial date, by default current date\n   */\n  date: PropTypes.instanceOf(Date, moment),\n  /**\n   * DatePicker properties\n   */\n  datePickerProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    numberOfMonths: PropTypes.number,\n    readOnly: PropTypes.bool,\n    enableOutsideDays: PropTypes.bool,\n    transitionDuration: PropTypes.number,\n    firstDayOfWeek: PropTypes.number,\n    keepOpenOnDateSelect: PropTypes.bool,\n    hideKeyboardShortcutsPanel: PropTypes.bool,\n    onPrevMonthClick: PropTypes.func,\n    onNextMonthClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onDateChange: PropTypes.func,\n    phrases: PropTypes.shape({\n      calendarLabel: PropTypes.string,\n      closeDatePicker: PropTypes.string,\n      clearDates: PropTypes.string,\n      focusStartDate: PropTypes.string,\n      jumpToPrevMonth: PropTypes.string,\n      jumpToNextMonth: PropTypes.string,\n      keyboardShortcuts: PropTypes.string,\n      showKeyboardShortcutsPanel: PropTypes.string,\n      hideKeyboardShortcutsPanel: PropTypes.string,\n      openThisPanel: PropTypes.string,\n      enterKey: PropTypes.string,\n      leftArrowRightArrow: PropTypes.string,\n      upArrowDownArrow: PropTypes.string,\n      pageUpPageDown: PropTypes.string,\n      homeEnd: PropTypes.string,\n      escape: PropTypes.string,\n      questionMark: PropTypes.string,\n      selectFocusedDate: PropTypes.string,\n      moveFocusByOneDay: PropTypes.string,\n      moveFocusByOneWeek: PropTypes.string,\n      moveFocusByOneMonth: PropTypes.string,\n      moveFocustoStartAndEndOfWeek: PropTypes.string,\n      returnFocusToInput: PropTypes.string,\n      keyboardNavigationInstructions: PropTypes.string,\n      chooseAvailableStartDate: PropTypes.func,\n      chooseAvailableEndDate: PropTypes.func,\n      dateIsUnavailable: PropTypes.func,\n      dateIsSelected: PropTypes.func,\n      /**\n       * ZIndex for the picker popup\n       */\n      zIndex: PropTypes.number,\n    }),\n    displayFormatDay: PropTypes.string,\n    isDayBlocked: PropTypes.func,\n    isOutsideRange: PropTypes.func,\n    isDayHighlighted: PropTypes.func,\n  }),\n  /**\n   * Input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * TimePicker properties\n   */\n  timePickerProps: PropTypes.shape({\n    format: PropTypes.string,\n    onChange: PropTypes.func,\n  }),\n};\n"],"sourceRoot":""}