{"version":3,"sources":["../../../../src/hooks/usePrevious.js","../../../src/timeUtils.js","../../../../../../src/form/DateInput/components/utils.js","../../../../../../src/form/DateInput/components/DateInputImpl.js","../../../src/ChevronSmallDown.js","../../../../../../src/form/DateInput/components/DateInputs.js","../../../../../src/components/DatePickerPicker/DatePickerPicker.js","../../../src/DatePicker.js","../../../../src/components/DatePickerDropdown.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../../../src/lang/english.js","../../../src/utils.js","../../../../src/utils/constants.js","../../../../src/TimePicker/utils.js","../../../../../src/form/TimeInput/utils.js","../../../../../src/form/TimeInput/TimeInputs.js","../../../../../src/form/TimeInput/TimeInputImpl.js","../../../src/ChevronSmallUp.js","../../../../src/TimePicker/moveElementOnScroll.js","../../../../src/TimePicker/PickerPanel.js","../../../../src/TimePicker/TimePickerMenu.js","../../../../src/components/DateTimePickerImpl.js","../../../src/DSDateTimePicker.js"],"names":["value","ref","useRef","useEffect","getVisibleTimeByFormat","format","showHours","showMinutes","showSeconds","use12Hours","addLeadingZeros","count","number","padStart","String","currentYear","Date","setNativeValue","element","Object","valueSetter","prototype","prototypeValueSetter","Event","bubbles","formatTimeNumber","shouldAddLeadingZeros","leadingZeros","formatDay","formatYear","formatMonth","parseTimeNumberFromText","stringValue","parsedInt","parseInt","isNaN","triggerOnBlur","blurEvent","onBlur","currentEl","relatedTarget","nextElement","nextElementSibling","focusNextInput","focusPreviousInput","previousElement","getValidTimeNumber","min","max","valueString","onError","getDateValuesFromTime","time","month","day","year","onInputFocus","e","getNextTimeValue","step","incrementing","parsedValue","result","target","focusNextInputIfNeeded","key","shouldFocusNextInput","commonInputProps","digits","onKeyDown","placeholder","props","pattern","type","onFocus","handleCompletedDate","newDate","INTERNAL_V2_NO_MUTATION","moment","date","showYear","show","showMonth","showDay","isTimeCompletelySet","range","neededValues","yearMinRange","yearMaxRange","isValidYear","DateInputContainer","aggregatedClasses","DateInputImpl","innerRef","onChange","className","disabled","inputContainerRef","visibleInputs","useMemo","onClick","onCustomKeyDown","PropTypes","current","any","createIcon","paths","height","width","blockName","InputTimesGroup","MonthInput","DayInput","YearInput","Divider","DateDivider","content","DateInputs","useState","currentKey","setCurrentKey","setMonth","setDay","setYear","prevTime","usePrevious","prevFormat","dateValues","isCompletedDate","triggerChange","handleYearChange","yearValue","yearRange","nextYear","handleMonthChange","monthValue","monthRange","nextMonth","handleDayChange","dayValue","dayRange","nextDay","event","shouldIncrementDecrement","name","change","v","incrementedValue","decrementedValue","renderMonthInput","autocomplete","data-testid","renderDayInput","renderYearInput","input","acc","index","Picker","icon","size","DSIconSizes","buttonActionType","readOnly","tabIndex","rest","aria-label","buttonType","color","DSIconColors","PickerPropsTypes","classNameElement","convertPropToCssClassName","noop","DatePickerDropdown","isOpen","menu","zIndex","pickerProps","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","Container","InputAddon","AddonWrapper","this","leftAddon","rightAddon","inputComponent","containerProps","childType","Component","DSInputGroup","style","InputComponents","children","id","updateDateAndTime","splittedDate","AM","HOUR_RANGE_12","HOUR_RANGE_24","GENERAL_TIME_RANGE","PLACEHOLDER_TIME","validateIndex","options","isAM","placeholderFormat","position","_placeholderHour","formatMinutes","formatSeconds","formatHour","formatMeridiem","getTimeValuesFromTime","hours","minutes","seconds","meridiem","TimeInput","TimeDivider","ariaLabel","setMeridiem","setHours","setMinutes","hasInputValue","setHasInputValue","setSeconds","lastTypedNumber","setLastTypedNumber","timeSelected","setTimeSelected","inputRefs","timeValues","safeString","cleanString","selectedTime","nextHours","handleSecondsChange","secondsHandled","nextSeconds","handleMinutesChange","minutesHandled","nextMinutes","handleHoursChange","hour","hoursRange","nextHour","handleMeridiemKeyDown","handleMeridiemBlur","renderHoursInput","hourFormatRange","InputTimeContainer","getVisibleTimeInputs","memoizeOne","formatValue","inputsContainer","node","MoveElementOnScroll","container","offsetHeight","speed","smooth","onUpdate","onEndScroll","moving","pos","lastPos","requestFrame","window","func","delta","Math","update","unsubscribe","updatePosition","newPos","scrolling","Wrapper","PickerItemListContainer","PickerItemList","PickerHeader","PickerItemContainer","selected","PickerSelectedOptionSelected","SelectedCircle","ArrowButtonContainer","getOptionIndex","selectedOption","valueProperty","option","arrowProps","fluidHeight","fluidWidth","PickerPanel","selectedOptionIndex","listYPosition","header","React","activeIndex","prevProps","pickerListContainerEl","pickerListContainerRef","pickerListEl","pickerListRef","validIndex","optionValue","getOptionValue","numberItemsOnScreen","optionHeight","pickerItemRef","listHeight","state","document","firstColumn","restColumns","lastColumn","prev","focusedElement","findIndex","supposedPos","nextPos","hasHeader","computeContainerTranslation","classProps","selectedOptionRef","transform","label","nextProps","labelProperty","arrowStep","TimePickerContainer","TimePickerHeader","TimePickerPanelContainer","generateOption","TimePickerMenu","onTimeChange","withLeadingZeros","rangeMinutes","rangeSeconds","selectedHour","hoursOptions","rangeHours","hasHeaderDisplay","DateTimePickerWrapper","TimePicker","TimePickerWrapper","DateInput","datePickerProps","numberOfMonths","enableOutsideDays","transitionDuration","firstDayOfWeek","keepOpenOnDateSelect","hideKeyboardShortcutsPanel","onPrevMonthClick","onNextMonthClick","onClose","onDateChange","phrases","SingleDatePickerPhrases","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","timePickerProps","onChangeTimePicker","selectedDate","setSelectedDate","setIsOpen","dateTimePickerWrapperRef","visiblePanels","onClickEscape","dateSelected","onFocusChange","onOutsideClick","handleOutsideClick","pickerTime","customInputType","handleChange","restInputProps","isShowElipsisActive","inputValue","placeholderDefault","english","classNameDefault","idDefault","DSDateTimePicker","cssClassName","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected"],"mappings":"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","file":"static/js/6.842bfa65.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport default usePrevious;\n","import { padStart } from './utils';\n\nexport const getVisibleTimeByFormat = format => ({\n  showHours:\n    format.indexOf('H') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('k') > -1,\n  showMinutes: format.indexOf('m') > -1,\n  showSeconds: format.indexOf('s') > -1,\n  use12Hours:\n    format.indexOf('A') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('a') > -1,\n});\n\nexport const addLeadingZeros = count => number =>\n  padStart(String(number), count, '0');\n","/* eslint-disable max-params */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport moment from 'moment';\n\nconst currentYear = new Date().getFullYear();\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === 'ArrowDown' || key === 'ArrowUp';\n\n// TODO remove and keep `true` behavior ( PUI-4141 )\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros, leadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros\n    ? addLeadingZeros(leadingZeros)(value)\n    : String(value);\n};\n\nexport const formatDay = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('DD') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 2);\n};\nexport const formatYear = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('YYYY') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 4);\n};\nexport const formatMonth = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('MM') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 2);\n};\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\n// trigger onBlur for entire DateInput control if focus is not in day, month, year\nexport const triggerOnBlur = (blurEvent, onBlur = () => {}) => {\n  const { target: currentEl = {}, relatedTarget } = blurEvent || {};\n  const nextElement = currentEl.nextElementSibling;\n  const { nextElementSibling } = nextElement || {};\n  // relatedTarget points to the element that is currently having focus\n  if (!nextElementSibling || nextElementSibling !== relatedTarget) {\n    onBlur(blurEvent);\n  }\n};\n\nexport const focusNextInput = (currentEl) => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = (\n  { min, max },\n  number,\n  valueString = '',\n  onError,\n) => {\n  if (valueString === '0') return number;\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    onError();\n    return max;\n  }\n  if (number < min) {\n    onError();\n    return min;\n  }\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  if (stringValue.length > 1) return true;\n  return number * 10 > max;\n};\n\nexport const getDateValuesFromTime = (time, format) => {\n  if (!time) return {};\n  const month = time.format('MM');\n  const day = time.format('DD');\n  const year = time.format('YYYY');\n  return {\n    month: formatMonth(format, month),\n    day: formatDay(format, day),\n    year: formatYear(format, year),\n  };\n};\n\nexport const resetTimeValues = () => ({\n  month: '',\n  day: '',\n  year: '',\n});\n\nexport const onInputFocus = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  e.target.select();\n};\n\nexport const getNextTimeValue = (\n  value,\n  target,\n  yearMinRange,\n  yearMaxRange,\n  step = 1,\n  incrementing = true,\n) => {\n  const parsedValue = parseTimeNumberFromText(value);\n  let result = incrementing ? parsedValue + step : parsedValue - step;\n  if (target === 'year') {\n    if (result < yearMinRange) result = currentYear;\n    if (result > yearMaxRange) result = currentYear;\n  }\n  return result;\n};\n\nexport const focusNextInputIfNeeded = (\n  currentEl,\n  max,\n  number,\n  stringValue,\n  currentKey,\n) => {\n  if (\n    shouldFocusNextInput(max, number, stringValue) &&\n    !isArrowIncrementDecrement(currentKey)\n  ) {\n    focusNextInput(currentEl);\n  }\n};\n\nexport const commonInputProps = (digits = 2, onKeyDown, placeholder) => {\n  const props = {\n    pattern: '[0-9]*',\n    placeholder,\n    type: 'text',\n    onKeyDown,\n    onFocus: onInputFocus,\n  };\n  if (digits === 4) props.placeholder = 'YYYY';\n  return props;\n};\n\nexport const handleCompletedDate = (\n  time,\n  date,\n  show,\n  INTERNAL_V2_NO_MUTATION,\n) => {\n  // clone time to avoid mutation when INTERNAL_V2_NO_MUTATION is true\n  const newDate = INTERNAL_V2_NO_MUTATION\n    ? (time && moment(time)) || moment()\n    : time || moment();\n\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n\n  if (time && !year && !month && !day) return '';\n\n  newDate.value = `${year}-${month}-${day}`;\n\n  if (showMonth && month) newDate.month(parseInt(month - 1, 10));\n  if (showDay && day) newDate.date(parseInt(day, 10));\n  if (showYear && year) newDate.year(parseInt(year, 10));\n\n  return newDate;\n};\n\nexport const isTimeCompletelySet = (date, show, range) => {\n  let neededValues = [];\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n  const { yearMinRange, yearMaxRange } = range;\n\n  if (showMonth) neededValues = [...neededValues, month || null];\n  if (showDay) neededValues = [...neededValues, day || null];\n  if (showYear) neededValues = [...neededValues, year || null];\n\n  const isValidYear = year < yearMaxRange && year > yearMinRange;\n\n  return !neededValues.some((value) => !value) && isValidYear;\n};\n","import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DateInputs from './DateInputs';\n\nconst blockName = 'input-time';\n\nconst DateInputContainer = aggregatedClasses('div')(blockName);\n\nconst getVisibleTimeByFormat = (format) => ({\n  showMonth: format.indexOf('MM') > -1 || format.indexOf('M') > -1,\n  showDay: format.indexOf('DD') > -1 || format.indexOf('D') > -1,\n  showYear: format.indexOf('YYYY') > -1,\n});\n\nconst DateInputImpl = ({\n  format,\n  innerRef,\n  onBlur,\n  onChange,\n  onKeyDown,\n  onError,\n  className,\n  value,\n  disabled,\n  yearMaxRange,\n  yearMinRange,\n  onFocus,\n  // eslint-disable-next-line react/prop-types\n  INTERNAL_V2_NO_MUTATION,\n}) => {\n  const inputContainerRef = useRef();\n\n  const handleFocus = (e) => {\n    onFocus();\n    if (!e.target.type) {\n      inputContainerRef.current.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeByFormat(format));\n\n  return (\n    <DateInputContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <DateInputs\n        disabled={disabled}\n        format={format}\n        INTERNAL_V2_NO_MUTATION={INTERNAL_V2_NO_MUTATION}\n        innerRef={inputContainerRef}\n        onBlur={onBlur}\n        onChange={onChange}\n        onCustomKeyDown={onKeyDown}\n        onError={onError}\n        time={value}\n        yearMaxRange={yearMaxRange}\n        yearMinRange={yearMinRange}\n        {...visibleInputs}\n      />\n    </DateInputContainer>\n  );\n};\n\nDateInputImpl.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.bool,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  className: PropTypes.string,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  onFocus: PropTypes.func,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  value: PropTypes.instanceOf(Moment),\n};\n\nexport default DateInputImpl;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.5 13a.503.503 0 0 1-.313-.109l-5-4a.5013.5013 0 0 1-.078-.703c.173-.214.488-.25.703-.078L9.5 11.86l4.688-3.75c.218-.172.531-.136.703.078.172.216.138.53-.078.703l-5 4A.501.501 0 0 1 9.5 13z',\n  ],\n  height: 20,\n  width: 20,\n});\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable indent */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport {\n  formatMonth,\n  formatDay,\n  formatYear,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getDateValuesFromTime,\n  getNextTimeValue,\n  focusNextInputIfNeeded,\n  commonInputProps,\n  handleCompletedDate,\n  triggerOnBlur,\n  isTimeCompletelySet,\n} from './utils';\n\nconst blockName = 'input-date-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst MonthInput = aggregatedClasses('input')(blockName, 'input input-month');\nconst DayInput = aggregatedClasses('input')(blockName, 'input input-day');\nconst YearInput = aggregatedClasses('input')(blockName, 'input input-year');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst DateDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst DateInputs = ({\n  innerRef,\n  onBlur,\n  onChange,\n  onCustomKeyDown,\n  onError,\n  format = '',\n  showMonth = true,\n  showDay = true,\n  showYear = true,\n  step = 1,\n  yearMaxRange,\n  disabled,\n  yearMinRange,\n  time,\n  // TODO remove and keep `true` behavior ( PUI-4141 )\n  INTERNAL_V2_NO_MUTATION, // eslint-disable-line react/prop-types\n}) => {\n  const [currentKey, setCurrentKey] = useState('ArrowUp');\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n  const [year, setYear] = useState('');\n  const prevTime = usePrevious(time);\n  const prevFormat = usePrevious(format);\n\n  let digits = 2;\n  let placeholder = '';\n\n  useEffect(() => {\n    if (time) {\n      const dateValues = getDateValuesFromTime(time, format);\n      setMonth(dateValues.month);\n      setDay(dateValues.day);\n      setYear(dateValues.year);\n    }\n  }, [time]);\n\n  useEffect(() => {\n    if (!time && prevTime) {\n      setMonth('');\n      setDay('');\n      setYear('');\n      onChange('');\n    }\n    if (\n      time &&\n      prevTime &&\n      time.format(format) !== prevTime.format(prevFormat)\n    ) {\n      const dateValues = getDateValuesFromTime(time, format);\n\n      setMonth(dateValues.month);\n      setDay(dateValues.day);\n      setYear(dateValues.year);\n    }\n  }, [time, prevTime, format]);\n\n  const isCompletedDate = () =>\n    isTimeCompletelySet(\n      { year, month, day },\n      { showYear, showMonth, showDay },\n      { yearMinRange, yearMaxRange },\n    );\n\n  useEffect(() => {\n    if (INTERNAL_V2_NO_MUTATION) {\n      const dateValues = getDateValuesFromTime(time, format);\n\n      if (dateValues.day !== day && isCompletedDate()) {\n        onChange(\n          handleCompletedDate(\n            time,\n            { year, month, day },\n            { showYear, showMonth, showDay },\n            INTERNAL_V2_NO_MUTATION,\n          ),\n        );\n      } else if (dateValues.month !== month && isCompletedDate()) {\n        onChange(\n          handleCompletedDate(\n            time,\n            { year, month, day },\n            { showYear, showMonth, showDay },\n            INTERNAL_V2_NO_MUTATION,\n          ),\n        );\n      } else if (dateValues.year !== year && isCompletedDate()) {\n        onChange(\n          handleCompletedDate(\n            time,\n            { year, month, day },\n            { showYear, showMonth, showDay },\n            INTERNAL_V2_NO_MUTATION,\n          ),\n        );\n      }\n    }\n  }, [day, month, year]);\n\n  const triggerChange = () =>\n    handleCompletedDate(\n      time,\n      { year, month, day },\n      { showYear, showMonth, showDay },\n      INTERNAL_V2_NO_MUTATION,\n    );\n\n  const handleYearChange = (e) => {\n    const { value } = e.target;\n    const yearValue = parseTimeNumberFromText(value);\n    const yearRange = { min: 1, max: 9999 };\n    const nextYear = getValidTimeNumber(yearRange, yearValue, value, onError);\n\n    setYear(formatYear(format, nextYear));\n    if (isCompletedDate() && !INTERNAL_V2_NO_MUTATION) {\n      onChange(triggerChange());\n    }\n    focusNextInputIfNeeded(\n      e.target,\n      yearRange.max,\n      nextYear,\n      value,\n      currentKey,\n    );\n  };\n  const handleMonthChange = (e) => {\n    const { value } = e.target;\n    const monthValue = parseTimeNumberFromText(value);\n    const monthRange = { min: 1, max: 12 };\n    const nextMonth = getValidTimeNumber(\n      monthRange,\n      monthValue,\n      value,\n      onError,\n    );\n\n    setMonth(formatMonth(format, nextMonth));\n    if (isCompletedDate() && !INTERNAL_V2_NO_MUTATION) {\n      onChange(triggerChange());\n    }\n    focusNextInputIfNeeded(\n      e.target,\n      monthRange.max,\n      nextMonth,\n      value,\n      currentKey,\n    );\n  };\n\n  const handleDayChange = (e) => {\n    const { value } = e.target;\n    const dayValue = parseTimeNumberFromText(value);\n    const dayRange = { min: 1, max: 31 };\n    const nextDay = getValidTimeNumber(dayRange, dayValue, value, onError);\n\n    setDay(formatDay(format, nextDay));\n    if (isCompletedDate() && !INTERNAL_V2_NO_MUTATION) {\n      onChange(triggerChange());\n    }\n    if (value !== day)\n      focusNextInputIfNeeded(\n        e.target,\n        dayRange.max,\n        nextDay,\n        value,\n        currentKey,\n      );\n  };\n\n  // eslint-disable-next-line complexity\n  const onKeyDown = (event, shouldIncrementDecrement = true) => {\n    const { value, name } = event.target;\n    const change = {\n      day: (v) => handleDayChange({ target: { value: v } }),\n      month: (v) => handleMonthChange({ target: { value: v } }),\n      year: (v) => handleYearChange({ target: { value: v } }),\n    };\n    switch (event.key) {\n      case 'ArrowLeft': {\n        event.preventDefault();\n        focusPreviousInput(event.target);\n        break;\n      }\n      case 'ArrowUp': {\n        if (shouldIncrementDecrement) {\n          event.preventDefault();\n          setCurrentKey(event.key);\n          const incrementedValue = getNextTimeValue(\n            value,\n            name,\n            yearMinRange,\n            yearMaxRange,\n            step,\n            true,\n          );\n          if (INTERNAL_V2_NO_MUTATION) {\n            change[name](incrementedValue);\n          } else {\n            setNativeValue(event.target, incrementedValue);\n          }\n        }\n        break;\n      }\n      case 'ArrowDown': {\n        if (shouldIncrementDecrement) {\n          event.preventDefault();\n          setCurrentKey(event.key);\n          const decrementedValue = getNextTimeValue(\n            value,\n            name,\n            yearMinRange,\n            yearMaxRange,\n            step,\n            false,\n          );\n          if (INTERNAL_V2_NO_MUTATION) {\n            change[name](decrementedValue);\n          } else {\n            setNativeValue(event.target, decrementedValue);\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        event.preventDefault();\n        focusNextInput(event.target);\n        break;\n      }\n      case 'Backspace': {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (INTERNAL_V2_NO_MUTATION) {\n            change[name]('');\n          } else {\n            setNativeValue(event.target, '');\n          }\n        }\n        break;\n      }\n      case 'Enter': {\n        if (onCustomKeyDown && isCompletedDate())\n          onCustomKeyDown(event, triggerChange());\n        setCurrentKey(null);\n        break;\n      }\n      default:\n        if (onCustomKeyDown) onCustomKeyDown(event);\n        setCurrentKey(null);\n    }\n  };\n\n  const renderMonthInput = () => {\n    if (!showMonth) return null;\n    placeholder = 'MM';\n    const onMonthInputBlur = (e) => {\n      handleMonthChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <MonthInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"month-input\"\n        data-testid=\"month\"\n        disabled={disabled}\n        name=\"month\"\n        onBlur={onMonthInputBlur}\n        onChange={handleMonthChange}\n        value={month}\n      />\n    );\n  };\n  const renderDayInput = () => {\n    if (!showDay) return null;\n    placeholder = 'DD';\n    const onDayInputBlur = (e) => {\n      handleDayChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DayInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"day-input\"\n        data-testid=\"day\"\n        disabled={disabled}\n        name=\"day\"\n        onBlur={onDayInputBlur}\n        onChange={handleDayChange}\n        value={day}\n      />\n    );\n  };\n  const renderYearInput = () => {\n    if (!showYear) return null;\n    placeholder = 'YY';\n    digits = 4;\n    const onYearInputBlur = (e) => {\n      handleYearChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <YearInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"seconds-input\"\n        data-testid=\"year\"\n        disabled={disabled}\n        name=\"year\"\n        onBlur={onYearInputBlur}\n        onChange={handleYearChange}\n        value={year}\n      />\n    );\n  };\n\n  const renderDateInputs = () => {\n    const inputs = [renderMonthInput(), renderDayInput(), renderYearInput()];\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <DateDivider\n                  key={index}\n                  content=\" / \"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderDateInputs()}</InputTimesGroup>\n  );\n};\n\nDateInputs.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.bool,\n  onChange: PropTypes.func,\n  onCustomKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  time: PropTypes.instanceOf(Moment),\n};\n\nexport default DateInputs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../utils/prop-types';\n\nexport const Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  tabIndex = 0,\n  ...rest\n}) => (\n  <DSButton\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n    tabIndex={tabIndex}\n  />\n);\n\nexport const PickerPropsTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.number,\n};\n\nPicker.propTypes = PickerPropsTypes;\nexport default Picker;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker, {\n  PickerPropsTypes,\n} from './DatePickerPicker/DatePickerPicker';\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n  pickerProps,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            {...pickerProps}\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n  pickerProps: PickerPropsTypes,\n};\n\nexport default DatePickerDropdown;\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nDSInputGroup.propTypes = {\n  containerProps: PropTypes.shape({}),\n  innerRef: PropTypes.func,\n  className: PropTypes.string,\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element,\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element,\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element,\n};\n\nexport default DSInputGroup;\n","export default {\n  placeholder: 'Select date and time',\n  className: '',\n  id: '',\n};\n","import moment from 'moment';\n\nexport const updateDateAndTime = (date, time) => {\n  const splittedDate = moment();\n  splittedDate.month(date.get('month'));\n  splittedDate.year(date.get('year'));\n  splittedDate.date(date.get('date'));\n  splittedDate.hour(time.get('hour'));\n  splittedDate.minute(time.get('minute'));\n  splittedDate.second(time.get('second'));\n\n  return splittedDate;\n};\n","export const AM = 'am';\nexport const PM = 'pm';\nexport const ARROW_UP = 'ArrowUp';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const BACKSPACE = 'Backspace';\nexport const ESCAPE = 'Escape';\nexport const HOME = 'Home';\nexport const SHIFT = 'Shift';\nexport const END = 'End';\nexport const HOUR_RANGE_12 = { min: 0, max: 12 };\nexport const HOUR_RANGE_24 = { min: 0, max: 24 };\nexport const GENERAL_TIME_RANGE = { min: 0, max: 59 };\nexport const PLACEHOLDER_TIME = {\n  hour: 'hour',\n  minutes: 'minutes',\n  seconds: 'seconds',\n  meridiem: 'meridiem',\n};\n","export const validateIndex = (index, options) => {\n  if (index < 0) return 0;\n  if (index >= options.length) return options.length - 1;\n  return index;\n};\n\nexport const getOptionIndex = (\n  options,\n  selectedOption,\n  valueProperty = 'value',\n) => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nexport const isAM = time => time && time.hour() < 12;\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport { isAM } from '../../TimePicker/utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  SHIFT,\n  PLACEHOLDER_TIME,\n} from '../../utils/constants';\n\nexport const isArrowIncrementDecrement = key =>\n  key === ARROW_DOWN || key === ARROW_UP || key === SHIFT;\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nexport const placeholderFormat = (position, format, use12Hours) => {\n  if (position === PLACEHOLDER_TIME.hour) {\n    return _placeholderHour(format, use12Hours);\n  }\n  if (position === PLACEHOLDER_TIME.minutes) {\n    return format.indexOf('mm') > -1 ? 'mm' : 'm';\n  }\n  if (position === PLACEHOLDER_TIME.seconds) {\n    return format.indexOf('ss') > -1 ? 'ss' : 's';\n  }\n  if (position === PLACEHOLDER_TIME.meridiem) {\n    return format.indexOf('A') > -1 ? 'A' : 'a';\n  }\n};\n\nconst _placeholderHour = (format, use12Hours) => {\n  if (use12Hours) {\n    return format.indexOf('hh') > -1 ? 'hh' : 'h';\n  }\n  return format.indexOf('HH') > -1 ? 'HH' : 'H';\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros ? addLeadingZeros(2)(value) : String(value);\n};\n\nexport const formatMinutes = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('mm') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatSeconds = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('ss') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatHour = (format, value) => {\n  const shouldAddLeadingZeros =\n    format.indexOf('HH') > -1 || format.indexOf('hh') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\n\nexport const formatMeridiem = (format, value) =>\n  format.indexOf('A') > -1 ? value.toUpperCase() : value.toLowerCase();\n\nexport const parseTimeNumberFromText = stringValue => {\n  const parsedInt = parseInt(stringValue);\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\nexport const focusNextInput = currentEl => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = currentEl => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = ({ min, max }, number, typed) => {\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    if (isNaN(typed)) return parseInt(typed);\n    return max;\n  }\n  if (number < min) return min;\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  const safeString = String(stringValue);\n  const cleanString = safeString.startsWith('00')\n    ? safeString.slice(1)\n    : safeString;\n  return number * 10 > max || String(max).length === cleanString.length;\n};\n\nexport const getTimeValuesFromTime = (time, format, use12Hours) => {\n  if (!time) return {};\n  const hours = use12Hours ? time.hour() % 12 || 12 : time.hour();\n  const minutes = time.minutes();\n  const seconds = time.seconds();\n  const meridiem = !isAM(time) ? PM : AM;\n\n  return {\n    hours: formatHour(format, hours),\n    minutes: formatMinutes(format, minutes),\n    seconds: formatSeconds(format, seconds),\n    meridiem,\n  };\n};\n\nexport const resetTimeValues = () => ({\n  hours: '',\n  minutes: '',\n  seconds: '',\n  meridiem: AM,\n});\n\nexport const commonInputProps = (onKeyDown, onInputFocus, onClick) => ({\n  pattern: '[0-9]*',\n  type: 'text',\n  onKeyDown,\n  onClick,\n  onFocus: onInputFocus,\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useEffect, useState } from 'react';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  formatHour,\n  formatMinutes,\n  formatSeconds,\n  formatMeridiem,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getTimeValuesFromTime,\n  isArrowIncrementDecrement,\n  shouldFocusNextInput,\n  placeholderFormat,\n} from './utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  BACKSPACE,\n  ESCAPE,\n  HOME,\n  HOUR_RANGE_12,\n  HOUR_RANGE_24,\n  GENERAL_TIME_RANGE,\n  END,\n  PLACEHOLDER_TIME,\n  SHIFT,\n} from '../../utils/constants';\n\nconst blockName = 'input-times-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst TimeInput = aggregatedClasses('input')(blockName, 'input');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst TimeDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst TimeInputs = ({\n  time,\n  format,\n  use12Hours,\n  step = 1,\n  showHours,\n  showMinutes,\n  showSeconds,\n  onChange,\n  disabled,\n  innerRef,\n  'arial-label': ariaLabel,\n}) => {\n  const [meridiem, setMeridiem] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [seconds, setSeconds] = useState('');\n  const [currentKey, setCurrentKey] = useState('');\n  const [lastTypedNumber, setLastTypedNumber] = useState(null);\n  const [timeSelected, setTimeSelected] = useState(time);\n  const prevTime = usePrevious(time);\n  const inputRefs = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null,\n  };\n\n  useEffect(() => {\n    if (time) {\n      const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, [time, format, use12Hours]);\n\n  useEffect(() => {\n    const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n    if (!time && prevTime) {\n      setMeridiem('');\n      setHours('');\n      setMinutes('');\n      setSeconds('');\n    }\n\n    if (time && prevTime) {\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, [time, prevTime, format, use12Hours]);\n\n  const focusNextInputIfNeeded = (currentEl, max, number) => {\n    if (\n      shouldFocusNextInput(max, number, currentEl.value) &&\n      !isArrowIncrementDecrement(currentKey) &&\n      !hasInputValue\n    ) {\n      focusNextInput(currentEl);\n    }\n  };\n\n  const getNextTimeValue = (value, incrementing = true) => {\n    const parsedValue = parseTimeNumberFromText(value);\n    return incrementing ? parsedValue + step : parsedValue - step;\n  };\n\n  const onInputFocus = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.select();\n  };\n\n  const onClick = (e) => {\n    if (e.target.value) {\n      setHasInputValue(true);\n    }\n  };\n\n  // eslint-disable-next-line max-statements\n  const onKeyDown = (event, max) => {\n    const { target } = event;\n    const { value } = target;\n    setLastTypedNumber(event.key);\n    switch (event.key) {\n      case ARROW_UP: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const incrementedValue = getNextTimeValue(value);\n        setNativeValue(event.target, incrementedValue);\n        break;\n      }\n      case ARROW_DOWN: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const decrementedValue = getNextTimeValue(value, false);\n        setNativeValue(event.target, decrementedValue);\n        break;\n      }\n      case BACKSPACE: {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case ESCAPE: {\n        event.preventDefault();\n        event.target.blur();\n        break;\n      }\n      case HOME: {\n        event.preventDefault();\n        setNativeValue(event.target, String(max));\n        focusNextInput(event.target);\n        break;\n      }\n      case END: {\n        event.preventDefault();\n        setNativeValue(event.target, '00');\n        focusNextInput(event.target);\n        break;\n      }\n      case SHIFT:\n        event.preventDefault();\n        setCurrentKey(event.key);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isTimeCompletelySet = () => {\n    let neededValues = [];\n\n    if (showHours) neededValues = [...neededValues, hours || null];\n    if (showMinutes) neededValues = [...neededValues, minutes || null];\n    if (showSeconds) neededValues = [...neededValues, seconds || null];\n    if (use12Hours) neededValues = [...neededValues, meridiem || null];\n\n    return !neededValues.some((value) => !value);\n  };\n\n  // eslint-disable-next-line complexity\n  useEffect(() => {\n    const selectedTime = time || moment();\n    if (isTimeCompletelySet()) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      setTimeSelected(selectedTime);\n    }\n  }, [hours, minutes, seconds, meridiem]);\n\n  const handleSecondsChange = (e) => {\n    const { value } = e.target;\n    const secondsHandled = parseTimeNumberFromText(value);\n\n    const nextSeconds = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      secondsHandled,\n      lastTypedNumber,\n    );\n\n    setSeconds(formatSeconds(format, nextSeconds));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleMinutesChange = (e) => {\n    const { value } = e.target;\n    const minutesHandled = parseTimeNumberFromText(value);\n    const nextMinutes = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      minutesHandled,\n      lastTypedNumber,\n    );\n\n    setMinutes(formatMinutes(format, nextMinutes));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleHoursChange = (e) => {\n    const { value } = e.target;\n    const hour = parseTimeNumberFromText(value);\n    const hoursRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    const nextHour = getValidTimeNumber(hoursRange, hour, lastTypedNumber);\n    setHours(formatHour(format, nextHour));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, hoursRange.max, value);\n  };\n\n  const handleMeridiemKeyDown = (e) => {\n    if (e.key === ARROW_UP || e.key === 'a') {\n      setMeridiem(formatMeridiem(format, AM));\n    } else if (e.key === ARROW_DOWN || e.key === 'p') {\n      setMeridiem(formatMeridiem(format, PM));\n    } else if (e.key === SHIFT) {\n      setCurrentKey(e.key);\n    } else if (e.key === BACKSPACE) {\n      setMeridiem('');\n    }\n    onChange(timeSelected);\n  };\n\n  const handleMeridiemBlur = (e) => {\n    const { value } = e.target;\n    if (value !== AM && value !== PM) {\n      setMeridiem('');\n    }\n  };\n\n  const renderSecondsInput = () => {\n    if (!showSeconds) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"seconds-input\"\n        data-testid=\"ds-time-input__seconds\"\n        aria-label={ariaLabel || 'Seconds Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.seconds = node)}\n        onChange={handleSecondsChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.seconds, format)}\n        value={seconds}\n      />\n    );\n  };\n\n  const renderMinutesInput = () => {\n    if (!showMinutes) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"minutes-input\"\n        data-testid=\"ds-time-input__minutes\"\n        aria-label={ariaLabel || 'Minutes Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.minutes = node)}\n        onChange={handleMinutesChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.minutes, format)}\n        value={minutes}\n      />\n    );\n  };\n\n  const renderHoursInput = () => {\n    if (!showHours) return null;\n    const hourFormatRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, hourFormatRange.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"hour-input\"\n        data-testid=\"ds-time-input__hours\"\n        aria-label={ariaLabel || 'Hours Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.hours = node)}\n        onChange={handleHoursChange}\n        placeholder={placeholderFormat(\n          PLACEHOLDER_TIME.hour,\n          format,\n          use12Hours,\n        )}\n        value={hours}\n      />\n    );\n  };\n\n  const renderMeridiemInput = () => {\n    if (!use12Hours) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps}\n        key=\"meridiem-input\"\n        data-testid=\"ds-time-input__ampm\"\n        aria-label={ariaLabel || 'Meridiem Input'}\n        disabled={disabled}\n        onBlur={handleMeridiemBlur}\n        onKeyDown={handleMeridiemKeyDown}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.meridiem, format)}\n        value={meridiem}\n      />\n    );\n  };\n\n  const renderTimeInputs = () => {\n    const inputs = [\n      renderHoursInput(),\n      renderMinutesInput(),\n      renderSecondsInput(),\n    ];\n    /* eslint-disable indent */\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <TimeDivider\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={index}\n                  content=\":\"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n    /* eslint-enable indent */\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n      renderMeridiemInput(),\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderTimeInputs()}</InputTimesGroup>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useRef, useMemo } from 'react';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport memoizeOne from 'memoize-one';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport TimeInputs from './TimeInputs';\n\nconst blockName = 'input-time';\n\nconst InputTimeContainer = aggregatedClasses('div')(blockName);\n\nconst TimeInputImpl = ({\n  format,\n  innerRef,\n  onChange,\n  className,\n  value,\n  disabled,\n  'arial-label': ariaLabel,\n}) => {\n  const getVisibleTimeInputs = memoizeOne(formatValue =>\n    getVisibleTimeByFormat(formatValue),\n  );\n  let inputsContainer = useRef();\n\n  const handleFocus = e => {\n    if (!e.target.type) {\n      inputsContainer.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeInputs(format));\n\n  return (\n    <InputTimeContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <TimeInputs\n        aria-label={ariaLabel}\n        disabled={disabled}\n        format={format}\n        innerRef={node => (inputsContainer = node)}\n        onChange={onChange}\n        time={value}\n        {...visibleInputs}\n      />\n    </InputTimeContainer>\n  );\n};\n\nexport default TimeInputImpl;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.499 6.969a.503.503 0 0 0-.313.109l-5 4a.5013.5013 0 0 0-.078.703c.173.214.488.25.703.078l4.688-3.75 4.688 3.75c.218.172.531.136.703-.078a.5004.5004 0 0 0-.078-.703l-5-4a.501.501 0 0 0-.313-.109z',\n  ],\n  height: 20,\n  width: 20,\n});\n","export function MoveElementOnScroll(\n  element,\n  {\n    container,\n    min = 0,\n    max = element.offsetHeight,\n    speed = 1,\n    smooth = 2,\n    onUpdate = () => null,\n    onEndScroll = () => null,\n  },\n) {\n  let moving = false;\n  let pos = min;\n  let lastPos = pos;\n\n  // todo: move this to utils if we finally need it\n  const requestFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(func) {\n        window.setTimeout(func, 1000 / 50);\n      }\n    );\n  })();\n\n  function update() {\n    moving = true;\n    const delta = (pos - lastPos) / smooth;\n    lastPos += delta;\n\n    if (Math.abs(delta) > 0.7) {\n      requestFrame(() => {\n        onUpdate(lastPos, delta);\n        update();\n      });\n    } else {\n      onEndScroll(pos);\n      moving = false;\n    }\n  }\n\n  function scrolling(e) {\n    e.preventDefault(); // disable default scrolling\n    let delta = e.delta || e.wheelDelta;\n    if (delta === undefined) {\n      // for firefox\n      delta = -e.detail;\n      delta *= 10 * speed;\n    }\n\n    pos += -delta * speed;\n    pos = Math.max(min, Math.min(pos, max)); // limit scrolling\n    if (!moving) {\n      update();\n    }\n  }\n\n  container.addEventListener('mousewheel', scrolling, false);\n  container.addEventListener('DOMMouseScroll', scrolling, false);\n\n  return {\n    unsubscribe: () => {\n      container.removeEventListener('mousewheel', scrolling);\n      container.removeEventListener('DOMMouseScroll', scrolling);\n    },\n    updatePosition: newPos => {\n      pos = -newPos;\n      lastPos = -pos;\n    },\n  };\n}\n\nexport default MoveElementOnScroll;\n","/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport { findIndex } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport memoizeOne from 'memoize-one';\nimport ChevronSmallUp from '@elliemae/ds-icons/ChevronSmallUp';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport ChevronSmallDown from '@elliemae/ds-icons/ChevronSmallDown';\nimport { MoveElementOnScroll } from './moveElementOnScroll';\nimport { validateIndex } from './utils';\n\nconst blockName = 'time-picker-panel';\n\nconst Container = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ scrolling }) => ({ scrolling }),\n);\nconst Wrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst PickerItemListContainer = aggregatedClasses('div')(\n  blockName,\n  'item-list-container',\n);\nconst PickerItemList = aggregatedClasses('div')(blockName, 'item-list');\nconst PickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst PickerItemContainer = aggregatedClasses('div')(\n  blockName,\n  'item',\n  ({ selected }) => ({ selected }),\n);\nconst PickerSelectedOptionSelected = aggregatedClasses('div')(\n  blockName,\n  'selected-container',\n);\nconst SelectedCircle = aggregatedClasses('div')(blockName, 'selected-circle');\nconst ArrowButtonContainer = aggregatedClasses('div')(\n  blockName,\n  'arrow-container',\n);\n\nconst getOptionIndex = (options, selectedOption, valueProperty = 'value') => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nconst arrowProps = {\n  buttonType: 'text',\n  fluidHeight: true,\n  fluidWidth: true,\n  size: 's',\n};\n\nexport default class PickerPanel extends Component {\n  computeContainerTranslation = memoizeOne(index => {\n    const { options, valueProperty } = this.props;\n    const { selectedOption, scrolling } = this.state;\n\n    const selectedOptionIndex =\n      index || getOptionIndex(options, selectedOption, valueProperty);\n    const listYPosition =\n      this.minYListPosition - selectedOptionIndex * this.optionHeight;\n\n    if (this.scrollHandler && !scrolling)\n      this.scrollHandler.updatePosition(listYPosition);\n\n    return listYPosition;\n  });\n\n  static defaultProps = {\n    valueProperty: 'value',\n    labelProperty: 'label',\n    numberItemsOnScreen: 5, // this number should be impair\n    options: [],\n    arrowStep: 5,\n  };\n\n  constructor(props) {\n    super(props);\n    this.pickerListContainerRef = React.createRef();\n    this.pickerListRef = React.createRef();\n    this.pickerItemRef = React.createRef();\n    this.selectedOptionRef = React.createRef();\n\n    this.state = {\n      selectedOption: props.selected,\n      activeIndex: 0,\n      // eslint-disable-next-line react/no-unused-state\n      prevProps: {},\n    };\n  }\n\n  componentDidMount() {\n    this.computeSizes();\n    const pickerListContainerEl = this.pickerListContainerRef.current;\n    const pickerListEl = this.pickerListRef.current;\n\n    this.scrollHandler = new MoveElementOnScroll(pickerListEl, {\n      container: pickerListContainerEl,\n      min: -this.minYListPosition,\n      max: this.maxYListPosition,\n      onUpdate: (pos, delta) => {\n        const { options } = this.props;\n        const index =\n          options.length -\n          -Math.floor((pos - this.maxYListPosition) / this.optionHeight) +\n          (delta > 0 ? 1 : -1);\n        this.moveTo(index, true);\n      },\n      onEndScroll: () => {\n        this.setState({ scrolling: false });\n      },\n    });\n    this.computeContainerTranslation();\n  }\n\n  componentWillUnmount() {\n    this.scrollHandler.unsubscribe();\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevProps }) {\n    const { selected, valueProperty, options } = nextProps;\n    if (selected !== prevProps.selected) {\n      return {\n        selectedOption: selected,\n        activeIndex: getOptionIndex(options, selected, valueProperty),\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  getOptionValue(option) {\n    const { valueProperty } = this.props;\n    return option[valueProperty];\n  }\n\n  getOptionLabel(option) {\n    const { labelProperty } = this.props;\n    return option[labelProperty];\n  }\n\n  moveTo(index, scrolling) {\n    const { options } = this.props;\n    const { selectedOption } = this.state;\n    const validIndex = validateIndex(index, options);\n    const option = options[validIndex];\n    const optionValue = this.getOptionValue(option);\n    if (selectedOption !== optionValue) {\n      this.handleOptionSelect(optionValue, validIndex, scrolling);\n    }\n  }\n\n  computeSizes() {\n    const { options, numberItemsOnScreen } = this.props;\n    const { offsetHeight: optionHeight } = this.pickerItemRef.current;\n\n    this.optionHeight = optionHeight;\n    this.listHeight = this.optionHeight * numberItemsOnScreen;\n\n    this.minYListPosition = this.listHeight / 2 - this.optionHeight / 2;\n    this.maxYListPosition =\n      this.optionHeight * (options.length - Math.ceil(numberItemsOnScreen / 2));\n  }\n\n  handleOptionSelect(optionValue, index, scrolling) {\n    const { onChange } = this.props;\n    this.setState(\n      state => ({\n        ...state,\n        scrolling,\n        selectedOption: optionValue,\n        activeIndex: index,\n      }),\n      () => {\n        onChange(optionValue, index);\n      },\n    );\n  }\n\n  // TODO: this needs a refactor from de FocusGroup\n  // eslint-disable-next-line max-statements\n  handleKeyDown(e) {\n    const { activeIndex } = this.state;\n    const { options } = this.props;\n    const [firstColumn, ...restColumns] = document.getElementsByClassName(\n      'em-ds-time-picker-panel',\n    );\n    const [lastColumn] = restColumns.slice(-1);\n    const [prev] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const focusedElement = document.activeElement;\n\n    switch (e.key) {\n      case 'Home':\n        this.moveTo(0);\n        break;\n      case 'End':\n        this.moveTo(options.length - 1);\n        break;\n      case 'ArrowUp':\n        this.moveTo(activeIndex - 1);\n        break;\n      case 'ArrowDown':\n        this.moveTo(activeIndex + 1);\n        break;\n      case 'Tab': {\n        e.preventDefault();\n        // If it is DateTimePicker, move focus to prev arrow element\n        if (prev && focusedElement === lastColumn) {\n          prev.focus();\n        } else if (focusedElement === lastColumn) {\n          firstColumn.focus();\n        } else {\n          const position = findIndex(restColumns, focusedElement);\n          restColumns[position + 1].focus();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  handleStepMoveUp() {\n    const { activeIndex } = this.state;\n    const { arrowStep } = this.props;\n    const supposedPos = activeIndex - arrowStep;\n    const nextPos = supposedPos >= 0 ? supposedPos : activeIndex - 1;\n    this.moveTo(nextPos);\n  }\n\n  handleStepMoveDown() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex + arrowStep;\n    const nextPos =\n      supposedPos <= options.length ? supposedPos : activeIndex + 1;\n    this.moveTo(nextPos);\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return <PickerHeader>{header}</PickerHeader>;\n  };\n\n  render() {\n    const { options, hasHeader } = this.props;\n    const { selectedOption, activeIndex, scrolling } = this.state;\n\n    const listYPosition = this.computeContainerTranslation(activeIndex);\n\n    return (\n      <Wrapper>\n        {hasHeader && this.renderHeader()}\n        <Container\n          classProps={{ scrolling }}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n        >\n          <PickerSelectedOptionSelected innerRef={this.selectedOptionRef}>\n            <SelectedCircle />\n          </PickerSelectedOptionSelected>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Up\"\n              disabled={activeIndex <= 0}\n              icon={<ChevronSmallUp />}\n              onClick={this.handleStepMoveUp}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n          <PickerItemListContainer\n            innerRef={this.pickerListContainerRef}\n            style={{\n              height: this.listHeight,\n            }}\n          >\n            <PickerItemList\n              innerRef={this.pickerListRef}\n              style={{\n                transform: `translateY(${listYPosition}px)`,\n              }}\n            >\n              {options.map((option, index) => {\n                const value = this.getOptionValue(option);\n                const label = this.getOptionLabel(option);\n                return (\n                  <PickerItemContainer\n                    key={value}\n                    classProps={{\n                      selected: selectedOption\n                        ? value === selectedOption\n                        : index === 0,\n                    }}\n                    innerRef={this.pickerItemRef}\n                    onClick={() => this.handleOptionSelect(value, index)}\n                  >\n                    {label}\n                  </PickerItemContainer>\n                );\n              })}\n            </PickerItemList>\n          </PickerItemListContainer>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Down\"\n              disabled={activeIndex >= options.length}\n              icon={<ChevronSmallDown />}\n              onClick={this.handleStepMoveDown}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from '@elliemae/ds-utilities/utils';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { isAM } from './utils';\nimport PickerPanel from './PickerPanel';\n\nconst blockName = 'time-picker-menu';\n\nconst TimePickerContainer = aggregatedClasses('div')(blockName);\nconst TimePickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst TimePickerPanelContainer = aggregatedClasses('div')(\n  blockName,\n  'panel-container',\n);\n\nconst generateOption = (format) => (option) => ({\n  value: option,\n  label: typeof format === 'function' ? format(option) : option,\n});\n\nexport default class TimePickerMenu extends Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    time: moment(),\n    hasHeader: false,\n    use12Hours: true,\n    showSeconds: true,\n    showMinutes: true,\n    showHours: true,\n    onTimeChange: () => null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: props.time || moment(),\n    };\n  }\n\n  componentDidMount() {\n    const { time } = this.state;\n    this.setState({ time });\n  }\n\n  handleMinuteChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.minute(value));\n  }\n\n  handleHoursChange(value) {\n    const { time } = this.state;\n    const { use12Hours } = this.props;\n    let nextHour = value;\n    if (use12Hours) {\n      if (!isAM(time)) {\n        nextHour = (value % 12) + 12;\n      }\n    }\n    this.updateTime(time.hour(nextHour));\n  }\n\n  handleSecondsChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.second(value));\n  }\n\n  handleAMPMChange(value) {\n    const { time } = this.state;\n    const hour = time.hour();\n    const nextHour =\n      value.toLowerCase() === 'am' ? hour % 12 : (hour % 12) + 12;\n    this.updateTime(time.hour(nextHour));\n  }\n\n  updateTime(time) {\n    const { onTimeChange } = this.props;\n    onTimeChange(time);\n    this.setState({ time });\n  }\n\n  renderMinutesPanel() {\n    const { time } = this.state;\n    const { showMinutes, format, hasHeader } = this.props;\n    if (!showMinutes) return null;\n    const withLeadingZeros = format.indexOf('mm') > -1;\n    const rangeMinutes = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"M\"\n        onChange={this.handleMinuteChange}\n        options={rangeMinutes}\n        selected={time.minute()}\n      />\n    );\n  }\n\n  renderSecondsPanel() {\n    const { time } = this.state;\n    const { showSeconds, format, hasHeader } = this.props;\n    if (!showSeconds) return null;\n    const withLeadingZeros = format.indexOf('ss') > -1;\n    const rangeSeconds = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"S\"\n        onChange={this.handleSecondsChange}\n        options={rangeSeconds}\n        selected={time.second()}\n      />\n    );\n  }\n\n  // eslint-disable-next-line max-lines\n  renderHoursPanel() {\n    const { time } = this.state;\n    const { showHours, use12Hours, format, hasHeader } = this.props;\n    if (!showHours) return null;\n\n    const selectedHour = use12Hours ? time.hour() % 12 || 12 : time.hour();\n\n    const withLeadingZeros = format.indexOf('hh') > -1;\n    const rangeHours = use12Hours ? range(1, 13) : range(24);\n    const hoursOptions = rangeHours.map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"H\"\n        onChange={this.handleHoursChange}\n        options={hoursOptions}\n        selected={selectedHour}\n      />\n    );\n  }\n\n  renderAMPMPanel() {\n    const { time } = this.state;\n    const { use12Hours, hasHeader } = this.props;\n    if (!use12Hours) return null;\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"\"\n        onChange={this.handleAMPMChange}\n        options={[\n          { value: 'am', label: 'am' },\n          { value: 'pm', label: 'pm' },\n        ]}\n        selected={!isAM(time) ? 'pm' : 'am'}\n      />\n    );\n  }\n\n  renderHeader = () => {\n    const { time } = this.state;\n    return <TimePickerHeader>{time.format('hh:mma')}</TimePickerHeader>;\n  };\n\n  render() {\n    const { hasHeaderDisplay } = this.props;\n\n    return (\n      <TimePickerContainer>\n        {hasHeaderDisplay && this.renderHeader()}\n        <TimePickerPanelContainer>\n          {this.renderHoursPanel()}\n          {this.renderMinutesPanel()}\n          {this.renderSecondsPanel()}\n          {this.renderAMPMPanel()}\n        </TimePickerPanelContainer>\n      </TimePickerContainer>\n    );\n  }\n}\n\nTimePickerMenu.propTypes = {\n  /** Time value */\n  time: PropTypes.instanceOf(moment),\n  /** If the menu has header or not */\n  hasHeader: PropTypes.bool,\n  /** Whether to use the 12 hours format */\n  use12Hours: PropTypes.bool,\n  /** Whether show 'seconds' or not */\n  showSeconds: PropTypes.bool,\n  /** Whether show 'minutes' or not */\n  showMinutes: PropTypes.bool,\n  /** Whether show 'hours' or not */\n  showHours: PropTypes.bool,\n  /** Handler when time changes */\n  onTimeChange: PropTypes.func,\n};\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport {\n  DSDatePickerController,\n  DatePickerDropdown,\n} from '@elliemae/ds-date-picker';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport DSInput from '@elliemae/ds-basic/form/Input';\nimport { DateInputImpl } from '@elliemae/ds-basic/form/DateInput';\nimport { TimeInputImpl } from '@elliemae/ds-basic/form/TimeInput';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport { Menu } from '@elliemae/ds-basic/TimePicker';\nimport { updateDateAndTime } from '../utils';\n\nconst blockName = 'date-time-picker';\n\nconst DateTimePickerWrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst TimePicker = aggregatedClasses(Menu)(blockName, 'time-picker');\nconst TimePickerWrapper = aggregatedClasses('div')(\n  blockName,\n  'time-picker-wrapper',\n);\nconst DateInput = aggregatedClasses(DateInputImpl)(blockName, 'date-input');\n\nconst DSDateTimePickerImpl = ({\n  placeholder,\n  date,\n  datePickerProps: {\n    disabled = false,\n    numberOfMonths = 1,\n    readOnly = false,\n    enableOutsideDays = false,\n    transitionDuration = 0,\n    firstDayOfWeek = 0,\n    keepOpenOnDateSelect = true,\n    hideKeyboardShortcutsPanel = true,\n    onPrevMonthClick = () => null,\n    onNextMonthClick = () => null,\n    onClose = () => null,\n    onDateChange = () => null,\n    phrases = SingleDatePickerPhrases,\n    displayFormatDay = 'D',\n    isDayBlocked = () => false,\n    isOutsideRange = () => false,\n    isDayHighlighted = () => false,\n    zIndex = 11,\n  },\n  timePickerProps: {\n    format = 'hh:mm A',\n    onChange: onChangeTimePicker = () => null,\n  },\n}) => {\n  const [selectedDate, setSelectedDate] = useState(date);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dateTimePickerWrapperRef = useRef();\n\n  useEffect(() => {\n    if (date) setSelectedDate(moment(date));\n  }, [date]);\n\n  const visiblePanels = useMemo(() => getVisibleTimeByFormat(format), []);\n\n  const currentYear = moment().year();\n\n  const handleDatePickerChange = (dateSelected) => {\n    const splittedDate = updateDateAndTime(dateSelected, selectedDate);\n    if (!readOnly) {\n      setSelectedDate(splittedDate);\n      onDateChange(splittedDate);\n    }\n  };\n\n  const onTimeChange = (pickerTime) => {\n    const splittedDate = updateDateAndTime(selectedDate, pickerTime);\n    onChangeTimePicker(splittedDate);\n    setSelectedDate(splittedDate);\n  };\n\n  const handleInputChange = (inputValue) => {\n    setSelectedDate(inputValue);\n    onChangeTimePicker(inputValue);\n    onDateChange(inputValue);\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!dateTimePickerWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleClickEscape = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  return (\n    <DSInputGroup\n      rightAddon={\n        <DatePickerDropdown\n          disabled={disabled}\n          isOpen={isOpen}\n          zIndex={zIndex}\n          menu={\n            <DateTimePickerWrapper\n              ref={dateTimePickerWrapperRef}\n              data-testid=\"date-time-picker\"\n            >\n              <DSDatePickerController\n                date={selectedDate}\n                displayFormatDay={displayFormatDay}\n                enableOutsideDays={enableOutsideDays}\n                firstDayOfWeek={firstDayOfWeek}\n                hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                isDayBlocked={isDayBlocked}\n                isDayHighlighted={isDayHighlighted}\n                isOutsideRange={isOutsideRange}\n                keepOpenOnDateSelect={keepOpenOnDateSelect}\n                numberOfMonths={numberOfMonths}\n                onClickEscape={handleClickEscape}\n                onClose={onClose}\n                onDateChange={handleDatePickerChange}\n                onFocusChange={() => {}}\n                // eslint-disable-next-line max-lines\n                onNextMonthClick={onNextMonthClick}\n                onOutsideClick={(event) => handleOutsideClick(event)}\n                onPrevMonthClick={onPrevMonthClick}\n                phrases={phrases}\n                transitionDuration={transitionDuration}\n              />\n              <TimePickerWrapper>\n                <TimePicker\n                  disabled={disabled}\n                  format={format}\n                  hasHeader\n                  hasHeaderDisplay\n                  onTimeChange={onTimeChange}\n                  showSeconds={false}\n                  time={selectedDate}\n                  {...visiblePanels}\n                />\n              </TimePickerWrapper>\n            </DateTimePickerWrapper>\n          }\n          onClick={handleOpen}\n          readOnly={readOnly}\n        />\n      }\n    >\n      <DSInput\n        customInputType={({ onChange: handleChange, ...restInputProps }) => (\n          <>\n            <DateInput\n              disabled={disabled}\n              format=\"MM:DD:YYYY\"\n              onChange={(dateSelected) => handleChange(dateSelected)}\n              {...restInputProps}\n              yearMaxRange={currentYear + 100}\n              yearMinRange={currentYear - 100}\n            />\n            <TimeInputImpl\n              disabled={disabled}\n              format=\"hh:mm\"\n              onChange={(time) => handleChange(time)}\n              {...restInputProps}\n            />\n          </>\n        )}\n        isShowElipsisActive={false}\n        disabled={disabled}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n        value={selectedDate}\n      />\n    </DSInputGroup>\n  );\n};\n\nexport default DSDateTimePickerImpl;\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSDateTimePickerImpl from './components/DateTimePickerImpl';\nimport english from './lang/english';\n\nconst {\n  placeholder: placeholderDefault,\n  className: classNameDefault,\n  id: idDefault,\n} = english;\n\nconst DSDateTimePicker = ({\n  containerProps = {},\n  className = classNameDefault,\n  id = idDefault,\n  placeholder = placeholderDefault,\n  date = moment(),\n  datePickerProps = {\n    disabled: false,\n    numberOfMonths: 1,\n    readOnly: false,\n    enableOutsideDays: false,\n    transitionDuration: 0,\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    displayFormatDay: 'D',\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    zIndex: 11,\n  },\n  timePickerProps = {\n    format: 'hh:mm A',\n    onChange: () => null,\n  },\n}) => {\n  const { cssClassName } = convertPropToCssClassName(\n    'datetimepicker',\n    className,\n    {\n      id,\n    },\n  );\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDateTimePickerImpl\n        date={date}\n        datePickerProps={datePickerProps}\n        placeholder={placeholder}\n        timePickerProps={timePickerProps}\n      />\n    </div>\n  );\n};\n\nexport default DSDateTimePicker;\n\nDSDateTimePicker.propTypes = {\n  containerProps: PropTypes.object,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  /**\n   * Initial date, by default current date\n   */\n  date: PropTypes.instanceOf(Date, moment),\n  /**\n   * DatePicker properties\n   */\n  datePickerProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    numberOfMonths: PropTypes.number,\n    readOnly: PropTypes.bool,\n    enableOutsideDays: PropTypes.bool,\n    transitionDuration: PropTypes.number,\n    firstDayOfWeek: PropTypes.number,\n    keepOpenOnDateSelect: PropTypes.bool,\n    hideKeyboardShortcutsPanel: PropTypes.bool,\n    onPrevMonthClick: PropTypes.func,\n    onNextMonthClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onDateChange: PropTypes.func,\n    phrases: PropTypes.shape({\n      calendarLabel: PropTypes.string,\n      closeDatePicker: PropTypes.string,\n      clearDates: PropTypes.string,\n      focusStartDate: PropTypes.string,\n      jumpToPrevMonth: PropTypes.string,\n      jumpToNextMonth: PropTypes.string,\n      keyboardShortcuts: PropTypes.string,\n      showKeyboardShortcutsPanel: PropTypes.string,\n      hideKeyboardShortcutsPanel: PropTypes.string,\n      openThisPanel: PropTypes.string,\n      enterKey: PropTypes.string,\n      leftArrowRightArrow: PropTypes.string,\n      upArrowDownArrow: PropTypes.string,\n      pageUpPageDown: PropTypes.string,\n      homeEnd: PropTypes.string,\n      escape: PropTypes.string,\n      questionMark: PropTypes.string,\n      selectFocusedDate: PropTypes.string,\n      moveFocusByOneDay: PropTypes.string,\n      moveFocusByOneWeek: PropTypes.string,\n      moveFocusByOneMonth: PropTypes.string,\n      moveFocustoStartAndEndOfWeek: PropTypes.string,\n      returnFocusToInput: PropTypes.string,\n      keyboardNavigationInstructions: PropTypes.string,\n      chooseAvailableStartDate: PropTypes.func,\n      chooseAvailableEndDate: PropTypes.func,\n      dateIsUnavailable: PropTypes.func,\n      dateIsSelected: PropTypes.func,\n      /**\n       * ZIndex for the picker popup\n       */\n      zIndex: PropTypes.number,\n    }),\n    displayFormatDay: PropTypes.string,\n    isDayBlocked: PropTypes.func,\n    isOutsideRange: PropTypes.func,\n    isDayHighlighted: PropTypes.func,\n  }),\n  /**\n   * Input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * TimePicker properties\n   */\n  timePickerProps: PropTypes.shape({\n    format: PropTypes.string,\n    onChange: PropTypes.func,\n  }),\n};\n"],"sourceRoot":""}