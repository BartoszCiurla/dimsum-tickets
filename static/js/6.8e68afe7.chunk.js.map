{"version":3,"sources":["../../../../src/hooks/usePrevious.js","../../../src/timeUtils.js","../../../../../../src/form/DateInput/components/utils.js","../../../../../../src/form/DateInput/components/DateInputImpl.js","../../../src/ChevronSmallDown.js","../../../../../../src/form/DateInput/components/DateInputs.js","../../../src/DatePicker.js","../../../../../src/components/DatePickerPicker/DatePickerPicker.js","../../../../src/components/DatePickerDropdown.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../../../src/lang/english.js","../../../src/utils.js","../../../../src/utils/constants.js","../../../../src/TimePicker/utils.js","../../../../../src/form/TimeInput/utils.js","../../../../../src/form/TimeInput/TimeInputs.js","../../../../../src/form/TimeInput/TimeInputImpl.js","../../../src/ChevronSmallUp.js","../../../../src/TimePicker/moveElementOnScroll.js","../../../../src/TimePicker/PickerPanel.js","../../../../src/TimePicker/TimePickerMenu.js","../../../../src/components/DateTimePickerImpl.js","../../../src/DSDateTimePicker.js"],"names":["value","ref","useRef","useEffect","getVisibleTimeByFormat","format","showHours","showMinutes","showSeconds","use12Hours","addLeadingZeros","count","number","padStart","String","currentYear","Date","setNativeValue","element","Object","valueSetter","prototype","prototypeValueSetter","Event","bubbles","formatTimeNumber","shouldAddLeadingZeros","leadingZeros","formatDay","formatYear","formatMonth","parseTimeNumberFromText","stringValue","parsedInt","parseInt","isNaN","triggerOnBlur","blurEvent","onBlur","currentEl","relatedTarget","nextElement","nextElementSibling","focusNextInput","focusPreviousInput","previousElement","getValidTimeNumber","min","max","valueString","onError","getDateValuesFromTime","time","month","day","year","onInputFocus","e","getNextTimeValue","step","incrementing","parsedValue","result","target","focusNextInputIfNeeded","key","shouldFocusNextInput","commonInputProps","digits","onKeyDown","placeholder","props","pattern","type","onFocus","handleCompletedDate","date","show","newDate","moment","showYear","showMonth","showDay","isTimeCompletelySet","range","neededValues","yearMinRange","yearMaxRange","isValidYear","DateInputContainer","aggregatedClasses","innerRef","onChange","className","disabled","inputContainerRef","visibleInputs","useMemo","onClick","onCustomKeyDown","createIcon","paths","height","width","blockName","InputTimesGroup","MonthInput","DayInput","YearInput","Divider","DateDivider","content","DateInputs","useState","currentKey","setCurrentKey","setMonth","setDay","setYear","prevTime","usePrevious","prevFormat","dateValues","isCompletedDate","triggerChange","event","shouldIncrementDecrement","name","incrementedValue","decrementedValue","handleYearChange","yearValue","yearRange","nextYear","handleMonthChange","monthValue","monthRange","nextMonth","handleDayChange","dayValue","dayRange","nextDay","renderMonthInput","autocomplete","data-testid","renderDayInput","renderYearInput","input","acc","index","PropTypes","current","any","Picker","icon","size","DSIconSizes","buttonActionType","readOnly","rest","aria-label","buttonType","color","DSIconColors","bool","classNameElement","convertPropToCssClassName","noop","DatePickerDropdown","isOpen","menu","zIndex","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","Container","InputAddon","AddonWrapper","this","leftAddon","rightAddon","inputComponent","containerProps","childType","Component","DSInputGroup","style","InputComponents","children","id","updateDateAndTime","splittedDate","AM","HOUR_RANGE_12","HOUR_RANGE_24","GENERAL_TIME_RANGE","PLACEHOLDER_TIME","validateIndex","options","isAM","placeholderFormat","position","_placeholderHour","formatMinutes","formatSeconds","formatHour","formatMeridiem","getTimeValuesFromTime","hours","minutes","seconds","meridiem","TimeInput","TimeDivider","ariaLabel","setMeridiem","setHours","setMinutes","hasInputValue","setHasInputValue","setSeconds","lastTypedNumber","setLastTypedNumber","timeSelected","setTimeSelected","inputRefs","timeValues","safeString","cleanString","selectedTime","nextHours","handleSecondsChange","secondsHandled","nextSeconds","handleMinutesChange","minutesHandled","nextMinutes","handleHoursChange","hour","hoursRange","nextHour","handleMeridiemKeyDown","handleMeridiemBlur","renderHoursInput","hourFormatRange","InputTimeContainer","getVisibleTimeInputs","memoizeOne","formatValue","inputsContainer","node","MoveElementOnScroll","container","offsetHeight","speed","smooth","onUpdate","onEndScroll","moving","pos","lastPos","requestFrame","window","func","delta","Math","update","unsubscribe","updatePosition","newPos","scrolling","Wrapper","PickerItemListContainer","PickerItemList","PickerHeader","PickerItemContainer","selected","PickerSelectedOptionSelected","SelectedCircle","ArrowButtonContainer","getOptionIndex","selectedOption","valueProperty","option","arrowProps","fluidHeight","fluidWidth","PickerPanel","selectedOptionIndex","listYPosition","header","React","activeIndex","prevProps","pickerListContainerEl","pickerListContainerRef","pickerListEl","pickerListRef","validIndex","optionValue","getOptionValue","numberItemsOnScreen","optionHeight","pickerItemRef","listHeight","state","document","firstColumn","restColumns","lastColumn","prev","focusedElement","findIndex","supposedPos","nextPos","hasHeader","computeContainerTranslation","classProps","tabIndex","selectedOptionRef","transform","label","nextProps","labelProperty","arrowStep","TimePickerContainer","TimePickerHeader","TimePickerPanelContainer","generateOption","TimePickerMenu","onTimeChange","withLeadingZeros","rangeMinutes","rangeSeconds","selectedHour","hoursOptions","rangeHours","hasHeaderDisplay","DateTimePickerWrapper","TimePicker","TimePickerWrapper","DateInput","datePickerProps","numberOfMonths","enableOutsideDays","transitionDuration","firstDayOfWeek","keepOpenOnDateSelect","hideKeyboardShortcutsPanel","onPrevMonthClick","onNextMonthClick","onClose","onDateChange","phrases","SingleDatePickerPhrases","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","timePickerProps","onChangeTimePicker","selectedDate","setSelectedDate","setIsOpen","dateTimePickerWrapperRef","visiblePanels","onClickEscape","dateSelected","onFocusChange","onOutsideClick","handleOutsideClick","pickerTime","customInputType","handleChange","restInputProps","isShowElipsisActive","inputValue","placeholderDefault","english","classNameDefault","idDefault","DSDateTimePicker","cssClassName","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected"],"mappings":"+GAEA,SAAqBA,GACnB,IAAMC,EAAMC,mBAMZ,OAJAC,qBAAU,WACRF,cACC,CAFHE,IAIOF,EAAP,U,0HCPWG,EAAyB,SAAAC,GAAM,MAAK,CAC/CC,UACED,mBACAA,gBADAA,GAEAA,gBAJ6C,EAK/CE,YAAaF,gBALkC,EAM/CG,YAAaH,gBANkC,EAO/CI,WACEJ,mBACAA,gBADAA,GAEAA,gBAAuB,IAGdK,EAAkB,SAAAC,GAAK,OAAI,SAAAC,GAAM,OAC5CC,mBAASC,OAAD,KADoC,Q,4kBCXxCC,GAAc,IAAIC,MAAxB,cAKaC,EAAiB,SAACC,EAASlB,GACtC,GAAKmB,kCAAL,UACA,IAAMC,EAAcD,2CAApB,IACME,EAAYF,sBAAlB,GACMG,EAAuBH,2CAA7B,IAKIC,GAAeA,IAAnB,EACEE,YAEAF,YAEFF,gBAAsB,IAAIK,MAAM,QAAS,CAAEC,SAAS,OAGhDC,EAAmB,SAACzB,EAAO0B,EAAuBC,GACtD,OAAI3B,eAAJ,IAAsBA,EAA4B,GAC3C0B,EACHhB,eADwB,GAExBI,OAFJ,IAKWc,EAAY,SAACvB,EAAQL,GAChC,IAAM0B,EAAwBrB,iBAA9B,EACA,OAAOoB,EAAiBzB,EAAO0B,EAA/B,IAEWG,EAAa,SAACxB,EAAQL,GACjC,IAAM0B,EAAwBrB,mBAA9B,EACA,OAAOoB,EAAiBzB,EAAO0B,EAA/B,IAEWI,EAAc,SAACzB,EAAQL,GAClC,IAAM0B,EAAwBrB,iBAA9B,EACA,OAAOoB,EAAiBzB,EAAO0B,EAA/B,IAGWK,EAA0B,SAAAC,GACrC,IAAMC,EAAYC,mBAAlB,GAEA,OAAIC,gBAAJ,GAA6B,KAE7B,GAIWC,EAAgB,SAACC,GAAiC,IAAtBC,EAAsB,uDAAb,aAAa,EACXD,GADW,cAC7CE,OAD6C,WAC7BC,EAD6B,gBAEvDC,EAAcF,EAApB,mBAF6D,EAG9BE,GAH8B,GAGrDC,EAHqD,qBAKxDA,GAAsBA,IAA3B,GACEJ,MAISK,EAAiB,SAAAJ,GAC5B,IAAME,EAAcF,EAApB,mBACIE,GAAeA,EAAnB,oBACEA,8BAISG,EAAqB,SAAAL,GAChC,IAAMM,EAAkBN,EAAxB,uBACIM,GAAmBA,EAAvB,wBACEA,kCAISC,EAAqB,SAAC,EAAD,GAK7B,IAJDC,EAIC,EAJDA,IAAKC,EAIJ,EAJIA,IAEPC,EAEG,uDAFW,GACdC,EACG,uCACH,YAAID,EAA4BrC,OAC5BA,OAAJ,OAA4BA,EAAwB,KAChDA,EAAJ,GACEsC,IACA,GAEEtC,EAAJ,GACEsC,IACA,GAEF,GAQWC,EAAwB,SAACC,EAAM/C,GAC1C,MAAW,MAAO,GAClB,IAAMgD,EAAQD,SAAd,MACME,EAAMF,SAAZ,MACMG,EAAOH,SAAb,QACA,MAAO,CACLC,MAAOvB,EAAYzB,EADd,GAELiD,IAAK1B,EAAUvB,EAFV,GAGLkD,KAAM1B,EAAWxB,EAAQkD,KAUhBC,EAAe,SAAAC,GAC1BA,mBACAA,oBACAA,mBAGWC,EAAmB,SAAC,EAAD,OAO3B,IAFHC,EAEG,uDAFI,EACPC,IACG,yDACGC,EAAc9B,EAApB,GACI+B,EAASF,EAAeC,EAAH,EAAwBA,EAAjD,EAKA,MAJA,SAAIE,IACED,EAAJ,IAA2BA,KACvBA,EAAJ,IAA2BA,MAE7B,GAGWE,EAAyB,SAAC,EAAD,SA1IG,IAAAC,GA4FL,SAACjB,GAAiC,IAA5BpC,EAA4B,uDAAnB,EAAGoB,EAAgB,uCACpE,OAAIA,SAAJ,GACOpB,KAAP,GAoDEsD,CAAqBlB,EAAKpC,EAA1BsD,KAjJFD,eADuCA,EAiJvC,IAjJ0C,YACnBA,IAoJrBtB,MAISwB,EAAmB,WAAwC,IAAvCC,EAAuC,uDAA9B,EAAGC,EAA2B,uCAAhBC,EAAgB,uCAChEC,EAAQ,CACZC,QADY,SAEZF,YAFY,EAGZG,KAHY,OAIZJ,UAJY,EAKZK,QAASlB,GAGX,OADA,IAAIY,IAAcG,sBAClB,GAGWI,EAAsB,SAACvB,EAAMwB,EAAMC,GAC9C,IAAMC,EAAU1B,GAAQ2B,MAChBxB,EAAqBqB,EAF0B,KAEzCvB,EAAeuB,EAF0B,MAElCtB,EAAQsB,EAF0B,IAG/CI,EAAiCH,EAHc,SAGrCI,EAAuBJ,EAHc,UAG1BK,EAAYL,EAHc,QAKvD,OAAIzB,SAAJ,GAEA0B,iDAEIG,GAAJ,GAAwBH,QAAc5C,mBAASmB,EAAD,EAAtByB,KACpBI,GAAJ,GAAoBJ,OAAa5C,mBAASoB,EAAtBwB,KAChBE,GAAJ,GAAsBF,OAAa5C,mBAASqB,EAAtBuB,KAEtB,GAR4C,IAWjCK,EAAsB,SAACP,EAAMC,EAAMO,GAC9C,IAAIC,EAAJ,GACQ9B,EAAqBqB,EAF2B,KAE1CvB,EAAeuB,EAF2B,MAEnCtB,EAAQsB,EAF2B,IAGhDI,EAAiCH,EAHe,SAGtCI,EAAuBJ,EAHe,UAG3BK,EAAYL,EAHe,QAIhDS,EAA+BF,EAJiB,aAIlCG,EAAiBH,EAJiB,aAMxD,IAAeC,EAAe,GAAH,uBAAqBhC,GAAjCgC,QACf,IAAaA,EAAe,GAAH,uBAAqB/B,GAAjC+B,QACb,IAAcA,EAAe,GAAH,uBAAqB9B,GAAjC8B,QAEd,IAAMG,EAAcjC,KAAuBA,EAA3C,EAEA,OAAQ8B,EAAA,MAAkB,SAAArF,GAAK,aAA/B,I,0GCjMIyF,EAAqBC,mBAF3B,c,IAUsB,SAAC,GAajB,IAZJrF,EAYI,EAZJA,OACAsF,EAWI,EAXJA,SACArD,EAUI,EAVJA,OACAsD,EASI,EATJA,SACAvB,EAQI,EARJA,UACAnB,EAOI,EAPJA,QACA2C,EAMI,EANJA,UACA7F,EAKI,EALJA,MACA8F,EAII,EAJJA,SACAP,EAGI,EAHJA,aACAD,EAEI,EAFJA,aACAZ,EACI,EADJA,QAEMqB,EAAoB7F,mBASpB8F,EAAgBC,mBAAQ,kBA7BD,SAAA5F,GAAM,MAAK,CACxC4E,UAAW5E,oBAA6BA,gBADA,EAExC6E,QAAS7E,oBAA6BA,gBAFE,EAGxC2E,SAAU3E,mBAA0B,GA0BAD,CAAN,MAE9B,OACE,qBACEyF,UADF,EAEEC,SAFF,EAGEH,SAHF,EAIEO,QAdgB,SAAAzC,GAClBiB,IACKjB,SAAL,MACEsC,2CAaA,mCACED,SADF,EAEEzF,OAFF,EAGEsF,SAHF,EAIErD,OAJF,EAKEsD,SALF,EAMEO,gBANF,EAOEjD,QAPF,EAQEE,KARF,EASEmC,aATF,EAUED,aAAcA,GAjBpB,O,4DCpCF,EAAec,YAAW,CACxBC,MAAO,CADiB,mMAIxBC,OAJwB,GAKxBC,MAAO,K,8ICoBHC,EAAN,mBAEMC,EAAkBf,mBAAxB,GACMgB,EAAahB,uBAAnB,qBACMiB,EAAWjB,uBAAjB,mBACMkB,EAAYlB,uBAAlB,oBACMmB,EAAU,iCAGd,kBAAgB,CACd7G,MADF,YAMI8G,EAAc,SAAC,GAAD,gBAAGC,OAAH,sBAAkB/G,OAAlB,kBAClB,qBAASA,QAASA,GADA,IAIdgH,EAAa,SAAC,GAed,IAdJrB,EAcI,EAdJA,SACArD,EAaI,EAbJA,OACAsD,EAYI,EAZJA,SACAO,EAWI,EAXJA,gBACAjD,EAUI,EAVJA,QAUI,IATJ7C,cASI,MATK,GASL,MARJ4E,iBAQI,aAPJC,eAOI,aANJF,gBAMI,aALJrB,YAKI,MALG,EAKH,EAJJ4B,EAII,EAJJA,aACAO,EAGI,EAHJA,SACAR,EAEI,EAFJA,aACAlC,EACI,EADJA,KACI,EACgC6D,mBADhC,8BACGC,EADH,KACeC,EADf,OAEsBF,mBAFtB,uBAEG5D,EAFH,KAEU+D,EAFV,OAGkBH,mBAHlB,uBAGG3D,EAHH,KAGQ+D,EAHR,OAIoBJ,mBAJpB,uBAIG1D,EAJH,KAIS+D,EAJT,KAKEC,EAAWC,YAAjB,GACMC,EAAaD,YAAnB,GAEIpD,EAAJ,EACIE,EAAJ,GAEAnE,qBAAU,WACR,KAAU,CACR,IAAMuH,EAAavE,YAAsBC,EAAzC,GACAgE,EAASM,EAATN,OACAC,EAAOK,EAAPL,KACAC,EAAQI,EAARJ,SAED,CAPHnH,IASAA,qBAAU,WAOR,IANKiD,GAAL,IACEgE,MACAC,MACAC,MACA1B,OAGAxC,MAEAA,cAAwBmE,SAH1B,GAIE,CACA,IAAMG,EAAavE,YAAsBC,EAAzC,GAEAgE,EAASM,EAATN,OACAC,EAAOK,EAAPL,KACAC,EAAQI,EAARJ,SAED,CAAClE,EAAMmE,EAlBVpH,IAoBA,IAAMwH,EAAkB,kBACtBxC,YACE,CAAE5B,KAAF,EAAQF,MAAR,EAAeC,OACf,CAAE0B,SAAF,EAAYC,UAAZ,EAAuBC,WACvB,CAAEI,aAAF,EAAgBC,kBAGdqC,EAAgB,kBACpBjD,YAAoB,EAElB,CAAEpB,KAAF,EAAQF,MAAR,EAAeC,OACf,CAAE0B,SAAF,EAAYC,UAAZ,EAAuBC,aAIrBb,EAAY,SAACwD,GAA2C,IAApCC,IAAoC,2DACpCD,EADoC,OACpD7H,EADoD,QAC7C+H,EAD6C,OAE5D,OAAQF,EAAR,KACE,gBACEA,mBACAjF,YAAmBiF,EAAnBjF,QACA,MAEF,cACE,KAA8B,CAC5BiF,mBACAV,EAAcU,EAAdV,KACA,IAAMa,EAAmBtE,YAAiB,EAAD,SAAzC,GAQAzC,YAAe4G,EAAD,OAAd5G,GAEF,MAEF,gBACE,KAA8B,CAC5B4G,mBACAV,EAAcU,EAAdV,KACA,IAAMc,EAAmBvE,YAAiB,EAAD,SAAzC,GAQAzC,YAAe4G,EAAD,OAAd5G,GAEF,MAEF,iBACE4G,mBACAlF,YAAekF,EAAflF,QACA,MAEF,gBACEkF,mBACA,EAGE5G,YAAe4G,EAAD,OAAd5G,IAFA2B,YAAmBiF,EAAnBjF,QAIF,MAEF,YACMuD,GAAmBwB,KACrBxB,EAAgB0B,EAAOD,KACzBT,QACA,MAEF,QACE,GAAqBhB,KACrBgB,UAIAe,GAAmB,SAACzE,GAAM,IACtBzD,EAAUyD,EADY,aAExB0E,EAAYpG,YAAlB,GACMqG,EAAY,CAAErF,IAAF,EAAUC,IAAK,MAC3BqF,EAAWvF,YAAmBsF,EAAWD,EAAWnI,EAA1D,GAEAsH,EAAQzF,YAAWxB,EAAnBiH,IACIK,KAAmB/B,EAASgC,KAChC5D,YACEP,EADoB,OAEpB2E,EAFoB,QAAtBpE,IAQIsE,GAAoB,SAAC7E,GAAM,IACvBzD,EAAUyD,EADa,aAEzB8E,EAAaxG,YAAnB,GACMyG,EAAa,CAAEzF,IAAF,EAAUC,IAAK,IAC5ByF,EAAY3F,YAAmB,EAAD,IAApC,GAOAsE,EAAStF,YAAYzB,EAArB+G,IACIO,KAAmB/B,EAASgC,KAChC5D,YACEP,EADoB,OAEpB+E,EAFoB,QAAtBxE,IAQI0E,GAAkB,SAACjF,GAAM,IACrBzD,EAAUyD,EADW,aAEvBkF,EAAW5G,YAAjB,GACM6G,EAAW,CAAE7F,IAAF,EAAUC,IAAK,IAC1B6F,EAAU/F,YAAmB8F,EAAUD,EAAU3I,EAAvD,GAEAqH,EAAOzF,YAAUvB,EAAjBgH,IACIM,KAAmB/B,EAASgC,KAC5B5H,IAAJ,GACEgE,YACEP,EADoB,OAEpBmF,EAFoB,QAAtB5E,IAQE8E,GAAmB,WACvB,MAAgB,OAAO,KACvBxE,OAKA,OACE,mCACMH,YAAiBC,EAAQC,EAD/B,IAEE0E,aAFF,MAGE9E,IAHF,cAIE+E,cAJF,QAKElD,SALF,EAMEiC,KANF,QAOEzF,OAZqB,SAACmB,GACxB6E,MACAlG,YAAcqB,EAAdrB,IAWEwD,SARF,GASE5F,MAAOqD,MAIP4F,GAAiB,WACrB,MAAc,OAAO,KACrB3E,OAKA,OACE,mCACMH,YAAiBC,EAAQC,EAD/B,IAEE0E,aAFF,MAGE9E,IAHF,YAIE+E,cAJF,MAKElD,SALF,EAMEiC,KANF,MAOEzF,OAZmB,SAACmB,GACtBiF,MACAtG,YAAcqB,EAAdrB,IAWEwD,SARF,GASE5F,MAAOsD,MAIP4F,GAAkB,WACtB,MAAe,OAAO,KACtB5E,OACAF,IAKA,OACE,mCACMD,YAAiBC,EAAQC,EAD/B,IAEE0E,aAFF,MAGE9E,IAHF,gBAIE+E,cAJF,OAKElD,SALF,EAMEiC,KANF,OAOEzF,OAZoB,SAACmB,GACvByE,MACA9F,YAAcqB,EAAdrB,IAWEwD,SARF,GASE5F,MAAOuD,MA8Bb,OACE,qBAAiBoC,SAAUA,GAPpB,CAlBQ,CAACmD,KAAoBG,KAAkBC,MAC3B,QACzB,uBACEC,EACIC,SAAW,CACTC,EACE,qBACEpF,IADF,EAEE8C,QAFF,MAGE/G,MAAOmJ,QAAYnJ,QALd,KADV,IADP,IADF,IAmBE,yBAA4B,CAAEiE,IAAK,YASzC+C,YAAuB,CACrBrB,SAAU,cAAoB,CAC5B2D,IAD4B,KAE5B,UAAgB,CAAEC,QAASD,IAAUE,QAEvClH,OAAQgH,IALa,KAMrB1D,SAAU0D,IANW,KAOrBnD,gBAAiBmD,IAPI,KAQrBpG,QAASoG,IARY,KASrBjJ,OAAQiJ,IATa,OAUrBrE,UAAWqE,IAVU,KAWrBpE,QAASoE,IAXY,KAYrBtE,SAAUsE,IAZW,KAarB3F,KAAM2F,IAbe,OAcrB/D,aAAc+D,IAdO,OAerBxD,SAAUwD,IAfW,KAgBrBhE,aAAcgE,IAhBO,OAiBrBlG,KAAMkG,qB,mEC1VR,EAAelD,YAAW,CACxBC,MAAO,CAAC,idADgB,0HAKxBC,OALwB,GAMxBC,MAAO,K,wICFHkD,EAAS,SAAC,GAAD,kBACb5D,OADa,wCAEbC,OAFa,kBAGb4D,OAHa,MAGN,sBAHM,iBAIbC,OAJa,MAINC,IAJM,yBAKbC,OALa,gCAMb3D,OANa,MAMH,wBANG,aAOb5D,OAPa,MAOJ,wBAPI,eAQbwH,OARa,SASVC,EATU,8GAWb,uBACEC,aAAYD,iBADd,qBAEEE,WAFF,EAGEpE,UAHF,EAIEqE,MAAQpE,EAAkCqE,IAJ5C,QAIqBA,IAAZ,QACPrE,SALF,EAME4D,KANF,EAOEpH,OAPF,EAQE4D,QARF,EASE4D,SATF,EAUEH,KAAMA,KAIVF,YAAmB,CACjB5D,UAAWyD,IADM,OAEjBxD,SAAUwD,IAFO,KAGjBI,KAAMJ,IAHW,QAIjBK,KAAML,UAJW,KAKjBO,iBAAkBP,UALD,KAMjBpD,QAASoD,IANQ,KAOjB5E,QAAS4E,IAPQ,KAQjBhH,OAAQgH,IARS,KASjBQ,SAAUR,IAAUc,M,6GCnCdC,EAAqBC,YAA0B,oBAA/CD,iBAEFE,EAAO,wBACb,SAASC,EAAmB,GAOzB,QAND1E,gBAMC,SALDgE,EAKC,EALDA,SAKC,IAJD5D,eAIC,MAJSqE,EAIT,EAHDE,EAGC,EAHDA,OACAC,EAEC,EAFDA,KACAC,EACC,EADDA,OAEA,OACE,uBACEC,iBADF,EAEEH,OAFF,EAGEI,UAAW,CACTC,gBAAiB,CACfC,SADe,EAEfC,QAFe,EAGfC,kBAAmB,WAGvBC,WAVF,EAWEC,iBACE,6BACE,uBACEtF,UAAWwE,EADb,UAEEvE,SAFF,EAGEI,QAHF,EAIE4D,SAAUA,KAIhBa,OAAQA,IAKdH,YAA+B,CAC7B1E,SAAUwD,IADmB,KAE7BQ,SAAUR,IAFmB,KAG7BpD,QAASoD,IAHoB,KAI7BmB,OAAQnB,IAJqB,KAK7BoB,KAAMpB,IALuB,QAM7BqB,OAAQrB,IAAU1I,Q,mlBC/CpB,IAEMwK,EAAY1F,mBAFlB,qBAGM2F,EAAa3F,oBAHnB,oBAGA,SAEqB4F,c,wNAGX,I,uDAEC,MAOHC,KAPG,MAELC,EAFK,YAGLC,EAHK,aAIKC,EAJL,WAKL7F,EALK,YAML8F,EANK,iBAQDC,EACJF,GAAkBA,EAAlBA,MAAyCA,OAAzCA,KACIA,YADJA,cADF,UAIA,OACE,iCACE7F,UAAS,wBAxBjB,oBAwBiB,iBADX,GAIG2F,GAAa,yBAJhB,KAMGC,GAAc,yBAPnB,Q,EAjBiBH,CAAqBO,a,YAArBP,iBACG,I,QCLlBQ,EAAe,SAAC,GAAD,uBACnBH,OADmB,wBAEnBhG,OAFmB,2BAGnBE,OAHmB,qBAInBkG,OAJmB,yBAKnBP,OALmB,4BAMnBC,OANmB,aAOTO,EAPS,kBASnB,qBACE/L,IADF,EAEE4F,UAFF,EAGE8F,eAHF,EAIEH,UAJF,EAKEC,WALF,EAMEM,MAAOA,GAfU,IAqBrBD,YAAyB,CACvBH,eAAgBrC,UADO,IAEvB3D,SAAU2D,IAFa,KAGvBzD,UAAWyD,IAHY,OAOvByC,MAAOzC,aAAmBA,IAPH,QAWvBkC,UAAWlC,IAXY,QAevBmC,WAAYnC,IAfW,QAmBvB2C,SAAU3C,IAAUpI,S,gEC5CP,CACboD,YADa,uBAEbuB,UAFa,GAGbqG,GAAI,I,uECDOC,EAAoB,SAACvH,EAAMxB,GACtC,IAAMgJ,EAAerH,MAQrB,OAPAqH,QAAmBxH,MAAnBwH,UACAA,OAAkBxH,MAAlBwH,SACAA,OAAkBxH,MAAlBwH,SACAA,OAAkBhJ,MAAlBgJ,SACAA,SAAoBhJ,MAApBgJ,WACAA,SAAoBhJ,MAApBgJ,WAEA,G,6ECXWC,EAAK,KASLC,EAAgB,CAAEvJ,IAAF,EAAUC,IAAK,IAC/BuJ,EAAgB,CAAExJ,IAAF,EAAUC,IAAK,IAC/BwJ,EAAqB,CAAEzJ,IAAF,EAAUC,IAAK,IACpCyJ,EAAmB,OAAnBA,EAAmB,UAAnBA,EAAmB,UAAnBA,EAID,W,SChBCC,EAAgB,SAACrD,EAAOsD,GACnC,OAAItD,EAAJ,EAAsB,EAClBA,GAASsD,EAAb,OAAoCA,SAAP,EAC7B,GAcWC,EAAO,SAAAxJ,GAAI,OAAIA,GAAQA,SAAZ,I,OCFXnC,EAAiB,SAACC,EAASlB,GACtC,GAAKmB,kCAAL,UACA,IAAMC,EAAcD,2CAApB,IACME,EAAYF,sBAAlB,GACMG,EAAuBH,2CAA7B,IAKIC,GAAeA,IAAnB,EACEE,YAEAF,YAEFF,gBAAsB,IAAIK,MAAM,QAAS,CAAEC,SAAS,OAGzCqL,EAAoB,SAACC,EAAUzM,EAAQI,GAClD,OAAIqM,IAAaL,EACRM,EAAiB1M,EAAxB,GAEEyM,IAAaL,EACRpM,wBAAP,IAEEyM,IAAaL,EACRpM,wBAAP,IAEEyM,IAAaL,EACRpM,sBAAP,SADF,GAKI0M,EAAmB,SAAC1M,EAAQI,GAChC,SACSJ,wBAAP,IAEKA,wBAAP,KAGIoB,EAAmB,SAACzB,EAAO0B,GAC/B,OAAI1B,eAAJ,IAAsBA,EAA4B,GAC3C0B,EAAwBhB,eAAH,GAA+BI,OAA3D,IAGWkM,EAAgB,SAAC3M,EAAQL,GACpC,IAAM0B,EAAwBrB,iBAA9B,EACA,OAAOoB,EAAiBzB,EAAxB,IAEWiN,EAAgB,SAAC5M,EAAQL,GACpC,IAAM0B,EAAwBrB,iBAA9B,EACA,OAAOoB,EAAiBzB,EAAxB,IAEWkN,EAAa,SAAC7M,EAAQL,GACjC,IAAM0B,EACJrB,oBAA6BA,iBAD/B,EAEA,OAAOoB,EAAiBzB,EAAxB,IAGWmN,EAAiB,SAAC9M,EAAQL,GAAT,OAC5BK,kBAA2BL,EAA3BK,cAAiDL,EADrB,eAGjB+B,EAA0B,SAAAC,GACrC,IAAMC,EAAYC,mBAAlB,GACA,OAAIC,gBAAJ,GAA6B,KAE7B,GAGWQ,EAAiB,SAAAJ,GAC5B,IAAME,EAAcF,EAApB,mBACIE,GAAeA,EAAnB,oBACEA,8BAWSK,EAAqB,SAAC,EAAD,KAAiC,IAA9BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,IACxC,YAAIpC,OAAJ,OAA4BA,EAAwB,KAChDA,EAAJ,EACMuB,gBAAJ,GAAyBD,mBAAP,GAClB,EAEEtB,EAAJ,EAAyBmC,EACzB,GAWWqK,EAAwB,SAAChK,EAAM/C,EAAQI,GAClD,MAAW,MAAO,GAClB,IAAM4M,EAAQ5M,EAAa2C,aAAH,GAA4BA,EAApD,OACMkK,EAAUlK,EAAhB,UACMmK,EAAUnK,EAAhB,UACMoK,EAAYZ,EAAD,GAAjB,EFvHgB,KEyHhB,MAAO,CACLS,MAAOH,EAAW7M,EADb,GAELiN,QAASN,EAAc3M,EAFlB,GAGLkN,QAASN,EAAc5M,EAHlB,GAILmN,aAWSrJ,EAAmB,SAACE,EAAWb,EAAc0C,GAA1B,MAAuC,CACrE1B,QADqE,SAErEC,KAFqE,OAGrEJ,UAHqE,EAIrE6B,QAJqE,EAKrExB,QAASlB,ICrGLiD,EAAkBf,mBAFxB,qBAGM+H,EAAY/H,qBAHlB,oBAGA,SACMmB,EAAU,OAAAnB,EAAA,WAJhB,oBAIgB,WAGd,kBAAgB,CACd1F,MADF,YAMI0N,EAAc,SAAC,GAAD,gBAAG3G,OAAH,sBAAkB/G,OAAlB,kBAClB,qBAASA,QAASA,GADA,I,GAID,SAAC,GAYd,IAXJoD,EAWI,EAXJA,KACA/C,EAUI,EAVJA,OACAI,EASI,EATJA,WASI,IARJkD,YAQI,MARG,EAQH,EAPJrD,EAOI,EAPJA,UACAC,EAMI,EANJA,YACAC,EAKI,EALJA,YACAoF,EAII,EAJJA,SACAE,EAGI,EAHJA,SACAH,EAEI,EAFJA,SACegI,EACX,EADJ,eACI,EAC4B1G,mBAD5B,uBACGuG,EADH,KACaI,EADb,OAEsB3G,mBAFtB,uBAEGoG,EAFH,KAEUQ,EAFV,OAG0B5G,mBAH1B,uBAGGqG,EAHH,KAGYQ,EAHZ,QAIsC7G,oBAJtC,wBAIG8G,GAJH,MAIkBC,GAJlB,SAK0B/G,mBAL1B,yBAKGsG,GALH,MAKYU,GALZ,SAMgChH,mBANhC,yBAMGC,GANH,MAMeC,GANf,SAO0CF,mBAP1C,2BAOGiH,GAPH,MAOoBC,GAPpB,SAQoClH,mBARpC,wBAQGmH,GARH,MAQiBC,GARjB,MASE9G,GAAWC,YAAjB,GACM8G,GAAY,CAChBjB,MADgB,KAEhBC,QAFgB,KAGhBC,QAHgB,KAIhBC,SAAU,MAGZrN,qBAAU,WACR,KAAU,CACR,IAAMoO,EAAanB,EAAsBhK,EAAM/C,EAA/C,GAEAuN,EAAYW,EAAZX,UACAC,EAASU,EAATV,OACAC,EAAWS,EAAXT,SACAG,GAAWM,EAAXN,YAPJ9N,IAWAA,qBAAU,WACR,IAAMoO,EAAanB,EAAsBhK,EAAM/C,EAA/C,IAEK+C,GAAL,KACEwK,MACAC,MACAC,MACAG,QAGE7K,GAAJ,KACEwK,EAAYW,EAAZX,UACAC,EAASU,EAATV,OACAC,EAAWS,EAAXT,SACAG,GAAWM,EAAXN,YAED,CAAC7K,EAAMmE,GAAUlH,EAhBpBF,IAkBA,IAAM6D,GAAyB,SAACzB,EAAWS,EAAKpC,GDtGT,IAAAqD,GA+FL,SAACjB,GAAiC,IAA5BpC,EAA4B,uDAAnB,EAAGoB,EAAgB,uCAC9DwM,EAAa1N,OAAnB,GACM2N,EAAcD,mBAChBA,QADgBA,GAApB,EAGA,OAAO5N,QAAqBE,mBAAuB2N,EAAnD,QCIIvK,CAAqBlB,EAAKpC,EAAQ2B,EAAlC2B,SHjHoB,eESeD,ECwGnCC,KHlHkB,YEWAD,GFNH,UEMuBA,KCsGxC,IAKEtB,MAIEe,GAAmB,SAAC1D,GAA+B,IAAxB4D,IAAwB,yDACjDC,EAAc9B,EAApB,GACA,OAAO6B,EAAeC,EAAH,EAAwBA,EAA3C,GAGIL,GAAe,SAACC,GACpBA,mBACAA,oBACAA,mBAGIyC,GAAU,SAACzC,GACXA,SAAJ,OACEuK,QAKE3J,GAAY,SAACwD,EAAO7E,GAAQ,IAExBhD,EADW6H,EADa,aAIhC,OADAsG,GAAmBtG,EAAnBsG,KACQtG,EAAR,KACE,IHjJkB,UGkJhBA,mBACAV,GAAcU,EAAdV,KACA,IAAMa,EAAmBtE,GAAzB,GACAzC,EAAe4G,EAAD,OAAd5G,GACA,MAEF,IHvJoB,YGwJlB4G,mBACAV,GAAcU,EAAdV,KACA,IAAMc,EAAmBvE,GAAiB1D,GAA1C,GACAiB,EAAe4G,EAAD,OAAd5G,GACA,MAEF,IH7JmB,YG8JjB4G,mBACA,EAGE5G,EAAe4G,EAAD,OAAd5G,ID5EwB,SAAAsB,GAChC,IAAMM,EAAkBN,EAAxB,uBACIM,GAAmBA,EAAvB,wBACEA,iCCuEMD,CAAmBiF,EAAnBjF,QAIF,MAEF,IHrKgB,SGsKdiF,mBACAA,gBACA,MAEF,IHzKc,OG0KZA,mBACA5G,EAAe4G,EAAD,OAAe/G,OAA7BG,IACA0B,EAAekF,EAAflF,QACA,MAEF,IH7Ka,MG8KXkF,mBACA5G,EAAe4G,EAAD,OAAd5G,MACA0B,EAAekF,EAAflF,QACA,MAEF,IHpLe,QGqLbkF,mBACAV,GAAcU,EAAdV,OAmBNhH,qBAAU,WACR,IAAMuO,EAAetL,GAAQ2B,MAC7B,GAd0B,WAC1B,IAAIM,EAAJ,GAOA,OALA,IAAeA,EAAe,GAAH,uBAAqBgI,GAAjChI,QACf,IAAiBA,EAAe,GAAH,uBAAqBiI,GAAjCjI,QACjB,IAAiBA,EAAe,GAAH,uBAAqBkI,IAAjClI,QACjB,IAAgBA,EAAe,GAAH,uBAAqBmI,GAAjCnI,SAERA,EAAA,MAAkB,wBAMtBF,GAAuB,CAIzB,GAHI7E,GAAJ,GAAwBoO,WACpBnO,GAAJ,GAA4BmO,aACxBlO,GAAJ,IAA4BkO,cACxBjO,GAAJ,EAA4B,CAC1B,IAAMkO,EACJnB,oBAAgCH,EAAhCG,GAA8CH,EAAD,GAD/C,GAEAqB,UAEFL,SAED,CAAChB,EAAOC,EAASC,GAbpBpN,IAeA,IAAMyO,GAAsB,SAACnL,GAAM,IACzBzD,EAAUyD,EADe,aAE3BoL,EAAiB9M,EAAvB,GAEM+M,EAAchM,EAAmB,EAAD,EAAtC,IAMAmL,GAAWhB,EAAc5M,EAAzB4N,IACArI,MACA5B,GAAuBP,EAAD,OAAW+I,EAAX,IAAtBxI,IAGI+K,GAAsB,SAACtL,GAAM,IACzBzD,EAAUyD,EADe,aAE3BuL,EAAiBjN,EAAvB,GACMkN,EAAcnM,EAAmB,EAAD,EAAtC,IAMAgL,EAAWd,EAAc3M,EAAzByN,IACAlI,MACA5B,GAAuBP,EAAD,OAAW+I,EAAX,IAAtBxI,IAGIkL,GAAoB,SAACzL,GAAM,IACvBzD,EAAUyD,EADa,aAEzB0L,EAAOpN,EAAb,GACMqN,EAAa3O,EAAa6L,EAAhC,EAEM+C,EAAWvM,EAAmBsM,EAAYD,EAAhD,IACAtB,EAASX,EAAW7M,EAApBwN,IACAjI,MACA5B,GAAuBP,EAAD,OAAW2L,EAAX,IAAtBpL,IAGIsL,GAAwB,SAAC7L,GHrQT,YGsQhBA,OAAJ,MAA0BA,MACxBmK,EAAYT,EAAe9M,EAA3BuN,IHtQoB,cGuQXnK,OAAJ,MAA4BA,MACjCmK,EAAYT,EAAe9M,EH1Qf,OAMG,UGqQNoD,MACT0D,GAAc1D,EAAd0D,KHzQmB,cG0QV1D,OACTmK,MAEFhI,OAGI2J,GAAqB,SAAC9L,GAAM,IACxBzD,EAAUyD,EADc,aAE5BzD,OHrRU,OGqRMA,GAClB4N,OAkDE4B,GAAmB,WACvB,MAAgB,OAAO,KACvB,IAAMC,EAAkBhP,EAAa6L,EAArC,EAEA,OACE,mCACMnI,GACF,mBAAOE,GAAUZ,EAAGgM,EAApB,OADkB,GADtB,KAMExL,IANF,aAOE+E,cAPF,uBAQEgB,aAAY2D,GARd,cASE7H,SATF,EAWEH,SAAU,mBAAW2I,SAAX,GACV1I,SAZF,GAaEtB,YAAauI,EACXJ,EAD4B,EAbhC,GAkBEzM,MAAOqN,MAwDb,OACE,qBAAiB1H,SAAUA,GARpB,CAzBQ,CACb6J,KAtEF,EAGE,mCACMrL,GACF,mBAAOE,GAAUZ,EAAG+I,EAApB,OADkB,GADtB,KAMEvI,IANF,gBAOE+E,cAPF,yBAQEgB,aAAY2D,GARd,gBASE7H,SATF,EAWEH,SAAU,mBAAW2I,WAAX,GACV1I,SAZF,GAaEtB,YAAauI,EAAkBJ,EAbjC,GAcEzM,MAAOsN,KAjBc,KAvBzB,EAGE,mCACMnJ,GACF,mBAAOE,GAAUZ,EAAG+I,EAApB,OADkB,GADtB,KAMEvI,IANF,gBAOE+E,cAPF,yBAQEgB,aAAY2D,GARd,gBASE7H,SATF,EAWEH,SAAU,mBAAW2I,WAAX,GACV1I,SAZF,GAaEtB,YAAauI,EAAkBJ,EAbjC,GAcEzM,MAAOuN,MAjBc,MAkGE,QACzB,uBACEpE,EACIC,SAAW,CACTC,EACE,qBAEEpF,IAFF,EAGE8C,QAHF,IAIE/G,MAAOmJ,QAAYnJ,QANd,KADV,IADP,IADF,IAqBE,yBAA4B,CAAEiE,IAAK,SA7CrC,EAGE,sCAEEA,IAFF,iBAGE+E,cAHF,sBAIEgB,aAAY2D,GAJd,iBAKE7H,SALF,EAMExD,OANF,GAOE+B,UAPF,GAQEC,YAAauI,EAAkBJ,EARjC,GASEzM,MAAOwN,KAZa,QC9VtBkC,GAAqBhK,mBAF3B,c,GAIsB,SAAC,GAQjB,IAPJrF,EAOI,EAPJA,OACAsF,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACA7F,EAGI,EAHJA,MACA8F,EAEI,EAFJA,SACe6H,EACX,EADJ,eAEMgC,EAAuBC,aAAW,SAAAC,GAAW,OACjDzP,YADiD,MAG/C0P,EAAkB5P,mBAQhB8F,EAAgBC,mBAAQ,kBAAM0J,EAAN,MAE9B,OACE,sBACE9J,UADF,EAEEC,SAFF,EAGEH,SAHF,EAIEO,QAbgB,SAAAzC,GACbA,SAAL,MACEqM,mCAaA,kCACE9F,aADF,EAEElE,SAFF,EAGEzF,OAHF,EAIEsF,SAAU,SAAAoK,GAAI,OAAKD,EAAL,GACdlK,SALF,EAMExC,KAAMpD,GAbZ,M,6FC7BaoG,aAAW,CACxBC,MAAO,CADiB,yMAIxBC,OAJwB,GAKxBC,MAAO,K,UCRF,SAASyJ,GAAoB,EAA7B,GAWL,IAREC,EAQF,EAREA,UAQF,IAPElN,WAOF,MAPQ,EAOR,MANEC,WAMF,MANQ9B,EAAQgP,aAMhB,MALEC,aAKF,MALU,EAKV,MAJEC,cAIF,MAJW,EAIX,MAHEC,gBAGF,MAHa,wBAGb,MAFEC,mBAEF,MAFgB,wBAEhB,EACIC,GAAJ,EACIC,EAAJ,EACIC,EAHJ,EAMMC,EAEFC,8BACAA,OADAA,6BAEAA,OAFAA,0BAGAA,OAHAA,wBAIAA,OAJAA,yBAKA,SAAAC,GACED,oBAAwB,KAqB9B,cACElN,EADoB,iBAEpB,IAAIoN,EAAQpN,SAAWA,EAAvB,gBACA,IAAIoN,IAEFA,GAASpN,EAAToN,OACAA,GAAS,GAATA,GAGFL,IAAQK,EAARL,EACAA,EAAMM,WAAcA,WAVA,IAWpB,GA3BF,aACEP,KACA,IAAMM,GAASL,EAAD,GAAd,EACAC,KAEIK,YAAJ,GACEJ,GAAa,WACXL,EAASI,EAATJ,GACAU,QAGFT,KACAC,MAgBAQ,GAOJ,OAHAd,sCACAA,0CAEO,CACLe,YAAa,WACXf,sCACAA,2CAEFgB,eAAgB,SAAAC,GAEdT,IADAD,Q,ohCC5DN,IAEMpF,GAAY,OAAA1F,EAAA,UAFlB,oBAEkB,MAGhB,kBAAoB,CAAEyL,UAAtB,gBAEIC,GAAU1L,mBAPhB,oBAOA,WACM2L,GAA0B3L,mBARhC,oBAQA,uBAIM4L,GAAiB5L,mBAZvB,oBAYA,aACM6L,GAAe7L,mBAbrB,oBAaA,UACM8L,GAAsB,OAAA9L,EAAA,UAd5B,oBAc4B,QAG1B,kBAAmB,CAAE+L,SAArB,eAEIC,GAA+BhM,mBAnBrC,oBAmBA,sBAIMiM,GAAiBjM,mBAvBvB,oBAuBA,mBACMkM,GAAuBlM,mBAxB7B,oBAwBA,mBAKMmM,GAAiB,SAAClF,EAASmF,GAA4C,IAA5BC,EAA4B,uDAAZ,QACzD1I,EAAQsD,EAAA,WACZ,SAAAqF,GAAM,OAAIA,OAAJ,KAER,OAAOtF,EAAcrD,EAArB,IAGI4I,GAAa,CACjBhI,WADiB,OAEjBiI,aAFiB,EAGjBC,YAHiB,EAIjBxI,KAAM,KAGayI,e,8BAwBnB,cAAmB,kCACjB,iBADiB,2DAvBWxC,aAAW,SAAAvG,GAAS,MACb,EADa,MACxCsD,EADwC,UAC/BoF,EAD+B,kBAEV,EAFU,MAExCD,EAFwC,iBAExBX,EAFwB,YAI1CkB,EACJhJ,GAASwI,GAAelF,EAASmF,EADnC,GAEMQ,EACJ,mBAAwBD,EAAsB,EADhD,aAMA,OAHI,kBAAJ,GACE,kCAEF,MAWiB,6CAqKJ,WAAM,IACXE,EAAW,EADA,aAGnB,OAAO,0BAAP,MAtKA,yBAA8BC,IAA9B,YACA,gBAAqBA,IAArB,YACA,gBAAqBA,IAArB,YACA,oBAAyBA,IAAzB,YAEA,QAAa,CACXV,eAAgBvN,EADL,SAEXkO,YAFW,EAIXC,UAAW,IAXI,oL,iEAeC,WAClBnH,KAAA,eACA,IAAMoH,EAAwBpH,KAAKqH,uBAAnC,QACMC,EAAetH,KAAKuH,cAA1B,QAEAvH,KAAA,cAAqB,IAAIyE,GAAoB6C,EAAc,CACzD5C,UADyD,EAEzDlN,KAAMwI,KAFmD,iBAGzDvI,IAAKuI,KAHoD,iBAIzD8E,SAAU,cAAgB,IAElBhH,EADc,EADI,cAGtBsD,SACCmE,YAAYN,EAAM,EAAP,kBAAgC,EAD5C7D,eAECkE,OAHH,GAIA,gBAEFP,YAAa,WACX,WAAc,CAAEa,WAAW,OAG/B5F,KAAA,gC,6CAIAA,KAAA,8B,qCAeayG,GAEb,OAAOA,EADmBzG,KADL,uB,qCAKRyG,GAEb,OAAOA,EADmBzG,KADL,uB,6BAKhBlC,EAAO8H,GAAW,IACfxE,EAAYpB,KADG,cAEfuG,EAAmBvG,KAFJ,qBAGjBwH,EAAarG,EAAcrD,EAAjC,GACM2I,EAASrF,EAAf,GACMqG,EAAczH,KAAK0H,eAAzB,GACInB,IAAJ,GACEvG,KAAA,4B,qCAIW,MAC4BA,KAD5B,MACLoB,EADK,UACIuG,EADJ,sBAESC,EAAiB5H,KAAK6H,cAF/B,qBAIb7H,KAAA,eACAA,KAAA,WAAkBA,KAAK4H,aAAvB,EAEA5H,KAAA,iBAAwBA,KAAK8H,WAAa,EAAI9H,KAAK4H,aAAnD,EACA5H,KAAA,iBACEA,KAAK4H,cAAgBxG,SAAiBmE,UAAUoC,EADlD,M,yCAIiBF,EAAa3J,EAAO8H,GAAW,IACxCvL,EAAa2F,KAD2B,eAEhDA,KAAA,UACE,SAAA+H,GAAK,uBAEHnC,UAFG,EAGHW,eAHG,EAIHW,YAAapJ,OAEf,WACEzD,EAASoN,EAATpN,Q,oCAOQnC,GAAG,IACPgP,EAAgBlH,KADT,kBAEPoB,EAAYpB,KAFL,gBAGuBgI,gCAHvB,6CAGRC,EAHQ,KAGQC,EAHR,aAMMA,SANN,GAMRC,EANQ,sBAOAH,gCAPA,8BAORI,EAPQ,oBAUTC,EAAiBL,SAAvB,cAEA,OAAQ9P,EAAR,KACE,WACE8H,KAAA,UACA,MACF,UACEA,KAAA,OAAYoB,SAAZ,GACA,MACF,cACEpB,KAAA,OAAYkH,EAAZ,GACA,MACF,gBACElH,KAAA,OAAYkH,EAAZ,GACA,MACF,UAGE,GAFAhP,EADU,iBAGNkQ,GAAQC,IAAZ,EACED,eACK,GAAIC,IAAJ,EACLJ,cACK,CAELC,EADiBI,oBAAUJ,EAA3B,GACAA,e,yCASW,IACThB,EAAgBlH,KADP,kBAGXuI,EAAcrB,EADElH,KAFL,gBAIXwI,EAAUD,OAAiCrB,EAAjD,EACAlH,KAAA,Y,2CAGmB,IACXkH,EAAgBlH,KADL,oBAEYA,KAFZ,MAGbuI,EAAcrB,EAHD,YAIbsB,EACJD,GALiB,UAKjBA,SAA8CrB,EADhD,EAEAlH,KAAA,Y,+BASO,aACwBA,KADxB,MACCoB,EADD,UACUqH,EADV,cAE4CzI,KAF5C,MAECuG,EAFD,iBAEiBW,EAFjB,cAE8BtB,EAF9B,YAIDmB,EAAgB/G,KAAK0I,4BAA3B,GAEA,OACE,0BACGD,GAAazI,KADhB,eAEE,sBACE2I,WAAY,CAAE/C,aACd9M,UAAWkH,KAFb,cAGE4I,SAAU,GAEV,sBAA8BxO,SAAU4F,KAAK6I,mBAC3C,qBANJ,OAQE,0BACE,0CAEEpK,aAFF,aAGElE,SAAU2M,GAHZ,EAIE/I,KAAM,qBAJR,MAKExD,QAASqF,KALX,iBAME4I,UAAW,MAGf,sBACExO,SAAU4F,KADZ,uBAEEQ,MAAO,CACLzF,OAAQiF,KAAK8H,aAGf,sBACE1N,SAAU4F,KADZ,cAEEQ,MAAO,CACLsI,UAAW,cAAF,kBAGV1H,EAAA,KAAY,cACX,IAAM3M,EAAQ,iBAAd,GACMsU,EAAQ,iBAAd,GACA,OACE,sBACErQ,IADF,EAEEiQ,WAAY,CACVzC,SAAUK,EACN9R,IADoB,EAEV,IAAVqJ,GAEN1D,SAAU,EAPZ,cAQEO,QAAS,kBAAM,uBAAN,KATb,QAiBN,0BACE,0CAEE8D,aAFF,eAGElE,SAAU2M,GAAe9F,EAH3B,OAIEjD,KAAM,uBAJR,MAKExD,QAASqF,KALX,mBAME4I,UAAW,W,gDAlMSI,KAA0B,IAAb7B,EAAa,EAAbA,UACnCjB,EAAqC8C,EADW,SACtCxC,EAA2BwC,EADW,cACvB5H,EAAY4H,EADW,QAExD,OAAI9C,IAAaiB,EAAjB,SACS,CACLZ,eADK,EAELW,YAAaZ,GAAelF,EAAS8E,EAFhC,GAGLiB,UAAW6B,GAGf,S,EA5EiBnC,CAAoBvG,a,aAApBuG,kBAgBG,CACpBL,cADoB,QAEpByC,cAFoB,QAGpBtB,oBAHoB,EAIpBvG,QAJoB,GAKpB8H,UAAW,I,gdCjEf,IAEMC,GAAsBhP,mBAF5B,oBAGMiP,GAAmBjP,mBAHzB,mBAGA,UACMkP,GAA2BlP,mBAJjC,mBAIA,mBAKMmP,GAAiB,SAACxU,GAAD,OAAY,kBAAa,CAC9CL,MAD8C,EAE9CsU,MAAyB,oBAAXjU,EAAwBA,EAA/B,GAAgD2R,KAGpC8C,e,8BAYnB,cAAmB,kCACjB,iBADiB,6CAgIJ,WAAM,IACX1R,EAAS,EADE,WAEnB,OAAO,0BAAmBA,SAA1B,cAhIA,QAAa,CACXA,KAAMmB,QAAcQ,OAHL,8P,iEAOC,IACV3B,EAASmI,KADC,WAElBA,KAAA,SAAc,CAAEnI,W,yCAGCpD,GAAO,IAChBoD,EAASmI,KADO,WAExBA,KAAA,WAAgBnI,SAAhB,M,wCAGgBpD,GAAO,IACfoD,EAASmI,KADM,WAGnB8D,EAAJ,EADuB9D,KAFA,mBAKhBqB,EAAL,KACEyC,EAAYrP,EAAD,GAAXqP,KAGJ9D,KAAA,WAAgBnI,OAAhB,M,0CAGkBpD,GAAO,IACjBoD,EAASmI,KADQ,WAEzBA,KAAA,WAAgBnI,SAAhB,M,uCAGepD,GAAO,IACdoD,EAASmI,KADK,WAEhB4D,EAAO/L,EAAb,OACMiM,EACJrP,uBAA+BmP,EAA/BnP,GAA4CmP,EAAD,GAD7C,GAEA5D,KAAA,WAAgBnI,OAAhB,M,iCAGSA,IAET2R,EADyBxJ,KADV,oBAEfwJ,GACAxJ,KAAA,SAAc,CAAEnI,W,2CAGG,IACXA,EAASmI,KADE,aAEwBA,KAFxB,MAEXhL,EAFW,cAEEF,EAFF,SAEU2T,EAFV,YAGnB,MAAkB,OAAO,KACzB,IAAMgB,EAAmB3U,iBAAzB,EACM4U,EAAe7P,wBACnByP,GAAeG,GAAoBtU,YADrC,KAGA,OACE,sBACEsT,UADF,EAEEzB,OAFF,IAGE3M,SAAU2F,KAHZ,mBAIEoB,QAJF,EAKE8E,SAAUrO,e,2CAKK,IACXA,EAASmI,KADE,aAEwBA,KAFxB,MAEX/K,EAFW,cAEEH,EAFF,SAEU2T,EAFV,YAGnB,MAAkB,OAAO,KACzB,IAAMgB,EAAmB3U,iBAAzB,EACM6U,EAAe9P,wBACnByP,GAAeG,GAAoBtU,YADrC,KAGA,OACE,sBACEsT,UADF,EAEEzB,OAFF,IAGE3M,SAAU2F,KAHZ,oBAIEoB,QAJF,EAKE8E,SAAUrO,e,yCAMG,IACTA,EAASmI,KADA,aAEoCA,KAFpC,MAETjL,EAFS,YAEEG,EAFF,aAEcJ,EAFd,SAEsB2T,EAFtB,YAGjB,MAAgB,OAAO,KAEvB,IAAMmB,EAAe1U,EAAa2C,aAAH,GAA4BA,EAA3D,OAEM4R,EAAmB3U,iBAAzB,EAEM+U,GADa3U,EAAa2E,gBAAM,EAAT,IAAkBA,gBAA/C,KACqBiQ,IACnBR,GAAeG,GAAoBtU,YADrC,KAGA,OACE,sBACEsT,UADF,EAEEzB,OAFF,IAGE3M,SAAU2F,KAHZ,kBAIEoB,QAJF,EAKE8E,SAAU0D,M,wCAKE,IACR/R,EAASmI,KADD,aAEkBA,KAFlB,MAER9K,EAFQ,aAEIuT,EAFJ,YAGhB,SAEE,sBACEA,UADF,EAEEzB,OAFF,GAGE3M,SAAU2F,KAHZ,iBAIEoB,QAAS,CACP,CAAE3M,MAAF,KAAesU,MAAO,MACtB,CAAEtU,MAAF,KAAesU,MAAO,OAExB7C,SAAW7E,EAAD,GAAqB,KAArB,OAVU,O,+BAoBjB,IACC0I,EAAqB/J,KADtB,uBAGP,OACE,0BACG+J,GAAoB/J,KADvB,eAEE,0BACGA,KADH,mBAEGA,KAFH,qBAGGA,KAHH,qBAIGA,KAPP,wB,EApJiBuJ,CAAuBjJ,a,aAAvBiJ,kBAEG,CACpB1R,KAAM2B,MACNiP,WAFoB,EAGpBvT,YAHoB,EAIpBD,aAJoB,EAKpBD,aALoB,EAMpBD,WANoB,EAOpByU,aAAc,0BAyJlBD,aAA2B,CAEzB1R,KAAMkG,eAFmB,KAIzB0K,UAAW1K,IAJc,KAMzB7I,WAAY6I,IANa,KAQzB9I,YAAa8I,IARY,KAUzB/I,YAAa+I,IAVY,KAYzBhJ,UAAWgJ,IAZc,KAczByL,aAAczL,IAAUsH,M,UCpLpB2E,GAAwB7P,mBAF9B,mBAEA,WACM8P,GAAa9P,gBAHnB,mBAGA,eACM+P,GAAoB/P,mBAJ1B,mBAIA,uBAIMgQ,GAAYhQ,iBARlB,mBAQA,c,GAE6B,SAAC,GA2BxB,IA1BJpB,EA0BI,EA1BJA,YACAM,EAyBI,EAzBJA,KAyBI,IAxBJ+Q,gBAwBI,IAvBF7P,gBAuBE,aAtBF8P,sBAsBE,MAtBe,EAsBf,MArBF9L,gBAqBE,aApBF+L,yBAoBE,aAnBFC,0BAmBE,MAnBmB,EAmBnB,MAlBFC,sBAkBE,MAlBe,EAkBf,MAjBFC,4BAiBE,aAhBFC,kCAgBE,aAfFC,wBAeE,MAfiB,wBAejB,MAdFC,wBAcE,MAdiB,wBAcjB,MAbFC,eAaE,MAbQ,wBAaR,MAZFC,oBAYE,MAZa,wBAYb,MAXFC,eAWE,MAXQC,0BAWR,MAVFC,wBAUE,MAViB,IAUjB,MATFC,oBASE,MATa,qBASb,MARFC,sBAQE,MARe,qBAQf,MAPFC,wBAOE,MAPiB,qBAOjB,MANFhM,cAME,MANO,GAMP,MAJJiM,gBAII,KAHFvW,eAGE,OAHO,UAGP,QAFFuF,SAAUiR,QAER,OAF6B,wBAE7B,MACoC5P,mBADpC,wBACG6P,GADH,MACiBC,GADjB,SAEwB9P,oBAFxB,wBAEGwD,GAFH,MAEWuM,GAFX,MAIEC,GAA2B/W,mBAEjCC,qBAAU,WACR,GAAU4W,GAAgBhS,IAAhBgS,MACT,CAFH5W,IAIA,IAAM+W,GAAgBjR,mBAAQ,kBAAM7F,YAAN,MAA9B,IAEMW,GAAcgE,MAApB,OA+BA,OACE,uBACE0G,WACE,uBACE3F,SADF,EAEE2E,OAFF,GAGEE,OAHF,EAIED,KACE,sBACEzK,IADF,GAEE+I,cAAY,oBAEZ,uBACEpE,KADF,GAEE4R,iBAFF,EAGEX,kBAHF,EAIEE,eAJF,EAKEE,2BALF,EAMEQ,aANF,EAOEE,iBAPF,EAQED,eARF,EASEV,qBATF,EAUEJ,eAVF,EAWEuB,cA1BY,kBAAMH,IAAN,IA2BZZ,QAZF,EAaEC,aAtDiB,SAACe,GAC9B,IAAMhL,EAAeD,EAAkBiL,EAAvC,IACA,IACEL,MACAV,OAmDUgB,cAAe,aAEflB,iBAhBF,EAiBEmB,eAAgB,mBAtCH,SAACzP,GACrBoP,oBAA0CpP,EAA/C,SACEmP,OAoCqCO,CAAX,IAChBrB,iBAlBF,EAmBEI,QAnBF,EAoBER,mBAAoBA,IAEtB,0BACE,kCACEhQ,SADF,EAEEzF,OAFF,GAGE2T,WAHF,EAIEsB,kBAJF,EAKEP,aA7DK,SAACyC,GACpB,IAAMpL,EAAeD,EAAkB2K,GAAvC,GACAD,MACAE,OA2DcvW,aANF,EAOE4C,KAAM0T,IAvChB,OA6CE5Q,QAlDW,kBAAM8Q,IAAN,IAmDXlN,SAAUA,KAId,uBACE2N,gBAAiB,gBAAaC,EAAb,WAA8BC,EAA9B,mCACf,oCACE,kCACE7R,SADF,EAEEzF,OAFF,aAGEuF,SAAU,mBAAkB8R,EAAlB,KAHZ,GAKEnS,aAAcxE,GALhB,IAMEuE,aAAcvE,GAAc,OAE9B,kCACE+E,SADF,EAEEzF,OAFF,QAGEuF,SAAU,mBAAU8R,EAAV,KAbC,MAkBjBE,qBAnBF,EAoBE9R,SApBF,EAqBEF,SAzFoB,SAACiS,GACzBd,MACAF,MACAR,MAuFI/R,YAtBF,EAuBEtE,MAAO8W,OCpKAgB,GAGXC,EAHFzT,YACW0T,GAETD,EAFFlS,UACIoS,GACFF,EADF7L,GAGIgM,GAAmB,SAAC,GA8BpB,QA7BJvM,sBA6BI,MA7Ba,GA6Bb,MA5BJ9F,iBA4BI,MA5BQmS,GA4BR,MA3BJ9L,UA2BI,MA3BC+L,GA2BD,MA1BJ3T,mBA0BI,MA1BUwT,GA0BV,MAzBJlT,YAyBI,MAzBGG,MAyBH,MAxBJ4Q,uBAwBI,MAxBc,CAChB7P,UADgB,EAEhB8P,eAFgB,EAGhB9L,UAHgB,EAIhB+L,mBAJgB,EAKhBC,mBALgB,EAMhBC,eANgB,EAOhBC,sBAPgB,EAQhBC,4BARgB,EAShBC,iBAAkB,wBAClBC,iBAAkB,wBAClBC,QAAS,wBACTC,aAAc,wBACdC,QAbgB,0BAchBE,iBAdgB,IAehBC,aAAc,qBACdC,eAAgB,qBAChBC,iBAAkB,qBAClBhM,OAAQ,IAMN,MAJJiM,uBAII,MAJc,CAChBvW,OADgB,UAEhBuF,SAAU,yBAER,EACIuS,EAAiB7N,YAA0B,iBAAD,EAGhD,CACE4B,OALA,aAQJ,OACE,qCAAKrG,UAAWsS,GAAhB,GACE,sBACEvT,KADF,EAEE+Q,gBAFF,EAGErR,YAHF,EAIEsS,gBAAiBA,MAQzBsB,aAA6B,CAC3BvM,eAAgBrC,IADW,OAE3BzD,UAAWyD,IAFgB,OAG3B4C,GAAI5C,IAHuB,OAO3B1E,KAAM0E,oBAPqB,KAW3BqM,gBAAiB,UAAgB,CAC/B7P,SAAUwD,IADqB,KAE/BsM,eAAgBtM,IAFe,OAG/BQ,SAAUR,IAHqB,KAI/BuM,kBAAmBvM,IAJY,KAK/BwM,mBAAoBxM,IALW,OAM/ByM,eAAgBzM,IANe,OAO/B0M,qBAAsB1M,IAPS,KAQ/B2M,2BAA4B3M,IARG,KAS/B4M,iBAAkB5M,IATa,KAU/B6M,iBAAkB7M,IAVa,KAW/B8M,QAAS9M,IAXsB,KAY/B+M,aAAc/M,IAZiB,KAa/BgN,QAAS,UAAgB,CACvB8B,cAAe9O,IADQ,OAEvB+O,gBAAiB/O,IAFM,OAGvBgP,WAAYhP,IAHW,OAIvBiP,eAAgBjP,IAJO,OAKvBkP,gBAAiBlP,IALM,OAMvBmP,gBAAiBnP,IANM,OAOvBoP,kBAAmBpP,IAPI,OAQvBqP,2BAA4BrP,IARL,OASvB2M,2BAA4B3M,IATL,OAUvBsP,cAAetP,IAVQ,OAWvBuP,SAAUvP,IAXa,OAYvBwP,oBAAqBxP,IAZE,OAavByP,iBAAkBzP,IAbK,OAcvB0P,eAAgB1P,IAdO,OAevB2P,QAAS3P,IAfc,OAgBvB4P,OAAQ5P,IAhBe,OAiBvB6P,aAAc7P,IAjBS,OAkBvB8P,kBAAmB9P,IAlBI,OAmBvB+P,kBAAmB/P,IAnBI,OAoBvBgQ,mBAAoBhQ,IApBG,OAqBvBiQ,oBAAqBjQ,IArBE,OAsBvBkQ,6BAA8BlQ,IAtBP,OAuBvBmQ,mBAAoBnQ,IAvBG,OAwBvBoQ,+BAAgCpQ,IAxBT,OAyBvBqQ,yBAA0BrQ,IAzBH,KA0BvBsQ,uBAAwBtQ,IA1BD,KA2BvBuQ,kBAAmBvQ,IA3BI,KA4BvBwQ,eAAgBxQ,IA5BO,KAgCvBqB,OAAQrB,IAAU1I,SAEpB4V,iBAAkBlN,IA/Ca,OAgD/BmN,aAAcnN,IAhDiB,KAiD/BoN,eAAgBpN,IAjDe,KAkD/BqN,iBAAkBrN,IAAUsH,OAK9BtM,YAAagF,IAlEc,OAsE3BsN,gBAAiB,UAAgB,CAC/BvW,OAAQiJ,IADuB,OAE/B1D,SAAU0D,IAAUsH,Q","file":"static/js/6.8e68afe7.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport default usePrevious;\n","import { padStart } from './utils';\n\nexport const getVisibleTimeByFormat = format => ({\n  showHours:\n    format.indexOf('H') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('k') > -1,\n  showMinutes: format.indexOf('m') > -1,\n  showSeconds: format.indexOf('s') > -1,\n  use12Hours:\n    format.indexOf('A') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('a') > -1,\n});\n\nexport const addLeadingZeros = count => number =>\n  padStart(String(number), count, '0');\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport moment from 'moment';\n\nconst currentYear = new Date().getFullYear();\n\nexport const isArrowIncrementDecrement = key =>\n  key === 'ArrowDown' || key === 'ArrowUp';\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros, leadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros\n    ? addLeadingZeros(leadingZeros)(value)\n    : String(value);\n};\n\nexport const formatDay = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('DD') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 2);\n};\nexport const formatYear = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('YYYY') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 4);\n};\nexport const formatMonth = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('MM') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros, 2);\n};\n\nexport const parseTimeNumberFromText = stringValue => {\n  const parsedInt = parseInt(stringValue);\n\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\n// trigger onBlur for entire DateInput control if focus is not in day, month, year\nexport const triggerOnBlur = (blurEvent, onBlur = () => {}) => {\n  const { target: currentEl = {}, relatedTarget } = blurEvent || {};\n  const nextElement = currentEl.nextElementSibling;\n  const { nextElementSibling } = nextElement || {};\n  // relatedTarget points to the element that is currently having focus\n  if (!nextElementSibling || nextElementSibling !== relatedTarget) {\n    onBlur(blurEvent);\n  }\n};\n\nexport const focusNextInput = currentEl => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = currentEl => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = (\n  { min, max },\n  number,\n  valueString = '',\n  onError,\n) => {\n  if (valueString === '0') return number;\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    onError();\n    return max;\n  }\n  if (number < min) {\n    onError();\n    return min;\n  }\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  if (stringValue.length > 1) return true;\n  return number * 10 > max;\n};\n\nexport const getDateValuesFromTime = (time, format) => {\n  if (!time) return {};\n  const month = time.format('MM');\n  const day = time.format('DD');\n  const year = time.format('YYYY');\n  return {\n    month: formatMonth(format, month),\n    day: formatDay(format, day),\n    year: formatYear(format, year),\n  };\n};\n\nexport const resetTimeValues = () => ({\n  month: '',\n  day: '',\n  year: '',\n});\n\nexport const onInputFocus = e => {\n  e.preventDefault();\n  e.stopPropagation();\n  e.target.select();\n};\n\nexport const getNextTimeValue = (\n  value,\n  target,\n  yearMinRange,\n  yearMaxRange,\n  step = 1,\n  incrementing = true,\n) => {\n  const parsedValue = parseTimeNumberFromText(value);\n  let result = incrementing ? parsedValue + step : parsedValue - step;\n  if (target === 'year') {\n    if (result < yearMinRange) result = currentYear;\n    if (result > yearMaxRange) result = currentYear;\n  }\n  return result;\n};\n\nexport const focusNextInputIfNeeded = (\n  currentEl,\n  max,\n  number,\n  stringValue,\n  currentKey,\n) => {\n  if (\n    shouldFocusNextInput(max, number, stringValue) &&\n    !isArrowIncrementDecrement(currentKey)\n  ) {\n    focusNextInput(currentEl);\n  }\n};\n\nexport const commonInputProps = (digits = 2, onKeyDown, placeholder) => {\n  const props = {\n    pattern: '[0-9]*',\n    placeholder,\n    type: 'text',\n    onKeyDown,\n    onFocus: onInputFocus,\n  };\n  if (digits === 4) props.placeholder = 'YYYY';\n  return props;\n};\n\nexport const handleCompletedDate = (time, date, show) => {\n  const newDate = time || moment();\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n\n  if (time && !year && !month && !day) return '';\n\n  newDate.value = `${year}-${month}-${day}`;\n\n  if (showMonth && month) newDate.month(parseInt(month - 1, 10));\n  if (showDay && day) newDate.date(parseInt(day, 10));\n  if (showYear && year) newDate.year(parseInt(year, 10));\n\n  return newDate;\n};\n\nexport const isTimeCompletelySet = (date, show, range) => {\n  let neededValues = [];\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n  const { yearMinRange, yearMaxRange } = range;\n\n  if (showMonth) neededValues = [...neededValues, month || null];\n  if (showDay) neededValues = [...neededValues, day || null];\n  if (showYear) neededValues = [...neededValues, year || null];\n\n  const isValidYear = year < yearMaxRange && year > yearMinRange;\n\n  return !neededValues.some(value => !value) && isValidYear;\n};\n","import React, { useRef, useMemo } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DateInputs from './DateInputs';\n\nconst blockName = 'input-time';\n\nconst DateInputContainer = aggregatedClasses('div')(blockName);\n\nconst getVisibleTimeByFormat = format => ({\n  showMonth: format.indexOf('MM') > -1 || format.indexOf('M') > -1,\n  showDay: format.indexOf('DD') > -1 || format.indexOf('D') > -1,\n  showYear: format.indexOf('YYYY') > -1,\n});\n\nconst DateInputImpl = ({\n  format,\n  innerRef,\n  onBlur,\n  onChange,\n  onKeyDown,\n  onError,\n  className,\n  value,\n  disabled,\n  yearMaxRange,\n  yearMinRange,\n  onFocus,\n}) => {\n  const inputContainerRef = useRef();\n\n  const handleFocus = e => {\n    onFocus();\n    if (!e.target.type) {\n      inputContainerRef.current.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeByFormat(format));\n\n  return (\n    <DateInputContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <DateInputs\n        disabled={disabled}\n        format={format}\n        innerRef={inputContainerRef}\n        onBlur={onBlur}\n        onChange={onChange}\n        onCustomKeyDown={onKeyDown}\n        onError={onError}\n        time={value}\n        yearMaxRange={yearMaxRange}\n        yearMinRange={yearMinRange}\n        {...visibleInputs}\n      />\n    </DateInputContainer>\n  );\n};\n\nexport default DateInputImpl;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.5 13a.503.503 0 0 1-.313-.109l-5-4a.5013.5013 0 0 1-.078-.703c.173-.214.488-.25.703-.078L9.5 11.86l4.688-3.75c.218-.172.531-.136.703.078.172.216.138.53-.078.703l-5 4A.501.501 0 0 1 9.5 13z',\n  ],\n  height: 20,\n  width: 20,\n});\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable indent */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport {\n  formatMonth,\n  formatDay,\n  formatYear,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getDateValuesFromTime,\n  getNextTimeValue,\n  focusNextInputIfNeeded,\n  commonInputProps,\n  handleCompletedDate,\n  triggerOnBlur,\n  isTimeCompletelySet,\n} from './utils';\n\nconst blockName = 'input-date-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst MonthInput = aggregatedClasses('input')(blockName, 'input input-month');\nconst DayInput = aggregatedClasses('input')(blockName, 'input input-day');\nconst YearInput = aggregatedClasses('input')(blockName, 'input input-year');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst DateDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst DateInputs = ({\n  innerRef,\n  onBlur,\n  onChange,\n  onCustomKeyDown,\n  onError,\n  format = '',\n  showMonth = true,\n  showDay = true,\n  showYear = true,\n  step = 1,\n  yearMaxRange,\n  disabled,\n  yearMinRange,\n  time,\n}) => {\n  const [currentKey, setCurrentKey] = useState('ArrowUp');\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n  const [year, setYear] = useState('');\n  const prevTime = usePrevious(time);\n  const prevFormat = usePrevious(format);\n\n  let digits = 2;\n  let placeholder = '';\n\n  useEffect(() => {\n    if (time) {\n      const dateValues = getDateValuesFromTime(time, format);\n      setMonth(dateValues.month);\n      setDay(dateValues.day);\n      setYear(dateValues.year);\n    }\n  }, [time]);\n\n  useEffect(() => {\n    if (!time && prevTime) {\n      setMonth('');\n      setDay('');\n      setYear('');\n      onChange('');\n    }\n    if (\n      time &&\n      prevTime &&\n      time.format(format) !== prevTime.format(prevFormat)\n    ) {\n      const dateValues = getDateValuesFromTime(time, format);\n\n      setMonth(dateValues.month);\n      setDay(dateValues.day);\n      setYear(dateValues.year);\n    }\n  }, [time, prevTime, format]);\n\n  const isCompletedDate = () =>\n    isTimeCompletelySet(\n      { year, month, day },\n      { showYear, showMonth, showDay },\n      { yearMinRange, yearMaxRange },\n    );\n\n  const triggerChange = () =>\n    handleCompletedDate(\n      time,\n      { year, month, day },\n      { showYear, showMonth, showDay },\n    );\n\n  // eslint-disable-next-line complexity\n  const onKeyDown = (event, shouldIncrementDecrement = true) => {\n    const { value, name } = event.target;\n    switch (event.key) {\n      case 'ArrowLeft': {\n        event.preventDefault();\n        focusPreviousInput(event.target);\n        break;\n      }\n      case 'ArrowUp': {\n        if (shouldIncrementDecrement) {\n          event.preventDefault();\n          setCurrentKey(event.key);\n          const incrementedValue = getNextTimeValue(\n            value,\n            name,\n            yearMinRange,\n            yearMaxRange,\n            step,\n            true,\n          );\n          setNativeValue(event.target, incrementedValue);\n        }\n        break;\n      }\n      case 'ArrowDown': {\n        if (shouldIncrementDecrement) {\n          event.preventDefault();\n          setCurrentKey(event.key);\n          const decrementedValue = getNextTimeValue(\n            value,\n            name,\n            yearMinRange,\n            yearMaxRange,\n            step,\n            false,\n          );\n          setNativeValue(event.target, decrementedValue);\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        event.preventDefault();\n        focusNextInput(event.target);\n        break;\n      }\n      case 'Backspace': {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case 'Enter': {\n        if (onCustomKeyDown && isCompletedDate())\n          onCustomKeyDown(event, triggerChange());\n        setCurrentKey(null);\n        break;\n      }\n      default:\n        if (onCustomKeyDown) onCustomKeyDown(event);\n        setCurrentKey(null);\n    }\n  };\n\n  const handleYearChange = (e) => {\n    const { value } = e.target;\n    const yearValue = parseTimeNumberFromText(value);\n    const yearRange = { min: 1, max: 9999 };\n    const nextYear = getValidTimeNumber(yearRange, yearValue, value, onError);\n\n    setYear(formatYear(format, nextYear));\n    if (isCompletedDate()) onChange(triggerChange());\n    focusNextInputIfNeeded(\n      e.target,\n      yearRange.max,\n      nextYear,\n      value,\n      currentKey,\n    );\n  };\n  const handleMonthChange = (e) => {\n    const { value } = e.target;\n    const monthValue = parseTimeNumberFromText(value);\n    const monthRange = { min: 1, max: 12 };\n    const nextMonth = getValidTimeNumber(\n      monthRange,\n      monthValue,\n      value,\n      onError,\n    );\n\n    setMonth(formatMonth(format, nextMonth));\n    if (isCompletedDate()) onChange(triggerChange());\n    focusNextInputIfNeeded(\n      e.target,\n      monthRange.max,\n      nextMonth,\n      value,\n      currentKey,\n    );\n  };\n  const handleDayChange = (e) => {\n    const { value } = e.target;\n    const dayValue = parseTimeNumberFromText(value);\n    const dayRange = { min: 1, max: 31 };\n    const nextDay = getValidTimeNumber(dayRange, dayValue, value, onError);\n\n    setDay(formatDay(format, nextDay));\n    if (isCompletedDate()) onChange(triggerChange());\n    if (value !== day)\n      focusNextInputIfNeeded(\n        e.target,\n        dayRange.max,\n        nextDay,\n        value,\n        currentKey,\n      );\n  };\n  const renderMonthInput = () => {\n    if (!showMonth) return null;\n    placeholder = 'MM';\n    const onMonthInputBlur = (e) => {\n      handleMonthChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <MonthInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"month-input\"\n        data-testid=\"month\"\n        disabled={disabled}\n        name=\"month\"\n        onBlur={onMonthInputBlur}\n        onChange={handleMonthChange}\n        value={month}\n      />\n    );\n  };\n  const renderDayInput = () => {\n    if (!showDay) return null;\n    placeholder = 'DD';\n    const onDayInputBlur = (e) => {\n      handleDayChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DayInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"day-input\"\n        data-testid=\"day\"\n        disabled={disabled}\n        name=\"day\"\n        onBlur={onDayInputBlur}\n        onChange={handleDayChange}\n        value={day}\n      />\n    );\n  };\n  const renderYearInput = () => {\n    if (!showYear) return null;\n    placeholder = 'YY';\n    digits = 4;\n    const onYearInputBlur = (e) => {\n      handleYearChange(e);\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <YearInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autocomplete=\"off\"\n        key=\"seconds-input\"\n        data-testid=\"year\"\n        disabled={disabled}\n        name=\"year\"\n        onBlur={onYearInputBlur}\n        onChange={handleYearChange}\n        value={year}\n      />\n    );\n  };\n\n  const renderDateInputs = () => {\n    const inputs = [renderMonthInput(), renderDayInput(), renderYearInput()];\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <DateDivider\n                  key={index}\n                  content=\" / \"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderDateInputs()}</InputTimesGroup>\n  );\n};\n\nDateInputs.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.bool,\n  onChange: PropTypes.func,\n  onCustomKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  time: PropTypes.instanceOf(Moment),\n};\n\nexport default DateInputs;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../utils/prop-types';\n\nconst Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  ...rest\n}) => (\n  <DSButton\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n  />\n);\n\nPicker.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n};\nexport default Picker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker from './DatePickerPicker/DatePickerPicker';\n\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n};\n\nexport default DatePickerDropdown;\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nDSInputGroup.propTypes = {\n  containerProps: PropTypes.shape({}),\n  innerRef: PropTypes.func,\n  className: PropTypes.string,\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element,\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element,\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element,\n};\n\nexport default DSInputGroup;\n","export default {\n  placeholder: 'Select date and time',\n  className: '',\n  id: '',\n};\n","import moment from 'moment';\n\nexport const updateDateAndTime = (date, time) => {\n  const splittedDate = moment();\n  splittedDate.month(date.get('month'));\n  splittedDate.year(date.get('year'));\n  splittedDate.date(date.get('date'));\n  splittedDate.hour(time.get('hour'));\n  splittedDate.minute(time.get('minute'));\n  splittedDate.second(time.get('second'));\n\n  return splittedDate;\n};\n","export const AM = 'am';\nexport const PM = 'pm';\nexport const ARROW_UP = 'ArrowUp';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const BACKSPACE = 'Backspace';\nexport const ESCAPE = 'Escape';\nexport const HOME = 'Home';\nexport const SHIFT = 'Shift';\nexport const END = 'End';\nexport const HOUR_RANGE_12 = { min: 0, max: 12 };\nexport const HOUR_RANGE_24 = { min: 0, max: 24 };\nexport const GENERAL_TIME_RANGE = { min: 0, max: 59 };\nexport const PLACEHOLDER_TIME = {\n  hour: 'hour',\n  minutes: 'minutes',\n  seconds: 'seconds',\n  meridiem: 'meridiem',\n};\n","export const validateIndex = (index, options) => {\n  if (index < 0) return 0;\n  if (index >= options.length) return options.length - 1;\n  return index;\n};\n\nexport const getOptionIndex = (\n  options,\n  selectedOption,\n  valueProperty = 'value',\n) => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nexport const isAM = time => time && time.hour() < 12;\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport { isAM } from '../../TimePicker/utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  SHIFT,\n  PLACEHOLDER_TIME,\n} from '../../utils/constants';\n\nexport const isArrowIncrementDecrement = key =>\n  key === ARROW_DOWN || key === ARROW_UP || key === SHIFT;\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nexport const placeholderFormat = (position, format, use12Hours) => {\n  if (position === PLACEHOLDER_TIME.hour) {\n    return _placeholderHour(format, use12Hours);\n  }\n  if (position === PLACEHOLDER_TIME.minutes) {\n    return format.indexOf('mm') > -1 ? 'mm' : 'm';\n  }\n  if (position === PLACEHOLDER_TIME.seconds) {\n    return format.indexOf('ss') > -1 ? 'ss' : 's';\n  }\n  if (position === PLACEHOLDER_TIME.meridiem) {\n    return format.indexOf('A') > -1 ? 'A' : 'a';\n  }\n};\n\nconst _placeholderHour = (format, use12Hours) => {\n  if (use12Hours) {\n    return format.indexOf('hh') > -1 ? 'hh' : 'h';\n  }\n  return format.indexOf('HH') > -1 ? 'HH' : 'H';\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros ? addLeadingZeros(2)(value) : String(value);\n};\n\nexport const formatMinutes = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('mm') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatSeconds = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('ss') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatHour = (format, value) => {\n  const shouldAddLeadingZeros =\n    format.indexOf('HH') > -1 || format.indexOf('hh') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\n\nexport const formatMeridiem = (format, value) =>\n  format.indexOf('A') > -1 ? value.toUpperCase() : value.toLowerCase();\n\nexport const parseTimeNumberFromText = stringValue => {\n  const parsedInt = parseInt(stringValue);\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\nexport const focusNextInput = currentEl => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = currentEl => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = ({ min, max }, number, typed) => {\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    if (isNaN(typed)) return parseInt(typed);\n    return max;\n  }\n  if (number < min) return min;\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  const safeString = String(stringValue);\n  const cleanString = safeString.startsWith('00')\n    ? safeString.slice(1)\n    : safeString;\n  return number * 10 > max || String(max).length === cleanString.length;\n};\n\nexport const getTimeValuesFromTime = (time, format, use12Hours) => {\n  if (!time) return {};\n  const hours = use12Hours ? time.hour() % 12 || 12 : time.hour();\n  const minutes = time.minutes();\n  const seconds = time.seconds();\n  const meridiem = !isAM(time) ? PM : AM;\n\n  return {\n    hours: formatHour(format, hours),\n    minutes: formatMinutes(format, minutes),\n    seconds: formatSeconds(format, seconds),\n    meridiem,\n  };\n};\n\nexport const resetTimeValues = () => ({\n  hours: '',\n  minutes: '',\n  seconds: '',\n  meridiem: AM,\n});\n\nexport const commonInputProps = (onKeyDown, onInputFocus, onClick) => ({\n  pattern: '[0-9]*',\n  type: 'text',\n  onKeyDown,\n  onClick,\n  onFocus: onInputFocus,\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useEffect, useState } from 'react';\nimport usePrevious from '@elliemae/ds-utilities/hooks/usePrevious';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  formatHour,\n  formatMinutes,\n  formatSeconds,\n  formatMeridiem,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getTimeValuesFromTime,\n  isArrowIncrementDecrement,\n  shouldFocusNextInput,\n  placeholderFormat,\n} from './utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  BACKSPACE,\n  ESCAPE,\n  HOME,\n  HOUR_RANGE_12,\n  HOUR_RANGE_24,\n  GENERAL_TIME_RANGE,\n  END,\n  PLACEHOLDER_TIME,\n  SHIFT,\n} from '../../utils/constants';\n\nconst blockName = 'input-times-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst TimeInput = aggregatedClasses('input')(blockName, 'input');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst TimeDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst TimeInputs = ({\n  time,\n  format,\n  use12Hours,\n  step = 1,\n  showHours,\n  showMinutes,\n  showSeconds,\n  onChange,\n  disabled,\n  innerRef,\n  'arial-label': ariaLabel,\n}) => {\n  const [meridiem, setMeridiem] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [seconds, setSeconds] = useState('');\n  const [currentKey, setCurrentKey] = useState('');\n  const [lastTypedNumber, setLastTypedNumber] = useState(null);\n  const [timeSelected, setTimeSelected] = useState(time);\n  const prevTime = usePrevious(time);\n  const inputRefs = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null,\n  };\n\n  useEffect(() => {\n    if (time) {\n      const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, []);\n\n  useEffect(() => {\n    const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n    if (!time && prevTime) {\n      setMeridiem('');\n      setHours('');\n      setMinutes('');\n      setSeconds('');\n    }\n\n    if (time && prevTime) {\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    }\n  }, [time, prevTime, format, use12Hours]);\n\n  const focusNextInputIfNeeded = (currentEl, max, number) => {\n    if (\n      shouldFocusNextInput(max, number, currentEl.value) &&\n      !isArrowIncrementDecrement(currentKey) &&\n      !hasInputValue\n    ) {\n      focusNextInput(currentEl);\n    }\n  };\n\n  const getNextTimeValue = (value, incrementing = true) => {\n    const parsedValue = parseTimeNumberFromText(value);\n    return incrementing ? parsedValue + step : parsedValue - step;\n  };\n\n  const onInputFocus = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.select();\n  };\n\n  const onClick = (e) => {\n    if (e.target.value) {\n      setHasInputValue(true);\n    }\n  };\n\n  // eslint-disable-next-line max-statements\n  const onKeyDown = (event, max) => {\n    const { target } = event;\n    const { value } = target;\n    setLastTypedNumber(event.key);\n    switch (event.key) {\n      case ARROW_UP: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const incrementedValue = getNextTimeValue(value);\n        setNativeValue(event.target, incrementedValue);\n        break;\n      }\n      case ARROW_DOWN: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const decrementedValue = getNextTimeValue(value, false);\n        setNativeValue(event.target, decrementedValue);\n        break;\n      }\n      case BACKSPACE: {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case ESCAPE: {\n        event.preventDefault();\n        event.target.blur();\n        break;\n      }\n      case HOME: {\n        event.preventDefault();\n        setNativeValue(event.target, String(max));\n        focusNextInput(event.target);\n        break;\n      }\n      case END: {\n        event.preventDefault();\n        setNativeValue(event.target, '00');\n        focusNextInput(event.target);\n        break;\n      }\n      case SHIFT:\n        event.preventDefault();\n        setCurrentKey(event.key);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isTimeCompletelySet = () => {\n    let neededValues = [];\n\n    if (showHours) neededValues = [...neededValues, hours || null];\n    if (showMinutes) neededValues = [...neededValues, minutes || null];\n    if (showSeconds) neededValues = [...neededValues, seconds || null];\n    if (use12Hours) neededValues = [...neededValues, meridiem || null];\n\n    return !neededValues.some((value) => !value);\n  };\n\n  // eslint-disable-next-line complexity\n  useEffect(() => {\n    const selectedTime = time || moment();\n    if (isTimeCompletelySet()) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      setTimeSelected(selectedTime);\n    }\n  }, [hours, minutes, seconds, meridiem]);\n\n  const handleSecondsChange = (e) => {\n    const { value } = e.target;\n    const secondsHandled = parseTimeNumberFromText(value);\n\n    const nextSeconds = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      secondsHandled,\n      lastTypedNumber,\n    );\n\n    setSeconds(formatSeconds(format, nextSeconds));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleMinutesChange = (e) => {\n    const { value } = e.target;\n    const minutesHandled = parseTimeNumberFromText(value);\n    const nextMinutes = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      minutesHandled,\n      lastTypedNumber,\n    );\n\n    setMinutes(formatMinutes(format, nextMinutes));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleHoursChange = (e) => {\n    const { value } = e.target;\n    const hour = parseTimeNumberFromText(value);\n    const hoursRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    const nextHour = getValidTimeNumber(hoursRange, hour, lastTypedNumber);\n    setHours(formatHour(format, nextHour));\n    onChange(timeSelected);\n    focusNextInputIfNeeded(e.target, hoursRange.max, value);\n  };\n\n  const handleMeridiemKeyDown = (e) => {\n    if (e.key === ARROW_UP || e.key === 'a') {\n      setMeridiem(formatMeridiem(format, AM));\n    } else if (e.key === ARROW_DOWN || e.key === 'p') {\n      setMeridiem(formatMeridiem(format, PM));\n    } else if (e.key === SHIFT) {\n      setCurrentKey(e.key);\n    } else if (e.key === BACKSPACE) {\n      setMeridiem('');\n    }\n    onChange(timeSelected);\n  };\n\n  const handleMeridiemBlur = (e) => {\n    const { value } = e.target;\n    if (value !== AM && value !== PM) {\n      setMeridiem('');\n    }\n  };\n\n  const renderSecondsInput = () => {\n    if (!showSeconds) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"seconds-input\"\n        data-testid=\"ds-time-input__seconds\"\n        aria-label={ariaLabel || 'Seconds Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.seconds = node)}\n        onChange={handleSecondsChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.seconds, format)}\n        value={seconds}\n      />\n    );\n  };\n\n  const renderMinutesInput = () => {\n    if (!showMinutes) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"minutes-input\"\n        data-testid=\"ds-time-input__minutes\"\n        aria-label={ariaLabel || 'Minutes Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.minutes = node)}\n        onChange={handleMinutesChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.minutes, format)}\n        value={minutes}\n      />\n    );\n  };\n\n  const renderHoursInput = () => {\n    if (!showHours) return null;\n    const hourFormatRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, hourFormatRange.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"hour-input\"\n        data-testid=\"ds-time-input__hours\"\n        aria-label={ariaLabel || 'Hours Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.hours = node)}\n        onChange={handleHoursChange}\n        placeholder={placeholderFormat(\n          PLACEHOLDER_TIME.hour,\n          format,\n          use12Hours,\n        )}\n        value={hours}\n      />\n    );\n  };\n\n  const renderMeridiemInput = () => {\n    if (!use12Hours) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps}\n        key=\"meridiem-input\"\n        data-testid=\"ds-time-input__ampm\"\n        aria-label={ariaLabel || 'Meridiem Input'}\n        disabled={disabled}\n        onBlur={handleMeridiemBlur}\n        onKeyDown={handleMeridiemKeyDown}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.meridiem, format)}\n        value={meridiem}\n      />\n    );\n  };\n\n  const renderTimeInputs = () => {\n    const inputs = [\n      renderHoursInput(),\n      renderMinutesInput(),\n      renderSecondsInput(),\n    ];\n    /* eslint-disable indent */\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <TimeDivider\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={index}\n                  content=\":\"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n    /* eslint-enable indent */\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n      renderMeridiemInput(),\n    ];\n  };\n\n  return (\n    <InputTimesGroup innerRef={innerRef}>{renderTimeInputs()}</InputTimesGroup>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useRef, useMemo } from 'react';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport memoizeOne from 'memoize-one';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport TimeInputs from './TimeInputs';\n\nconst blockName = 'input-time';\n\nconst InputTimeContainer = aggregatedClasses('div')(blockName);\n\nconst TimeInputImpl = ({\n  format,\n  innerRef,\n  onChange,\n  className,\n  value,\n  disabled,\n  'arial-label': ariaLabel,\n}) => {\n  const getVisibleTimeInputs = memoizeOne(formatValue =>\n    getVisibleTimeByFormat(formatValue),\n  );\n  let inputsContainer = useRef();\n\n  const handleFocus = e => {\n    if (!e.target.type) {\n      inputsContainer.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeInputs(format));\n\n  return (\n    <InputTimeContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <TimeInputs\n        aria-label={ariaLabel}\n        disabled={disabled}\n        format={format}\n        innerRef={node => (inputsContainer = node)}\n        onChange={onChange}\n        time={value}\n        {...visibleInputs}\n      />\n    </InputTimeContainer>\n  );\n};\n\nexport default TimeInputImpl;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.499 6.969a.503.503 0 0 0-.313.109l-5 4a.5013.5013 0 0 0-.078.703c.173.214.488.25.703.078l4.688-3.75 4.688 3.75c.218.172.531.136.703-.078a.5004.5004 0 0 0-.078-.703l-5-4a.501.501 0 0 0-.313-.109z',\n  ],\n  height: 20,\n  width: 20,\n});\n","export function MoveElementOnScroll(\n  element,\n  {\n    container,\n    min = 0,\n    max = element.offsetHeight,\n    speed = 1,\n    smooth = 2,\n    onUpdate = () => null,\n    onEndScroll = () => null,\n  },\n) {\n  let moving = false;\n  let pos = min;\n  let lastPos = pos;\n\n  // todo: move this to utils if we finally need it\n  const requestFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(func) {\n        window.setTimeout(func, 1000 / 50);\n      }\n    );\n  })();\n\n  function update() {\n    moving = true;\n    const delta = (pos - lastPos) / smooth;\n    lastPos += delta;\n\n    if (Math.abs(delta) > 0.7) {\n      requestFrame(() => {\n        onUpdate(lastPos, delta);\n        update();\n      });\n    } else {\n      onEndScroll(pos);\n      moving = false;\n    }\n  }\n\n  function scrolling(e) {\n    e.preventDefault(); // disable default scrolling\n    let delta = e.delta || e.wheelDelta;\n    if (delta === undefined) {\n      // for firefox\n      delta = -e.detail;\n      delta *= 10 * speed;\n    }\n\n    pos += -delta * speed;\n    pos = Math.max(min, Math.min(pos, max)); // limit scrolling\n    if (!moving) {\n      update();\n    }\n  }\n\n  container.addEventListener('mousewheel', scrolling, false);\n  container.addEventListener('DOMMouseScroll', scrolling, false);\n\n  return {\n    unsubscribe: () => {\n      container.removeEventListener('mousewheel', scrolling);\n      container.removeEventListener('DOMMouseScroll', scrolling);\n    },\n    updatePosition: newPos => {\n      pos = -newPos;\n      lastPos = -pos;\n    },\n  };\n}\n\nexport default MoveElementOnScroll;\n","/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport { findIndex } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport memoizeOne from 'memoize-one';\nimport ChevronSmallUp from '@elliemae/ds-icons/ChevronSmallUp';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport ChevronSmallDown from '@elliemae/ds-icons/ChevronSmallDown';\nimport { MoveElementOnScroll } from './moveElementOnScroll';\nimport { validateIndex } from './utils';\n\nconst blockName = 'time-picker-panel';\n\nconst Container = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ scrolling }) => ({ scrolling }),\n);\nconst Wrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst PickerItemListContainer = aggregatedClasses('div')(\n  blockName,\n  'item-list-container',\n);\nconst PickerItemList = aggregatedClasses('div')(blockName, 'item-list');\nconst PickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst PickerItemContainer = aggregatedClasses('div')(\n  blockName,\n  'item',\n  ({ selected }) => ({ selected }),\n);\nconst PickerSelectedOptionSelected = aggregatedClasses('div')(\n  blockName,\n  'selected-container',\n);\nconst SelectedCircle = aggregatedClasses('div')(blockName, 'selected-circle');\nconst ArrowButtonContainer = aggregatedClasses('div')(\n  blockName,\n  'arrow-container',\n);\n\nconst getOptionIndex = (options, selectedOption, valueProperty = 'value') => {\n  const index = options.findIndex(\n    option => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nconst arrowProps = {\n  buttonType: 'text',\n  fluidHeight: true,\n  fluidWidth: true,\n  size: 's',\n};\n\nexport default class PickerPanel extends Component {\n  computeContainerTranslation = memoizeOne(index => {\n    const { options, valueProperty } = this.props;\n    const { selectedOption, scrolling } = this.state;\n\n    const selectedOptionIndex =\n      index || getOptionIndex(options, selectedOption, valueProperty);\n    const listYPosition =\n      this.minYListPosition - selectedOptionIndex * this.optionHeight;\n\n    if (this.scrollHandler && !scrolling)\n      this.scrollHandler.updatePosition(listYPosition);\n\n    return listYPosition;\n  });\n\n  static defaultProps = {\n    valueProperty: 'value',\n    labelProperty: 'label',\n    numberItemsOnScreen: 5, // this number should be impair\n    options: [],\n    arrowStep: 5,\n  };\n\n  constructor(props) {\n    super(props);\n    this.pickerListContainerRef = React.createRef();\n    this.pickerListRef = React.createRef();\n    this.pickerItemRef = React.createRef();\n    this.selectedOptionRef = React.createRef();\n\n    this.state = {\n      selectedOption: props.selected,\n      activeIndex: 0,\n      // eslint-disable-next-line react/no-unused-state\n      prevProps: {},\n    };\n  }\n\n  componentDidMount() {\n    this.computeSizes();\n    const pickerListContainerEl = this.pickerListContainerRef.current;\n    const pickerListEl = this.pickerListRef.current;\n\n    this.scrollHandler = new MoveElementOnScroll(pickerListEl, {\n      container: pickerListContainerEl,\n      min: -this.minYListPosition,\n      max: this.maxYListPosition,\n      onUpdate: (pos, delta) => {\n        const { options } = this.props;\n        const index =\n          options.length -\n          -Math.floor((pos - this.maxYListPosition) / this.optionHeight) +\n          (delta > 0 ? 1 : -1);\n        this.moveTo(index, true);\n      },\n      onEndScroll: () => {\n        this.setState({ scrolling: false });\n      },\n    });\n    this.computeContainerTranslation();\n  }\n\n  componentWillUnmount() {\n    this.scrollHandler.unsubscribe();\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevProps }) {\n    const { selected, valueProperty, options } = nextProps;\n    if (selected !== prevProps.selected) {\n      return {\n        selectedOption: selected,\n        activeIndex: getOptionIndex(options, selected, valueProperty),\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  getOptionValue(option) {\n    const { valueProperty } = this.props;\n    return option[valueProperty];\n  }\n\n  getOptionLabel(option) {\n    const { labelProperty } = this.props;\n    return option[labelProperty];\n  }\n\n  moveTo(index, scrolling) {\n    const { options } = this.props;\n    const { selectedOption } = this.state;\n    const validIndex = validateIndex(index, options);\n    const option = options[validIndex];\n    const optionValue = this.getOptionValue(option);\n    if (selectedOption !== optionValue) {\n      this.handleOptionSelect(optionValue, validIndex, scrolling);\n    }\n  }\n\n  computeSizes() {\n    const { options, numberItemsOnScreen } = this.props;\n    const { offsetHeight: optionHeight } = this.pickerItemRef.current;\n\n    this.optionHeight = optionHeight;\n    this.listHeight = this.optionHeight * numberItemsOnScreen;\n\n    this.minYListPosition = this.listHeight / 2 - this.optionHeight / 2;\n    this.maxYListPosition =\n      this.optionHeight * (options.length - Math.ceil(numberItemsOnScreen / 2));\n  }\n\n  handleOptionSelect(optionValue, index, scrolling) {\n    const { onChange } = this.props;\n    this.setState(\n      state => ({\n        ...state,\n        scrolling,\n        selectedOption: optionValue,\n        activeIndex: index,\n      }),\n      () => {\n        onChange(optionValue, index);\n      },\n    );\n  }\n\n  // TODO: this needs a refactor from de FocusGroup\n  // eslint-disable-next-line max-statements\n  handleKeyDown(e) {\n    const { activeIndex } = this.state;\n    const { options } = this.props;\n    const [firstColumn, ...restColumns] = document.getElementsByClassName(\n      'em-ds-time-picker-panel',\n    );\n    const [lastColumn] = restColumns.slice(-1);\n    const [prev] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const focusedElement = document.activeElement;\n\n    switch (e.key) {\n      case 'Home':\n        this.moveTo(0);\n        break;\n      case 'End':\n        this.moveTo(options.length - 1);\n        break;\n      case 'ArrowUp':\n        this.moveTo(activeIndex - 1);\n        break;\n      case 'ArrowDown':\n        this.moveTo(activeIndex + 1);\n        break;\n      case 'Tab': {\n        e.preventDefault();\n        // If it is DateTimePicker, move focus to prev arrow element\n        if (prev && focusedElement === lastColumn) {\n          prev.focus();\n        } else if (focusedElement === lastColumn) {\n          firstColumn.focus();\n        } else {\n          const position = findIndex(restColumns, focusedElement);\n          restColumns[position + 1].focus();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  handleStepMoveUp() {\n    const { activeIndex } = this.state;\n    const { arrowStep } = this.props;\n    const supposedPos = activeIndex - arrowStep;\n    const nextPos = supposedPos >= 0 ? supposedPos : activeIndex - 1;\n    this.moveTo(nextPos);\n  }\n\n  handleStepMoveDown() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex + arrowStep;\n    const nextPos =\n      supposedPos <= options.length ? supposedPos : activeIndex + 1;\n    this.moveTo(nextPos);\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return <PickerHeader>{header}</PickerHeader>;\n  };\n\n  render() {\n    const { options, hasHeader } = this.props;\n    const { selectedOption, activeIndex, scrolling } = this.state;\n\n    const listYPosition = this.computeContainerTranslation(activeIndex);\n\n    return (\n      <Wrapper>\n        {hasHeader && this.renderHeader()}\n        <Container\n          classProps={{ scrolling }}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n        >\n          <PickerSelectedOptionSelected innerRef={this.selectedOptionRef}>\n            <SelectedCircle />\n          </PickerSelectedOptionSelected>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Up\"\n              disabled={activeIndex <= 0}\n              icon={<ChevronSmallUp />}\n              onClick={this.handleStepMoveUp}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n          <PickerItemListContainer\n            innerRef={this.pickerListContainerRef}\n            style={{\n              height: this.listHeight,\n            }}\n          >\n            <PickerItemList\n              innerRef={this.pickerListRef}\n              style={{\n                transform: `translateY(${listYPosition}px)`,\n              }}\n            >\n              {options.map((option, index) => {\n                const value = this.getOptionValue(option);\n                const label = this.getOptionLabel(option);\n                return (\n                  <PickerItemContainer\n                    key={value}\n                    classProps={{\n                      selected: selectedOption\n                        ? value === selectedOption\n                        : index === 0,\n                    }}\n                    innerRef={this.pickerItemRef}\n                    onClick={() => this.handleOptionSelect(value, index)}\n                  >\n                    {label}\n                  </PickerItemContainer>\n                );\n              })}\n            </PickerItemList>\n          </PickerItemListContainer>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Down\"\n              disabled={activeIndex >= options.length}\n              icon={<ChevronSmallDown />}\n              onClick={this.handleStepMoveDown}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from '@elliemae/ds-utilities/utils';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { isAM } from './utils';\nimport PickerPanel from './PickerPanel';\n\nconst blockName = 'time-picker-menu';\n\nconst TimePickerContainer = aggregatedClasses('div')(blockName);\nconst TimePickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst TimePickerPanelContainer = aggregatedClasses('div')(\n  blockName,\n  'panel-container',\n);\n\nconst generateOption = (format) => (option) => ({\n  value: option,\n  label: typeof format === 'function' ? format(option) : option,\n});\n\nexport default class TimePickerMenu extends Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    time: moment(),\n    hasHeader: false,\n    use12Hours: true,\n    showSeconds: true,\n    showMinutes: true,\n    showHours: true,\n    onTimeChange: () => null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: props.time || moment(),\n    };\n  }\n\n  componentDidMount() {\n    const { time } = this.state;\n    this.setState({ time });\n  }\n\n  handleMinuteChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.minute(value));\n  }\n\n  handleHoursChange(value) {\n    const { time } = this.state;\n    const { use12Hours } = this.props;\n    let nextHour = value;\n    if (use12Hours) {\n      if (!isAM(time)) {\n        nextHour = (value % 12) + 12;\n      }\n    }\n    this.updateTime(time.hour(nextHour));\n  }\n\n  handleSecondsChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.second(value));\n  }\n\n  handleAMPMChange(value) {\n    const { time } = this.state;\n    const hour = time.hour();\n    const nextHour =\n      value.toLowerCase() === 'am' ? hour % 12 : (hour % 12) + 12;\n    this.updateTime(time.hour(nextHour));\n  }\n\n  updateTime(time) {\n    const { onTimeChange } = this.props;\n    onTimeChange(time);\n    this.setState({ time });\n  }\n\n  renderMinutesPanel() {\n    const { time } = this.state;\n    const { showMinutes, format, hasHeader } = this.props;\n    if (!showMinutes) return null;\n    const withLeadingZeros = format.indexOf('mm') > -1;\n    const rangeMinutes = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"M\"\n        onChange={this.handleMinuteChange}\n        options={rangeMinutes}\n        selected={time.minute()}\n      />\n    );\n  }\n\n  renderSecondsPanel() {\n    const { time } = this.state;\n    const { showSeconds, format, hasHeader } = this.props;\n    if (!showSeconds) return null;\n    const withLeadingZeros = format.indexOf('ss') > -1;\n    const rangeSeconds = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"S\"\n        onChange={this.handleSecondsChange}\n        options={rangeSeconds}\n        selected={time.second()}\n      />\n    );\n  }\n\n  // eslint-disable-next-line max-lines\n  renderHoursPanel() {\n    const { time } = this.state;\n    const { showHours, use12Hours, format, hasHeader } = this.props;\n    if (!showHours) return null;\n\n    const selectedHour = use12Hours ? time.hour() % 12 || 12 : time.hour();\n\n    const withLeadingZeros = format.indexOf('hh') > -1;\n    const rangeHours = use12Hours ? range(1, 13) : range(24);\n    const hoursOptions = rangeHours.map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"H\"\n        onChange={this.handleHoursChange}\n        options={hoursOptions}\n        selected={selectedHour}\n      />\n    );\n  }\n\n  renderAMPMPanel() {\n    const { time } = this.state;\n    const { use12Hours, hasHeader } = this.props;\n    if (!use12Hours) return null;\n    return (\n      <PickerPanel\n        hasHeader={hasHeader}\n        header=\"\"\n        onChange={this.handleAMPMChange}\n        options={[\n          { value: 'am', label: 'am' },\n          { value: 'pm', label: 'pm' },\n        ]}\n        selected={!isAM(time) ? 'pm' : 'am'}\n      />\n    );\n  }\n\n  renderHeader = () => {\n    const { time } = this.state;\n    return <TimePickerHeader>{time.format('hh:mma')}</TimePickerHeader>;\n  };\n\n  render() {\n    const { hasHeaderDisplay } = this.props;\n\n    return (\n      <TimePickerContainer>\n        {hasHeaderDisplay && this.renderHeader()}\n        <TimePickerPanelContainer>\n          {this.renderHoursPanel()}\n          {this.renderMinutesPanel()}\n          {this.renderSecondsPanel()}\n          {this.renderAMPMPanel()}\n        </TimePickerPanelContainer>\n      </TimePickerContainer>\n    );\n  }\n}\n\nTimePickerMenu.propTypes = {\n  /** Time value */\n  time: PropTypes.instanceOf(moment),\n  /** If the menu has header or not */\n  hasHeader: PropTypes.bool,\n  /** Whether to use the 12 hours format */\n  use12Hours: PropTypes.bool,\n  /** Whether show 'seconds' or not */\n  showSeconds: PropTypes.bool,\n  /** Whether show 'minutes' or not */\n  showMinutes: PropTypes.bool,\n  /** Whether show 'hours' or not */\n  showHours: PropTypes.bool,\n  /** Handler when time changes */\n  onTimeChange: PropTypes.func,\n};\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport moment from 'moment';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport {\n  DSDatePickerController,\n  DatePickerDropdown,\n} from '@elliemae/ds-date-picker';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport DSInput from '@elliemae/ds-basic/form/Input';\nimport { DateInputImpl } from '@elliemae/ds-basic/form/DateInput';\nimport { TimeInputImpl } from '@elliemae/ds-basic/form/TimeInput';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport { Menu } from '@elliemae/ds-basic/TimePicker';\nimport { updateDateAndTime } from '../utils';\n\nconst blockName = 'date-time-picker';\n\nconst DateTimePickerWrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst TimePicker = aggregatedClasses(Menu)(blockName, 'time-picker');\nconst TimePickerWrapper = aggregatedClasses('div')(\n  blockName,\n  'time-picker-wrapper',\n);\nconst DateInput = aggregatedClasses(DateInputImpl)(blockName, 'date-input');\n\nconst DSDateTimePickerImpl = ({\n  placeholder,\n  date,\n  datePickerProps: {\n    disabled = false,\n    numberOfMonths = 1,\n    readOnly = false,\n    enableOutsideDays = false,\n    transitionDuration = 0,\n    firstDayOfWeek = 0,\n    keepOpenOnDateSelect = true,\n    hideKeyboardShortcutsPanel = true,\n    onPrevMonthClick = () => null,\n    onNextMonthClick = () => null,\n    onClose = () => null,\n    onDateChange = () => null,\n    phrases = SingleDatePickerPhrases,\n    displayFormatDay = 'D',\n    isDayBlocked = () => false,\n    isOutsideRange = () => false,\n    isDayHighlighted = () => false,\n    zIndex = 11,\n  },\n  timePickerProps: {\n    format = 'hh:mm A',\n    onChange: onChangeTimePicker = () => null,\n  },\n}) => {\n  const [selectedDate, setSelectedDate] = useState(date);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dateTimePickerWrapperRef = useRef();\n\n  useEffect(() => {\n    if (date) setSelectedDate(moment(date));\n  }, [date]);\n\n  const visiblePanels = useMemo(() => getVisibleTimeByFormat(format), []);\n\n  const currentYear = moment().year();\n\n  const handleDatePickerChange = (dateSelected) => {\n    const splittedDate = updateDateAndTime(dateSelected, selectedDate);\n    if (!readOnly) {\n      setSelectedDate(splittedDate);\n      onDateChange(splittedDate);\n    }\n  };\n\n  const onTimeChange = (pickerTime) => {\n    const splittedDate = updateDateAndTime(selectedDate, pickerTime);\n    onChangeTimePicker(splittedDate);\n    setSelectedDate(splittedDate);\n  };\n\n  const handleInputChange = (inputValue) => {\n    setSelectedDate(inputValue);\n    onChangeTimePicker(inputValue);\n    onDateChange(inputValue);\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!dateTimePickerWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleClickEscape = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  return (\n    <DSInputGroup\n      rightAddon={\n        <DatePickerDropdown\n          disabled={disabled}\n          isOpen={isOpen}\n          zIndex={zIndex}\n          menu={\n            <DateTimePickerWrapper\n              ref={dateTimePickerWrapperRef}\n              data-testid=\"date-time-picker\"\n            >\n              <DSDatePickerController\n                date={selectedDate}\n                displayFormatDay={displayFormatDay}\n                enableOutsideDays={enableOutsideDays}\n                firstDayOfWeek={firstDayOfWeek}\n                hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                isDayBlocked={isDayBlocked}\n                isDayHighlighted={isDayHighlighted}\n                isOutsideRange={isOutsideRange}\n                keepOpenOnDateSelect={keepOpenOnDateSelect}\n                numberOfMonths={numberOfMonths}\n                onClickEscape={handleClickEscape}\n                onClose={onClose}\n                onDateChange={handleDatePickerChange}\n                onFocusChange={() => {}}\n                // eslint-disable-next-line max-lines\n                onNextMonthClick={onNextMonthClick}\n                onOutsideClick={(event) => handleOutsideClick(event)}\n                onPrevMonthClick={onPrevMonthClick}\n                phrases={phrases}\n                transitionDuration={transitionDuration}\n              />\n              <TimePickerWrapper>\n                <TimePicker\n                  disabled={disabled}\n                  format={format}\n                  hasHeader\n                  hasHeaderDisplay\n                  onTimeChange={onTimeChange}\n                  showSeconds={false}\n                  time={selectedDate}\n                  {...visiblePanels}\n                />\n              </TimePickerWrapper>\n            </DateTimePickerWrapper>\n          }\n          onClick={handleOpen}\n          readOnly={readOnly}\n        />\n      }\n    >\n      <DSInput\n        customInputType={({ onChange: handleChange, ...restInputProps }) => (\n          <>\n            <DateInput\n              disabled={disabled}\n              format=\"MM:DD:YYYY\"\n              onChange={(dateSelected) => handleChange(dateSelected)}\n              {...restInputProps}\n              yearMaxRange={currentYear + 100}\n              yearMinRange={currentYear - 100}\n            />\n            <TimeInputImpl\n              disabled={disabled}\n              format=\"hh:mm\"\n              onChange={(time) => handleChange(time)}\n              {...restInputProps}\n            />\n          </>\n        )}\n        isShowElipsisActive={false}\n        disabled={disabled}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n        value={selectedDate}\n      />\n    </DSInputGroup>\n  );\n};\n\nexport default DSDateTimePickerImpl;\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSDateTimePickerImpl from './components/DateTimePickerImpl';\nimport english from './lang/english';\n\nconst {\n  placeholder: placeholderDefault,\n  className: classNameDefault,\n  id: idDefault,\n} = english;\n\nconst DSDateTimePicker = ({\n  containerProps = {},\n  className = classNameDefault,\n  id = idDefault,\n  placeholder = placeholderDefault,\n  date = moment(),\n  datePickerProps = {\n    disabled: false,\n    numberOfMonths: 1,\n    readOnly: false,\n    enableOutsideDays: false,\n    transitionDuration: 0,\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    displayFormatDay: 'D',\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    zIndex: 11,\n  },\n  timePickerProps = {\n    format: 'hh:mm A',\n    onChange: () => null,\n  },\n}) => {\n  const { cssClassName } = convertPropToCssClassName(\n    'datetimepicker',\n    className,\n    {\n      id,\n    },\n  );\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDateTimePickerImpl\n        date={date}\n        datePickerProps={datePickerProps}\n        placeholder={placeholder}\n        timePickerProps={timePickerProps}\n      />\n    </div>\n  );\n};\n\nexport default DSDateTimePicker;\n\nDSDateTimePicker.propTypes = {\n  containerProps: PropTypes.object,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  /**\n   * Initial date, by default current date\n   */\n  date: PropTypes.instanceOf(Date, moment),\n  /**\n   * DatePicker properties\n   */\n  datePickerProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    numberOfMonths: PropTypes.number,\n    readOnly: PropTypes.bool,\n    enableOutsideDays: PropTypes.bool,\n    transitionDuration: PropTypes.number,\n    firstDayOfWeek: PropTypes.number,\n    keepOpenOnDateSelect: PropTypes.bool,\n    hideKeyboardShortcutsPanel: PropTypes.bool,\n    onPrevMonthClick: PropTypes.func,\n    onNextMonthClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onDateChange: PropTypes.func,\n    phrases: PropTypes.shape({\n      calendarLabel: PropTypes.string,\n      closeDatePicker: PropTypes.string,\n      clearDates: PropTypes.string,\n      focusStartDate: PropTypes.string,\n      jumpToPrevMonth: PropTypes.string,\n      jumpToNextMonth: PropTypes.string,\n      keyboardShortcuts: PropTypes.string,\n      showKeyboardShortcutsPanel: PropTypes.string,\n      hideKeyboardShortcutsPanel: PropTypes.string,\n      openThisPanel: PropTypes.string,\n      enterKey: PropTypes.string,\n      leftArrowRightArrow: PropTypes.string,\n      upArrowDownArrow: PropTypes.string,\n      pageUpPageDown: PropTypes.string,\n      homeEnd: PropTypes.string,\n      escape: PropTypes.string,\n      questionMark: PropTypes.string,\n      selectFocusedDate: PropTypes.string,\n      moveFocusByOneDay: PropTypes.string,\n      moveFocusByOneWeek: PropTypes.string,\n      moveFocusByOneMonth: PropTypes.string,\n      moveFocustoStartAndEndOfWeek: PropTypes.string,\n      returnFocusToInput: PropTypes.string,\n      keyboardNavigationInstructions: PropTypes.string,\n      chooseAvailableStartDate: PropTypes.func,\n      chooseAvailableEndDate: PropTypes.func,\n      dateIsUnavailable: PropTypes.func,\n      dateIsSelected: PropTypes.func,\n      /**\n       * ZIndex for the picker popup\n       */\n      zIndex: PropTypes.number,\n    }),\n    displayFormatDay: PropTypes.string,\n    isDayBlocked: PropTypes.func,\n    isOutsideRange: PropTypes.func,\n    isDayHighlighted: PropTypes.func,\n  }),\n  /**\n   * Input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * TimePicker properties\n   */\n  timePickerProps: PropTypes.shape({\n    format: PropTypes.string,\n    onChange: PropTypes.func,\n  }),\n};\n"],"sourceRoot":""}