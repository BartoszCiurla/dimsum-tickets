{"version":3,"sources":["../../../../src/Toolbar/decorateToolbarChildren.js","../../../src/CloseCircle.js","../../../../../../src/PageHeader/v2/components/blocks.js","../../../../../src/form/Input/InputAddonWrapper.js","../../../../src/Toolbar/DSToolbar.js","../../../../../../src/PageHeader/v2/components/PageHeaderTitle/PageHeaderTitle.js","../../../../../src/form/RequiredMark/RequiredMark.js","../../../../../src/form/Input/InputImpl.js","../../../../../src/form/Input/showEllipsis.js","../../../../../src/form/Input/DSInput.js","../../../../src/Tooltip/TooltipType.js","../../../../src/Tooltip/DSTooltip.js","../../../src/constants.js","../../../../../../src/PageHeader/v2/components/PageHeaderMenu/PageHeaderMenu.js","../../../../../../src/PageHeader/v2/components/PageHeaderToolbar/PageHeaderToolbar.js","../../../../../../src/PageHeader/v2/components/PageHeaderBack/PageHeaderBack.js","../../../../../src/PageHeader/v2/PageHeader.js"],"names":["children","extraProps","component","cloneElement","className","createIcon","paths","height","width","blockName","PageHeaderTitleWrapper","aggregatedClasses","PageHeaderBackWrapper","PageHeaderSummaryWrapper","PageHeaderMenuWrapper","PageHeaderToolbarWrapper","InputWrapper","InputAddon","left","right","variant","InputAddonWrapper","components","this","renderAddonComponent","Array","comp","containerProps","classProps","key","index","innerRef","rightComponents","leftComponents","InputComponent","React","hasError","readOnly","disabled","rightAddon","getRightAddon","leftAddon","getLeftAddon","Component","ToolbarContainer","withDepth","alignment","size","DSToolbar","autoFocusOnMount","otherProps","containerRef","useRef","getContainer","keyBindings","Tab","orientation","mergeRefs","decorateToolbarChildren","PropTypes","PageHeaderTitle","showMarker","rest","value","required","cssClassName","convertPropToCssClassName","optional","Input","clearable","WrapperForTooltipInput","InputCustomWrapper","ClearableButton","getValidComponents","noop","InputImpl","active","showTooltip","e","onBlur","onFocus","client","window","onClear","onChange","target","ref","current","focus","buttonType","data-testid","icon","onClick","handleClear","role","id","isShowElipsisActive","autoFocus","name","maxLength","minLength","placeholder","leftComponent","rightComponent","disableTooltip","onKeyDown","onKeyUp","onPaste","type","customInputType","min","max","onMouseLeave","onMouseOut","style","tabIndex","filter","inputProps","autocomplete","onMouseEnter","String","showEllipsis","isOpen","title","zIndex","triggerComponent","props","Error","fluidWidth","aria-label","TooltipType","TooltipContainer","TooltipText","DSTooltip","placement","PopperPositions","TOP","delayClose","delayOpen","interactionType","PopperInteractions","HOVER","undefined","onOpen","springAnimationComponent","tooltipType","showArrow","otherTooltipProps","tooltipBlockName","Content","contentComponent","getComponentFromProps","bool","PageHeaderMenu","PageHeaderToolbar","PageHeaderBack","Container","theme","styled","ContainerWBorder","DSPageHeaderV2","breadcrumbs","pageTitle","backarrow","summary","toolbar","menu","mainRow","compact","pageTitleRow","useState","activeEditing","setActiveEditing","activeEditingStyle","opacity","pointerEvents","cols","rows"],"mappings":"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","file":"static/js/29.3da9e781.chunk.js","sourcesContent":["import React, { cloneElement } from 'react';\n\nexport default (children, extraProps = {}) =>\n  React.Children.map(\n    children,\n    component =>\n      component\n        ? cloneElement(component, {\n            ...extraProps,\n            ...component.props,\n            className: `${component.props.className} toolbar-item`,\n          })\n        : component,\n    null,\n  );\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15 10.5c0 3.038-2.462 5.5-5.5 5.5S4 13.538 4 10.5 6.462 5 9.5 5 15 7.462 15 10.5zm-2.672-2.121l-.707-.707L9.5 9.793 7.379 7.672l-.707.707L8.793 10.5l-2.121 2.121.707.707L9.5 11.207l2.121 2.121.707-.707-2.121-2.121 2.121-2.121z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import { cssPrefix } from '@elliemae/ds-classnames/aggregatedClasses';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSInput from '@elliemae/ds-basic/form/Input';\n\nconst blockName = 'page-header-v2';\n\nexport const PageHeaderTitleWrapper = aggregatedClasses('div')(\n  `${blockName}-title`,\n  'title',\n);\nexport const EditableTitleComponent = aggregatedClasses(DSInput)(\n  `${blockName}-title`,\n  'editable-title',\n);\nexport const PageHeaderBackWrapper = aggregatedClasses('div')(\n  `${blockName}-back`,\n);\nexport const PageHeaderSummaryWrapper = aggregatedClasses('div')(\n  `${blockName}-summary`,\n);\nexport const PageHeaderMenuWrapper = aggregatedClasses('div')(\n  `${blockName}-menu`,\n);\nexport const PageHeaderToolbarWrapper = aggregatedClasses('div')(\n  `${blockName}-toolbar`,\n);\nexport { cssPrefix };\n","/* eslint-disable react/display-name */\nimport React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-wrapper';\n\nconst InputWrapper = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(\n  blockName,\n  'addon',\n  ({ left, right, variant }) => ({\n    left,\n    right,\n    [variant]: variant,\n  }),\n);\n\nexport default class InputAddonWrapper extends Component {\n  static defaultProps = {\n    rightComponents: [],\n    leftComponents: [],\n    containerProps: {},\n  };\n\n  getLeftAddon(components) {\n    return this.renderAddonComponent(true, components);\n  }\n\n  getRightAddon(components) {\n    return this.renderAddonComponent(false, components);\n  }\n\n  renderAddonComponent(left = true, components) {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      if (!components.filter(comp => comp).length) return null;\n    }\n    const { containerProps } = this.props;\n    const classProps = left ? { left: true } : { right: true };\n\n    return (\n      <InputAddon classProps={classProps} {...containerProps}>\n        {components.map(\n          (component, index) =>\n            component &&\n            React.cloneElement(component, { ...component.props, key: index }),\n        )}\n      </InputAddon>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      innerRef,\n      rightComponents,\n      leftComponents,\n      children,\n      variant,\n      containerProps,\n    } = this.props;\n\n    const InputComponent = React.Children.only(children);\n\n    const { hasError, readOnly, disabled } = InputComponent.props;\n\n    const rightAddon = this.getRightAddon([...rightComponents]);\n    const leftAddon = this.getLeftAddon([...leftComponents]);\n\n    return (\n      <InputWrapper\n        className={className}\n        classProps={{\n          hasError,\n          readOnly,\n          disabled,\n          variant,\n        }}\n        innerRef={innerRef}\n        {...containerProps}\n      >\n        {leftAddon}\n        {InputComponent}\n        {rightAddon}\n      </InputWrapper>\n    );\n  }\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport FocusGroupProvider from '@elliemae/ds-shared/FocusGroup/FocusGroupManager';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport decorateToolbarChildren from './decorateToolbarChildren';\nimport Item from './ToolbarItem';\nimport ToolbarGroup from './ToolbarGroup';\nimport Divider from './ToolbarDivider';\n\nconst blockName = 'toolbar';\n\nconst ToolbarContainer = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ withDepth, alignment, size }) => ({\n    'without-depth': !withDepth,\n    [alignment]: !!alignment,\n    [size]: size,\n  }),\n);\n\nconst DSToolbar = ({\n  containerProps = {},\n  innerRef,\n  withDepth = true,\n  alignment = 'right', // left || right\n  autoFocusOnMount = true,\n  children = [],\n  size = 'normal',\n  ...otherProps\n}) => {\n  const containerRef = useRef(null);\n  return (\n    <FocusGroupProvider\n      autoFocusOnMount={autoFocusOnMount}\n      getContainer={() => containerRef.current}\n      keyBindings={{\n        Tab: 'next',\n      }}\n      orientation=\"horizontal\"\n    >\n      <ToolbarContainer\n        {...containerProps}\n        {...otherProps}\n        classProps={{ withDepth, alignment, size }}\n        innerRef={mergeRefs(innerRef, containerRef)}\n      >\n        {decorateToolbarChildren(children)}\n      </ToolbarContainer>\n    </FocusGroupProvider>\n  );\n};\n\nDSToolbar.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Shows a shadow rear the toolbar */\n  withDepth: PropTypes.bool,\n  /** Aligns the toolbar to the left or right */\n  alignment: PropTypes.oneOf(['right', 'left']),\n  /** Toolbar size */\n  size: PropTypes.oneOf(['normal', 'compact']),\n};\n\nexport { Item as ToolbarItem, ToolbarGroup, Divider as ToolbarDivider };\n\nexport default DSToolbar;\n","import React from 'react';\nimport DSTruncatedTooltipText from '@elliemae/ds-basic/TruncatedTooltipText';\nimport RequiredMark from '@elliemae/ds-basic/form/RequiredMark';\nimport { PageHeaderTitleWrapper } from '../blocks';\n\nexport const PageHeaderTitle = ({ children, showMarker = false, ...rest }) => (\n  <PageHeaderTitleWrapper {...rest}>\n    <DSTruncatedTooltipText value={children} />\n    {showMarker && <RequiredMark required />}\n  </PageHeaderTitleWrapper>\n);\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst { cssClassName } = convertPropToCssClassName('form-required-mark');\nconst RequiredMark = ({ required = false, optional = false }) => {\n  if (!required && !optional) return null;\n  if (required) {\n    return <span className={`${cssClassName}`}>&#9679;</span>;\n  }\n  return <span className={`${cssClassName} optional-mark`}>&#9900;</span>;\n};\n\nexport default RequiredMark;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport CloseCircle from '@elliemae/ds-icons/CloseCircle';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport DSTooltip from '@elliemae/ds-basic/Tooltip';\nimport InputAddonWrapper from './InputAddonWrapper';\nimport { showEllipsis } from './showEllipsis';\n\nconst blockName = 'input';\nconst Input = aggregatedClasses('input')(\n  blockName,\n  null,\n  ({ clearable, value }) => ({\n    clearable,\n    value,\n  }),\n);\nconst WrapperForTooltipInput = aggregatedClasses('div')(\n  blockName,\n  'tooltip-ref',\n);\nconst InputCustomWrapper = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ clearable, value }) => ({\n    clearable,\n    value,\n  }),\n);\nconst ClearableButton = aggregatedClasses(DSButton)(blockName, 'clearable');\n\nconst getValidComponents = component => component;\n\nconst noop = () => null;\nclass InputImpl extends Component {\n  static defaultProps = {\n    onBlur: noop,\n    onFocus: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.refTooltip = React.createRef();\n  }\n\n  state = {\n    width: -1,\n    active: false,\n    showTooltip: false,\n  };\n\n  componentDidMount() {\n    this.setWidth();\n    window.addEventListener('resize', this.setWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWidth);\n  }\n\n  handleBlur = e => {\n    const { onBlur } = this.props;\n    onBlur(e);\n    this.setState({\n      active: false,\n    });\n  };\n\n  handleFocus = e => {\n    const { onFocus } = this.props;\n    onFocus(e);\n    this.setState({\n      active: true,\n    });\n  };\n\n  handleMouseEnter = () => {\n    this.setState({\n      showTooltip: true,\n    });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({\n      showTooltip: false,\n    });\n  };\n\n  setWidth = () => {\n    const client = this.refTooltip.current.getBoundingClientRect();\n    this.setState({\n      width: client.width,\n    });\n  };\n\n  handleClear() {\n    const { onClear, onChange, clearable } = this.props;\n    if (clearable && onClear) {\n      onClear();\n    } else {\n      onChange({ target: { value: '' } });\n    }\n\n    if ((this.ref || {}).current) this.ref.current.focus();\n  }\n\n  renderClearableComponent() {\n    const { clearable, value, disabled } = this.props;\n    if (disabled) return null;\n    return clearable && value ? (\n      <ClearableButton\n        buttonType=\"text\"\n        data-testid=\"ds-input_clearable-btn\"\n        disabled={disabled}\n        icon={<CloseCircle />}\n        onClick={this.handleClear}\n      />\n    ) : null;\n  }\n\n  render() {\n    const {\n      role,\n      id,\n      isShowElipsisActive,\n      autoFocus,\n      className,\n      name,\n      innerRef,\n      maxLength,\n      minLength,\n      placeholder,\n      leftComponent,\n      rightComponent,\n      disableTooltip,\n      readOnly,\n      disabled,\n      value,\n      onClick,\n      onChange,\n      onKeyDown,\n      onKeyUp,\n      onFocus,\n      onBlur,\n      onPaste,\n      required,\n      type,\n      customInputType,\n      min,\n      max,\n      clearable,\n      onMouseLeave,\n      onMouseOut,\n      style,\n      containerProps,\n      tabIndex,\n      ...rest\n    } = this.props;\n    const { width, active, showTooltip } = this.state;\n    const rightComponents = [\n      this.renderClearableComponent(),\n      rightComponent,\n    ].filter(getValidComponents);\n    const leftComponents = [leftComponent].filter(getValidComponents);\n\n    const inputProps = {\n      'aria-label': rest['aria-label'],\n      'aria-placeholder': placeholder,\n      'aria-required': required,\n      'aria-multiline': false,\n      'aria-autocomplete': 'none',\n      'data-testid': rest['data-testid'],\n      role,\n      id,\n      ref: this.ref,\n      className,\n      autoFocus,\n      disabled: disabled || readOnly,\n      innerRef,\n      maxLength,\n      minLength,\n      name,\n      onBlur,\n      onChange,\n      onClick,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      onPaste,\n      onMouseLeave,\n      disableTooltip,\n      onMouseOut,\n      placeholder,\n      required,\n      type,\n      value,\n      min,\n      max,\n      style,\n      tabIndex,\n      ...containerProps,\n    };\n\n    let InputComponent = (\n      <WrapperForTooltipInput ref={this.refTooltip} style={{ width: '100%' }}>\n        {!customInputType ? (\n          <Input\n            {...inputProps}\n            autocomplete=\"off\"\n            clearable={clearable}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            value={value}\n          />\n        ) : (\n          <InputCustomWrapper\n            {...containerProps}\n            clearable={clearable}\n            value={value}\n          >\n            {customInputType({\n              ...inputProps,\n            })}\n          </InputCustomWrapper>\n        )}\n      </WrapperForTooltipInput>\n    );\n    if (\n      showEllipsis(width, value) &&\n      !active &&\n      showTooltip &&\n      width &&\n      isShowElipsisActive\n    ) {\n      InputComponent = (\n        <DSTooltip\n          isOpen={disableTooltip}\n          title={String(value)}\n          zIndex={11}\n          triggerComponent={\n            <WrapperForTooltipInput style={{ width: '100%' }}>\n              {InputComponent}\n            </WrapperForTooltipInput>\n          }\n        />\n      );\n    }\n\n    const renderInput =\n      rightComponents.length || leftComponents.length || clearable ? (\n        <InputAddonWrapper\n          className={className}\n          leftComponents={leftComponents}\n          rightComponents={rightComponents}\n          {...containerProps}\n        >\n          {InputComponent}\n        </InputAddonWrapper>\n      ) : (\n        InputComponent\n      );\n\n    return renderInput;\n  }\n}\n\nInputImpl.propTypes = {\n  className: PropTypes.string,\n  customInputType: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isShowElipsisActive: PropTypes.bool,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onPaste: PropTypes.func,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  role: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Should be of type string if using ellipsis tooltip [isShowElipsisActive] prop\n   *\n   * @param props\n   * @param propName\n   * @param componentName\n   */\n  value(props, propName, componentName) {\n    // eslint-disable-line consistent-return\n    if (!!props.isShowElipsisActive && typeof props[propName] !== 'string') {\n      return new Error(\n        `Invalid prop \\`${propName}\\` of type \\`${typeof props[\n          propName\n        ]}\\` supplied to` +\n          ` \\`${componentName}\\`. Prop \\`value\\` should be of type \\`string\\` if prop \\`isShowElipsisActive\\` is set to \\`true\\`.` +\n          ' Either set `isShowElipsisActive` to `false`, or properly format your `value` prop to `string`.',\n      );\n    }\n  },\n};\n\nexport default InputImpl;\n","export function showEllipsis(width, value) {\n  return String(value).length * 8 > width;\n}\n","import React from 'react';\nimport InputImpl from './InputImpl';\nimport InputAddonWrapper from './InputAddonWrapper';\n\nconst DSInput = ({\n  containerProps = {},\n  id,\n  autoFocus = false,\n  disabled = false,\n  className = '',\n  clearable = false,\n  name = '',\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  disableTooltip = true,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  customInputType = null,\n  variant,\n  isShowElipsisActive = true,\n  ...otherProps\n}) => (\n  <InputImpl\n    {...otherProps}\n    aria-label={otherProps['aria-label']}\n    autoFocus={autoFocus}\n    className={className}\n    clearable={clearable}\n    containerProps={containerProps}\n    customInputType={customInputType}\n    data-testid={otherProps['data-testid'] || 'ds-input_main-component'}\n    disabled={disabled}\n    disableTooltip={disableTooltip}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    id={id}\n    innerRef={innerRef}\n    isShowElipsisActive={isShowElipsisActive}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    name={name}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nexport { InputAddonWrapper };\n\nexport default DSInput;\n","export const TooltipType = {\n  TOOLTIP: 'tooltip',\n  TOOLBAR: 'toolbar',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  aggregatedClasses,\n  convertPropToCssClassName,\n} from '@elliemae/ds-classnames';\nimport DSPopper, {\n  PopperPositions,\n  PopperInteractions,\n} from '@elliemae/ds-basic/Popper';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport {\n  DEFAULT_DELAY_OPEN,\n  DEFAULT_DELAY_CLOSE,\n} from '@elliemae/ds-shared/constants';\nimport { TooltipType } from './TooltipType';\nimport { interactions } from '../Popper/interaction';\nimport { positions } from '../Popper/positions';\n\nconst blockName = 'tooltip';\n\nconst TooltipContainer = aggregatedClasses('div')(blockName);\nconst TooltipText = aggregatedClasses('span')(blockName, 'text');\n\nconst DSTooltip = ({\n  containerProps = {},\n  innerRef,\n  placement = PopperPositions.TOP,\n  title = '',\n  delayClose = DEFAULT_DELAY_CLOSE,\n  delayOpen = DEFAULT_DELAY_OPEN,\n  interactionType = PopperInteractions.HOVER,\n  triggerComponent = null,\n  className = '',\n  isOpen = undefined,\n  onOpen = () => null,\n  springAnimationComponent = undefined,\n  tooltipType = TooltipType.TOOLTIP,\n  showArrow = true,\n  zIndex,\n  ...otherTooltipProps\n}) => {\n  const { cssClassName: tooltipBlockName } = convertPropToCssClassName(\n    blockName,\n  );\n\n  let Content = title;\n  if (typeof title === 'string') {\n    Content = <TooltipText>{title}</TooltipText>;\n  }\n\n  return (\n    <DSPopper\n      blockName={tooltipBlockName}\n      contentComponent={\n        <TooltipContainer\n          {...containerProps}\n          {...otherTooltipProps}\n          className={`tooltip-container--${tooltipType} ${className}`}\n          innerRef={innerRef}\n        >\n          {Content}\n        </TooltipContainer>\n      }\n      delayClose={delayClose}\n      delayOpen={delayOpen}\n      interactionType={interactionType}\n      isOpen={isOpen}\n      onOpen={onOpen}\n      placement={placement}\n      showArrow={tooltipType === TooltipType.TOOLTIP ? showArrow : false}\n      springAnimationComponent={springAnimationComponent}\n      triggerComponent={getComponentFromProps(triggerComponent)}\n      zIndex={zIndex}\n    />\n  );\n};\n\nDSTooltip.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Tooltip position */\n  placement: PropTypes.oneOf(positions),\n  /** Tooltip content */\n  title: PropTypes.string,\n  /** Delay to close the tooltip */\n  delayClose: PropTypes.string,\n  /** Delay to open the tooltip */\n  delayOpen: PropTypes.string,\n  /** A type indicating how to open/close the tooltip */\n  interactionType: PropTypes.oneOf(interactions),\n  /** The component that will trigger the open/close interaction */\n  triggerComponent: PropTypes.element,\n  /** Whether the tooltip is visible or not */\n  isOpen: PropTypes.bool,\n  /** Handler when the tooltip opens */\n  onOpen: PropTypes.func,\n  /** Spring animation component */\n  springAnimationComponent: PropTypes.element,\n  /** Whether to show an arrow or not */\n  showArrow: PropTypes.bool,\n};\n\nexport { TooltipType, TooltipContainer, TooltipText };\nexport default DSTooltip;\n","export const DEFAULT_DELAY_OPEN = 200;\nexport const DEFAULT_DELAY_CLOSE = 300;\nexport const sizeOptions = ['small', 'medium', 'large', 'x-large'];\n","import React from 'react';\nimport { PageHeaderMenuWrapper } from '../blocks';\n\nexport const PageHeaderMenu = ({ children, ...rest }) => (\n  <PageHeaderMenuWrapper {...rest}>{children}</PageHeaderMenuWrapper>\n);\n","import React from 'react';\nimport { PageHeaderToolbarWrapper } from '../blocks';\n\nexport const PageHeaderToolbar = ({ children, ...rest }) => (\n  <PageHeaderToolbarWrapper {...rest}>{children}</PageHeaderToolbarWrapper>\n);\n","import React from 'react';\nimport { PageHeaderBackWrapper } from '../blocks';\n\nexport const PageHeaderBack = ({ children, ...rest }) => (\n  <PageHeaderBackWrapper {...rest}>{children}</PageHeaderBackWrapper>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { compact } from 'lodash';\nimport { Grid } from '@elliemae/ds-basic/Grid';\nimport styled from 'styled-components';\nimport theme from '@elliemae/ds-system/theme';\nimport { PageHeaderTitle } from './components/PageHeaderTitle/PageHeaderTitle';\nimport { PageHeaderEditableTitle } from './components/PageHeaderEditableTitle/PageHeaderEditableTitle';\nimport { PageHeaderSummary } from './components/PageHeaderSummary/PageHeaderSummary';\nimport { PageHeaderMenu } from './components/PageHeaderMenu/PageHeaderMenu';\nimport { PageHeaderToolbar } from './components/PageHeaderToolbar/PageHeaderToolbar';\nimport { PageHeaderBack } from './components/PageHeaderBack/PageHeaderBack';\nimport { cssPrefix } from './components/blocks';\n\nconst PageHeaderCustomRenderer = styled.div`\n  width: auto;\n  color: ${theme.colors.brand[800]};\n  font-style: italic;\n  font-size: 0.8rem;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin-bottom: 4px;\n`;\nconst ContainerWBorder = styled.div`\n  width: 100%;\n  padding-bottom: 4px;\n  border-bottom: solid 1px ${theme.colors.neutral[400]};\n`;\nconst getActiveEditing = editing =>\n  editing\n    ? {\n        opacity: 0.5,\n        pointerEvents: 'none',\n      }\n    : {};\n\nexport const DSPageHeaderV2 = ({\n  containerProps = {},\n  breadcrumbs = null,\n  pageTitle = null,\n  backarrow = null,\n  summary = null,\n  toolbar = null,\n  menu = null,\n}) => {\n  const wrapperRow = ['auto', 1];\n  const mainRow = compact([1, '268px']);\n  const pageTitleRow = compact(['auto', menu && '30px', summary && 'auto', 1]);\n  const [activeEditing, setActiveEditing] = useState(false);\n  const activeEditingStyle = getActiveEditing(activeEditing);\n  return (\n    <Container {...containerProps}>\n      <ContainerWBorder>\n        <Grid cols={wrapperRow}>\n          <Grid>\n            <PageHeaderBack style={activeEditingStyle}>\n              {backarrow}\n            </PageHeaderBack>\n          </Grid>\n          <Grid rows={['auto', 'auto']}>\n            <Grid\n              className={`${cssPrefix}-page-header-v2-breadcrumb`}\n              style={activeEditingStyle}\n            >\n              {breadcrumbs}\n            </Grid>\n            <Grid cols={mainRow}>\n              <Grid cols={pageTitleRow}>\n                {React.cloneElement(pageTitle, {\n                  onBlur: e => {\n                    setActiveEditing(false);\n                    if (pageTitle.props.onBlur) pageTitle.props.onBlur(e);\n                  },\n                  onFocus: e => {\n                    setActiveEditing(true);\n                    if (pageTitle.props.onFocus) pageTitle.props.onFocus(e);\n                  },\n                })}\n                {menu && <PageHeaderMenu>{menu}</PageHeaderMenu>}\n                {summary}\n                <div />\n              </Grid>\n              <Grid>\n                <PageHeaderToolbar>{toolbar}</PageHeaderToolbar>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </ContainerWBorder>\n    </Container>\n  );\n};\n\nDSPageHeaderV2.propTypes = {\n  containerProps: PropTypes.shape({}),\n};\n\nexport {\n  PageHeaderTitle,\n  PageHeaderEditableTitle,\n  PageHeaderSummary,\n  PageHeaderMenu,\n  PageHeaderCustomRenderer,\n};\n"],"sourceRoot":""}