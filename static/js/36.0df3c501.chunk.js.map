{"version":3,"sources":["../../../../../src/components/DatePickerPicker/DatePickerPicker.js","../../../src/DatePicker.js","../../../../src/components/DatePickerDropdown.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../../src/operators.js","../../../../src/components/DSDatePickerImpl.js","../../../src/DSDatePicker.js"],"names":["Picker","className","disabled","icon","size","DSIconSizes","buttonActionType","onClick","onBlur","readOnly","tabIndex","rest","aria-label","buttonType","color","DSIconColors","PickerPropsTypes","PropTypes","onFocus","number","createIcon","paths","height","width","classNameElement","convertPropToCssClassName","noop","DatePickerDropdown","isOpen","menu","zIndex","pickerProps","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","Container","aggregatedClasses","InputAddon","AddonWrapper","this","leftAddon","rightAddon","inputComponent","containerProps","childType","Component","DSInputGroup","innerRef","style","InputComponents","ref","children","element","isNull","a","value","DSdatePickerImpl","inputFocused","date","defaultValue","primaryInput","selectedDate","dataInput","moment","maskFocus","safeValue","Boolean","onDateChange","keepOpenOnDateSelect","event","momentvalue","focused","onClose","undefined","numberOfMonths","enableOutsideDays","transitionDuration","firstDayOfWeek","hideKeyboardShortcutsPanel","onPrevMonthClick","onNextMonthClick","phrases","placeholder","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","safedate","safeInputValue","minHeight","onClickEscape","onFocusChange","onOutsideClick","mask","MASK_TYPES","onChange","pipe","MASK_PIPES","nextProps","prevProps","React","DSDatePicker","id","appendToBody","required","hasError","screenReaderInputMessage","initialVisibleMonth","SingleDatePickerPhrases","displayFormat","verticalSpacing","openDirection","cssClassName","safeDate","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected","func"],"mappings":"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","file":"static/js/36.0df3c501.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../utils/prop-types';\n\nexport const Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  tabIndex = 0,\n  ...rest\n}) => (\n  <DSButton\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n    tabIndex={tabIndex}\n  />\n);\n\nexport const PickerPropsTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.number,\n};\n\nPicker.propTypes = PickerPropsTypes;\nexport default Picker;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker, {\n  PickerPropsTypes,\n} from './DatePickerPicker/DatePickerPicker';\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n  pickerProps,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            {...pickerProps}\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n  pickerProps: PickerPropsTypes,\n};\n\nexport default DatePickerDropdown;\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nDSInputGroup.propTypes = {\n  containerProps: PropTypes.shape({}),\n  innerRef: PropTypes.func,\n  className: PropTypes.string,\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element,\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element,\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element,\n};\n\nexport default DSInputGroup;\n","/**\n * Check if the value is null undefined ''\n *\n * @param value\n */\nexport const checkNotEmpty = value =>\n  value === '' || value === undefined || value === null;\n\n/**\n * @param value: number\n * @param comparator: number\n * @param value\n * @param comparator\n */\nexport const greaterThan = (value, comparator) => value > comparator;\n\n/**\n * Check if a valid date with format MM/DD/YYYY\n *\n * @param {*} value: string\n * @param value\n */\nexport const validDate = value => {\n  const dateValidationRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\n  if (!dateValidationRegex.test(value)) return false;\n  const [m, d, y] = value.split('/').map(n => Number(n));\n  return (\n    m === Number(new Date(y, m - 1, d).getMonth()) + 1 &&\n    d === Number(new Date(y, m - 1, d).getDate())\n  );\n};\n\nexport const equal = (a, b) => a === b;\n\nexport const notEqual = (a, b) => !equal(a, b);\n\nexport const isNull = a => checkNotEmpty(a);\n\nexport const isNotNull = a => !isNull(a);\n\nexport const isIn = (a, b) => b.indexOf(a) > -1;\n\nexport const isNotIn = (a, b) => !isIn(a, b);\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport moment from 'moment';\nimport DSInputMask, {\n  MASK_TYPES,\n  MASK_PIPES,\n} from '@elliemae/ds-basic/form/InputMask';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport { isNull } from '@elliemae/ds-utilities/operators';\nimport DSDatePickerController from './DatePickerController/DatePickerController';\nimport DatePickerDropdown from './DatePickerDropdown';\n\nexport default class DSdatePickerImpl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: this.getSafeValue(),\n      inputFocused: false,\n      maskFocus: false,\n      primaryInput: true,\n    };\n  }\n\n  state = {};\n\n  static getDerivedStateFromProps(nextProps, prevProps) {\n    if (nextProps.value !== prevProps.value) {\n      return {\n        selectedDate: nextProps.value ? moment(nextProps.value) : '',\n      };\n    }\n    if (nextProps.date !== prevProps.value) {\n      return {\n        selectedDate: nextProps.date ? moment(nextProps.date) : '',\n      };\n    }\n\n    return null;\n  }\n\n  onClickPicker = () => {\n    this.setState({ inputFocused: true });\n  };\n\n  getSafeValue = () => {\n    const { value, date, defaultValue } = this.props;\n    const { primaryInput, selectedDate, dataInput } = this.state;\n    if (value) {\n      return moment(value);\n    }\n    if (date) {\n      return moment(date);\n    }\n    if (defaultValue) {\n      return moment(defaultValue);\n    }\n    if (primaryInput && dataInput) {\n      return moment(dataInput.target.value);\n    }\n    if (selectedDate) {\n      return selectedDate;\n    }\n    return null;\n  };\n\n  getSafeInputValue = () => {\n    const { dataInput, primaryInput, maskFocus } = this.state;\n    const { value } = this.props;\n    const safeValue = this.getSafeValue();\n\n    if (isNull(value)) return '';\n    if (\n      safeValue &&\n      dataInput &&\n      !maskFocus &&\n      safeValue.format('MM/DD/YYYY') !== dataInput.target.value\n    ) {\n      return safeValue.format('MM/DD/YYYY');\n    }\n    if (primaryInput && dataInput) return dataInput.target.value;\n\n    if (!safeValue) return '';\n    return safeValue.format('MMDDYYYY');\n  };\n\n  isControlled = () => {\n    const { value, date } = this.props;\n    return Boolean(value) || Boolean(date);\n  };\n\n  handleDateChange = (date, event) => {\n    const { readOnly, onDateChange, keepOpenOnDateSelect } = this.props;\n    if (!readOnly) {\n      if (!this.isControlled()) {\n        this.setState({ selectedDate: date, primaryInput: false });\n      }\n      onDateChange(date);\n      this.setState({ primaryInput: false });\n      if (!keepOpenOnDateSelect || event.key === 'Enter')\n        this.setState({ inputFocused: false });\n    }\n  };\n\n  handleChange = dataInput => {\n    const { onDateChange } = this.props;\n    const momentvalue = moment(dataInput.target.value);\n    this.setState({ selectedDate: momentvalue, dataInput, primaryInput: true });\n    onDateChange(momentvalue);\n  };\n\n  handleFocus = ({ focused }) => {\n    this.setState({ inputFocused: focused });\n  };\n\n  handleCalendarClose = () => {\n    const { onClose } = this.props;\n\n    this.setState({ inputFocused: false });\n    this.handleOnBlur();\n    onClose();\n  };\n\n  handleClickEscape = () => {\n    const { onClose } = this.props;\n\n    this.setState({ inputFocused: false });\n    this.handleOnBlur();\n    onClose();\n  };\n\n  handleOnBlur = () => {\n    const { onBlur } = this.props;\n    const { selectedDate } = this.state;\n\n    this.setState({ maskFocus: false, dataInput: undefined });\n    onBlur(selectedDate);\n  };\n\n  handleInputFocus = dataInput => {\n    const { onFocus } = this.props;\n    this.setState({ maskFocus: true });\n    onFocus(dataInput);\n  };\n\n  render() {\n    const { inputFocused } = this.state;\n    const {\n      disabled,\n      numberOfMonths,\n      readOnly,\n      enableOutsideDays,\n      transitionDuration,\n      firstDayOfWeek,\n      keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel,\n      onPrevMonthClick,\n      onNextMonthClick,\n      onClose,\n      phrases,\n      placeholder,\n      displayFormatDay,\n      isDayBlocked,\n      isOutsideRange,\n      isDayHighlighted,\n      tabIndex,\n      zIndex,\n      pickerProps,\n    } = this.props;\n    const safedate = this.getSafeValue();\n    const safeInputValue = this.getSafeInputValue();\n    return (\n      <DSInputGroup\n        rightAddon={\n          <DatePickerDropdown\n            disabled={disabled}\n            isOpen={inputFocused}\n            menu={\n              <div style={{ minHeight: '310px' }}>\n                <DSDatePickerController\n                  date={safedate}\n                  displayFormatDay={displayFormatDay}\n                  enableOutsideDays={enableOutsideDays}\n                  firstDayOfWeek={firstDayOfWeek}\n                  hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                  isDayBlocked={isDayBlocked}\n                  isDayHighlighted={isDayHighlighted}\n                  isOutsideRange={isOutsideRange}\n                  keepOpenOnDateSelect={keepOpenOnDateSelect}\n                  numberOfMonths={numberOfMonths}\n                  onClickEscape={this.handleClickEscape}\n                  onClose={onClose}\n                  onDateChange={this.handleDateChange(event)}\n                  onFocusChange={this.handleFocus}\n                  onNextMonthClick={onNextMonthClick}\n                  onOutsideClick={this.handleCalendarClose}\n                  onPrevMonthClick={onPrevMonthClick}\n                  phrases={phrases}\n                  transitionDuration={transitionDuration}\n                />\n              </div>\n            }\n            onClick={this.onClickPicker}\n            readOnly={readOnly}\n            zIndex={zIndex}\n            pickerProps={pickerProps}\n          />\n        }\n      >\n        <DSInputMask\n          aria-label={placeholder || 'Date Picker Input Mask'}\n          disabled={disabled}\n          mask={MASK_TYPES.DATE}\n          onBlur={this.handleOnBlur}\n          onChange={this.handleChange}\n          onFocus={this.handleInputFocus}\n          pipe={MASK_PIPES.AUTO_CORRECT_DATE}\n          placeholder={placeholder}\n          tabIndex={tabIndex}\n          value={safeInputValue}\n        />\n      </DSInputGroup>\n    );\n  }\n}\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport 'react-dates/initialize';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  DatePickerNavigation,\n  DatePickerDay,\n  DatePickerPicker,\n  DatePickerDropdown,\n  DatePickerSingleDate,\n  DatePickerHeader,\n  DatePickerRange,\n  DatePickerRangeHeader,\n  SingleRangeDateSwitcher,\n} from './components';\nimport DSDatePickerImpl from './components/DSDatePickerImpl';\nimport DSDatePickerController from './components/DatePickerController/DatePickerController';\nimport { PickerPropsTypes, Picker } from './components/DatePickerPicker/DatePickerPicker'\n\nconst DSDatePicker = ({\n  containerProps = {},\n  id = '',\n  appendToBody = true,\n  className = '',\n  date,\n  value,\n  placeholder = '',\n  disabled = false,\n  required = false,\n  readOnly = false,\n  hasError = false,\n  screenReaderInputMessage = 'Select date',\n  enableOutsideDays = true,\n  initialVisibleMonth = moment(),\n  firstDayOfWeek = 0,\n  keepOpenOnDateSelect = true,\n  hideKeyboardShortcutsPanel = true,\n  onChange = () => null,\n  onDateChange = undefined,\n  onPrevMonthClick = () => null,\n  onNextMonthClick = () => null,\n  onClose = () => null,\n  onFocus = () => null,\n  onBlur = () => null,\n  phrases = SingleDatePickerPhrases,\n  displayFormat = 'L',\n  displayFormatDay = 'D',\n  transitionDuration = 0,\n  verticalSpacing = 0,\n  isDayBlocked = () => false,\n  isOutsideRange = () => false,\n  isDayHighlighted = () => false,\n  numberOfMonths = 1,\n  openDirection = 'down',\n  zIndex = 'auto',\n  pickerProps = {},\n}) => {\n  const { cssClassName } = convertPropToCssClassName('datepicker', className, {\n    hasError,\n    readOnly,\n    disabled,\n    id,\n  });\n  const safeDate = date || value;\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDatePickerImpl\n        appendToBody={appendToBody}\n        date={safeDate}\n        disabled={disabled}\n        displayFormat={displayFormat}\n        displayFormatDay={displayFormatDay}\n        enableOutsideDays={enableOutsideDays}\n        firstDayOfWeek={firstDayOfWeek}\n        hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n        initialVisibleMonth={() =>\n          initialVisibleMonth ? moment(initialVisibleMonth) : moment(safeDate)\n        }\n        isDayBlocked={isDayBlocked}\n        isDayHighlighted={isDayHighlighted}\n        isOutsideRange={\n          isOutsideRange === true || isOutsideRange === false\n            ? () => isOutsideRange\n            : isOutsideRange\n        }\n        keepOpenOnDateSelect={keepOpenOnDateSelect}\n        numberOfMonths={numberOfMonths}\n        onBlur={onBlur}\n        onClose={onClose}\n        onDateChange={(...args) => {\n          if (onDateChange) onDateChange(...args);\n          if (onChange) onChange(...args);\n        }}\n        onFocus={onFocus}\n        onNextMonthClick={onNextMonthClick}\n        onPrevMonthClick={onPrevMonthClick}\n        openDirection={openDirection}\n        phrases={phrases}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        required={required}\n        screenReaderInputMessage={screenReaderInputMessage}\n        transitionDuration={transitionDuration}\n        value={safeDate}\n        verticalSpacing={verticalSpacing}\n        zIndex={zIndex}\n        pickerProps={pickerProps}\n      />\n    </div>\n  );\n};\n\nDSDatePicker.propTypes = {\n  containerProps: PropTypes.shape({}),\n  id: PropTypes.string,\n  appendToBody: PropTypes.bool,\n  className: PropTypes.string,\n  date: PropTypes.instanceOf(Date, moment),\n  value: PropTypes.instanceOf(Date, moment),\n  // eslint-disable-next-line max-lines\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  hasError: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  enableOutsideDays: PropTypes.bool,\n  initialVisibleMonth: PropTypes.instanceOf(Date, moment),\n  firstDayOfWeek: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  hideKeyboardShortcutsPanel: PropTypes.bool,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClose: PropTypes.func,\n  onFocus: PropTypes.func,\n  phrases: PropTypes.shape({\n    calendarLabel: PropTypes.string,\n    closeDatePicker: PropTypes.string,\n    clearDates: PropTypes.string,\n    focusStartDate: PropTypes.string,\n    jumpToPrevMonth: PropTypes.string,\n    jumpToNextMonth: PropTypes.string,\n    keyboardShortcuts: PropTypes.string,\n    showKeyboardShortcutsPanel: PropTypes.string,\n    hideKeyboardShortcutsPanel: PropTypes.string,\n    openThisPanel: PropTypes.string,\n    enterKey: PropTypes.string,\n    leftArrowRightArrow: PropTypes.string,\n    upArrowDownArrow: PropTypes.string,\n    pageUpPageDown: PropTypes.string,\n    homeEnd: PropTypes.string,\n    escape: PropTypes.string,\n    questionMark: PropTypes.string,\n    selectFocusedDate: PropTypes.string,\n    moveFocusByOneDay: PropTypes.string,\n    moveFocusByOneWeek: PropTypes.string,\n    moveFocusByOneMonth: PropTypes.string,\n    moveFocustoStartAndEndOfWeek: PropTypes.string,\n    returnFocusToInput: PropTypes.string,\n    keyboardNavigationInstructions: PropTypes.string,\n    chooseAvailableStartDate: PropTypes.func,\n    chooseAvailableEndDate: PropTypes.func,\n    dateIsUnavailable: PropTypes.func,\n    dateIsSelected: PropTypes.func,\n  }),\n  displayFormat: PropTypes.string,\n  displayFormatDay: PropTypes.string,\n  transitionDuration: PropTypes.number,\n  verticalSpacing: PropTypes.number,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  numberOfMonths: PropTypes.number,\n  openDirection: PropTypes.string,\n  tabIndex: PropTypes.string,\n  zIndex: PropTypes.string,\n  pickerProps: PickerPropsTypes,\n};\n\nexport {\n  DatePickerNavigation,\n  DatePickerDay,\n  DatePickerPicker,\n  DSDatePickerController,\n  DatePickerDropdown,\n  DatePickerSingleDate,\n  DatePickerHeader,\n  DatePickerRange,\n  DatePickerRangeHeader,\n  SingleRangeDateSwitcher,\n  Picker,\n};\n\nexport default DSDatePicker;\n"],"sourceRoot":""}